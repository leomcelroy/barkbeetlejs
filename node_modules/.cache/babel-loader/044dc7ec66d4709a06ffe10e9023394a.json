{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport MenuItem from './MenuItem';\nimport MenuDivider from './MenuDivider';\nimport MenuGroup from './MenuGroup';\nimport MenuOption from './MenuOption';\nimport MenuOptionsGroup from './MenuOptionsGroup';\nvar KeyCodes = {\n  ArrowUp: 38,\n  ArrowDown: 40,\n  Home: 36,\n  End: 35\n};\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Menu, _React$PureComponent);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMenuRef\", function (ref) {\n      _this.menuRef = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this; // Get the menu item buttons\n      // eslint-disable-next-line unicorn/prefer-spread\n\n\n      this.menuItems = Array.from(this.menuRef.querySelectorAll('[role=\"menuitemradio\"], [role=\"menuitem\"]'));\n\n      if (this.menuItems.length === 0) {\n        throw new Error('The menu has no menu items');\n      }\n\n      this.firstItem = this.menuItems[0];\n      this.lastItem = this.menuItems[this.menuItems.length - 1];\n\n      var focusNext = function focusNext(currentItem, startItem) {\n        // Determine which item is the startItem (first or last)\n        var goingDown = startItem === _this2.firstItem; // Helper function for getting next legitimate element\n\n        var move = function move(elem) {\n          var indexOfItem = _this2.menuItems.indexOf(elem);\n\n          if (goingDown) {\n            if (indexOfItem < _this2.menuItems.length - 1) {\n              return _this2.menuItems[indexOfItem + 1];\n            }\n\n            return startItem;\n          }\n\n          if (indexOfItem - 1 > -1) {\n            return _this2.menuItems[indexOfItem - 1];\n          }\n\n          return startItem;\n        }; // Make first move\n\n\n        var nextItem = move(currentItem); // If the menuitem is disabled move on\n\n        while (nextItem.disabled) {\n          nextItem = move(nextItem);\n        } // Focus the first one that's not disabled\n\n\n        nextItem.focus();\n      };\n\n      this.menuItems.forEach(function (menuItem) {\n        // Handle key presses for menuItem\n        menuItem.addEventListener('keydown', function (e) {\n          // Go to next/previous item if it exists\n          // or loop around\n          if (e.keyCode === KeyCodes.ArrowDown) {\n            e.preventDefault();\n            focusNext(menuItem, _this2.firstItem);\n          }\n\n          if (e.keyCode === KeyCodes.ArrowUp) {\n            e.preventDefault();\n            focusNext(menuItem, _this2.lastItem);\n          }\n\n          if (e.keyCode === KeyCodes.Home) {\n            e.preventDefault();\n\n            _this2.firstItem.focus();\n          }\n\n          if (e.keyCode === KeyCodes.End) {\n            e.preventDefault();\n\n            _this2.lastItem.focus();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(Pane, {\n        is: \"nav\",\n        innerRef: this.onMenuRef,\n        role: \"menu\",\n        outline: \"none\"\n      }, children);\n    }\n  }]);\n\n  return Menu;\n}(React.PureComponent);\n\nMenu.displayName = \"Menu\";\n\n_defineProperty(Menu, \"Item\", MenuItem);\n\n_defineProperty(Menu, \"Divider\", MenuDivider);\n\n_defineProperty(Menu, \"Group\", MenuGroup);\n\n_defineProperty(Menu, \"Option\", MenuOption);\n\n_defineProperty(Menu, \"OptionsGroup\", MenuOptionsGroup);\n\n_defineProperty(Menu, \"propTypes\", {\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node\n});\n\nexport { Menu as default };","map":null,"metadata":{},"sourceType":"module"}