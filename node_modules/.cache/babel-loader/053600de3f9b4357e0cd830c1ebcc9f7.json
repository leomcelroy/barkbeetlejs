{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar React = require('react');\n\nvar blacklist = require('blacklist');\n\nvar Button = require('./Button');\n\nvar Spinner = require('./Spinner');\n\nmodule.exports = React.createClass({\n  displayName: 'FileUpload',\n  propTypes: {\n    buttonLabelChange: React.PropTypes.string,\n    buttonLabelInitial: React.PropTypes.string,\n    disabled: React.PropTypes.bool,\n    file: React.PropTypes.object,\n    // https://developer.mozilla.org/en/docs/Using_files_from_web_applications\n    onChange: React.PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      buttonLabelInitial: 'Upload File',\n      buttonLabelChange: 'Change File'\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      dataURI: null,\n      file: {},\n      loading: false\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.refs.fileInput.addEventListener('click', function () {\n      this.value = '';\n    }, false);\n  },\n  triggerFileBrowser: function triggerFileBrowser() {\n    this.refs.fileInput.click();\n  },\n  handleChange: function handleChange(e) {\n    var _this = this;\n\n    var reader = new FileReader();\n    var file = e.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onloadstart = function () {\n      _this.setState({\n        loading: true\n      });\n    };\n\n    reader.onloadend = function (upload) {\n      _this.setState({\n        loading: false,\n        file: file,\n        dataURI: upload.target.result\n      });\n\n      if (typeof _this.props.onChange === 'function') {\n        _this.props.onChange(e, {\n          file: file,\n          dataURI: upload.target.result\n        });\n      }\n    };\n  },\n  cancelUpload: function cancelUpload(e) {\n    this.setState({\n      dataURI: null,\n      file: {}\n    });\n    this.props.onChange(e, null);\n  },\n  render: function render() {\n    var _state = this.state;\n    var dataURI = _state.dataURI;\n    var file = _state.file; // props\n\n    var props = blacklist(this.props, 'buttonClassChange', 'buttonClassInitial', 'buttonLabelChange', 'buttonLabelInitial', 'disabled', 'file', 'onChange'); // elements\n\n    var component = dataURI ? React.createElement('div', {\n      className: 'FileUpload'\n    }, React.createElement('div', {\n      className: 'FileUpload__image'\n    }, React.createElement('img', {\n      className: 'FileUpload__image-src',\n      src: dataURI\n    })), React.createElement('div', {\n      className: 'FileUpload__content'\n    }, React.createElement('div', {\n      className: 'FileUpload__message'\n    }, file.name, ' (', Math.round(file.size / 1024), 'Kb)'), React.createElement('div', {\n      className: 'FileUpload__buttons'\n    }, React.createElement(Button, {\n      onClick: this.triggerFileBrowser,\n      disabled: this.state.loading\n    }, this.state.loading && React.createElement(Spinner, null), this.props.buttonLabelChange), React.createElement(Button, {\n      onClick: this.cancelUpload,\n      type: 'link-cancel',\n      disabled: this.state.loading\n    }, 'Cancel')))) : React.createElement(Button, {\n      onClick: this.triggerFileBrowser,\n      disabled: this.props.disabled || this.state.loading\n    }, this.state.loading ? React.createElement(Spinner, null) : null, this.props.buttonLabelInitial);\n    return React.createElement('div', null, component, React.createElement('input', _extends({\n      style: {\n        display: 'none'\n      },\n      type: 'file',\n      ref: 'fileInput',\n      onChange: this.handleChange\n    }, props)));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}