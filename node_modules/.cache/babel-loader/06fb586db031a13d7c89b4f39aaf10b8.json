{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/components/DrillButton.js\";\nimport React, { Component } from 'react';\nimport { Button, Dialog, TextInputField, SegmentedControl, Heading, Link, Strong, Text } from 'evergreen-ui';\nimport * as utils from '../utils.js';\nimport { drill } from '../toolpaths/drill.js';\nimport store from '../store.js';\n\nvar DrillButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DrillButton, _Component);\n\n  function DrillButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DrillButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrillButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isShown: false,\n      nameValid: true,\n      cutDepthValid: true,\n      toolDiameterValid: true,\n      toleranceValid: true,\n      jogHeightValid: true,\n      jogRateValid: true,\n      feedRateValid: true\n    };\n\n    _this.validateSubmit = function () {\n      var valid = _this.state.nameValid && _this.state.cutDepthValid && _this.state.toolDiameterValid && _this.state.toleranceValid && _this.state.jogHeightValid && _this.state.jogRateValid && _this.state.feedRateValid;\n\n      if (valid) {\n        var name = utils.helpExtract(\"name\");\n        var cutDepth = Number(utils.helpExtract(\"cutDepth\"));\n        var toolDiameter = Number(utils.helpExtract(\"toolDiameter\"));\n        var tolerance = Number(utils.helpExtract(\"tolerance\"));\n        var jogHeight = Number(utils.helpExtract(\"jogHeight\"));\n        var jogRate = Number(utils.helpExtract(\"jogRate\"));\n        var feedRate = Number(utils.helpExtract(\"feedRate\"));\n        if (utils.helpExtract(\"name\") === \"\") name = store.getState().defaultParameters.name;\n        if (utils.helpExtract(\"cutDepth\") === \"\") cutDepth = store.getState().defaultParameters.cutDepth;\n        if (utils.helpExtract(\"toolDiameter\") === \"\") toolDiameter = store.getState().defaultParameters.toolDiameter;\n        if (utils.helpExtract(\"tolerance\") === \"\") tolerance = store.getState().defaultParameters.tolerance;\n        if (utils.helpExtract(\"jogHeight\") === \"\") jogHeight = store.getState().defaultParameters.jogHeight;\n        if (utils.helpExtract(\"jogRate\") === \"\") jogRate = store.getState().defaultParameters.jogRate;\n        if (utils.helpExtract(\"feedRate\") === \"\") feedRate = store.getState().defaultParameters.feedRate;\n        if (isNaN(cutDepth)) cutDepth = store.getState().defaultParameters.cutDepth;\n        if (isNaN(toolDiameter)) toolDiameter = store.getState().defaultParameters.toolDiameter;\n        if (isNaN(tolerance)) tolerance = store.getState().defaultParameters.tolerance;\n        if (isNaN(jogHeight)) jogHeight = store.getState().defaultParameters.jogHeight;\n        if (isNaN(jogRate)) jogRate = store.getState().defaultParameters.jogRate;\n        if (isNaN(feedRate)) feedRate = store.getState().defaultParameters.feedRate; //derived parameters\n\n        var toolRadius = toolDiameter / 2;\n        var compensatedRadius = toolRadius + tolerance; //settings will be compiled to a single object here\n\n        var parameters = utils.deepcopy(store.state.defaultParameters);\n        parameters[\"cutDepth\"] = cutDepth;\n        parameters[\"toolDiameter\"] = toolDiameter;\n        parameters[\"tolerance\"] = tolerance;\n        parameters[\"compensatedRadius\"] = compensatedRadius;\n        parameters[\"feedRate\"] = feedRate;\n        parameters[\"jogHeight\"] = jogHeight;\n        parameters[\"jogRate\"] = jogRate; // parameters[\"insideCutting\"] = insideCutting;\n        //console.log(\"parameters\", parameters);\n\n        _this.setState({\n          isShown: false\n        }); //update app state here\n\n\n        var oldToolpaths = store.state.toolpaths;\n        var newProfiles = store.state.selected.map(function (path) {\n          return {\n            type: \"drill\",\n            name: name,\n            parameters: parameters,\n            sourceGeometryID: path,\n            geometry: drill(store.state.contours[path], parameters),\n            id: utils.makeID(),\n            cutSelected: false,\n            visible: true\n          };\n        });\n        var newToolpaths = [].concat(_toConsumableArray(oldToolpaths), _toConsumableArray(newProfiles)); // console.log(\"newToolpaths\", newToolpaths);\n\n        store.update({\n          toolpaths: newToolpaths\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DrillButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        isShown: this.state.isShown,\n        title: \"Settings for this Drill Cut\",\n        onCloseComplete: function onCloseComplete() {\n          _this2.setState({\n            isShown: false\n          });\n        },\n        onConfirm: this.validateSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            cutDepthValid: valid\n          });\n        },\n        isInvalid: !this.state.cutDepthValid,\n        name: \"cutDepth\",\n        description: this.state.cutDepthValid ? \"\" : \"please enter a valid number\",\n        label: \"Depth of Cut\",\n        placeholder: String(store.getState().defaultParameters.cutDepth),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            toolDiameterValid: valid\n          });\n        },\n        isInvalid: !this.state.toolDiameterValid,\n        name: \"toolDiameter\",\n        description: this.state.toolDiameterValid ? \"\" : \"please enter a valid number\",\n        label: \"Tool Diameter\",\n        placeholder: String(store.getState().defaultParameters.toolDiameter),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            feedRateValid: valid\n          });\n        },\n        isInvalid: !this.state.feedRateValid,\n        name: \"feedRate\",\n        description: this.state.feedRateValid ? \"\" : \"please enter a valid number\",\n        label: \"Feed Rate\",\n        placeholder: String(store.getState().defaultParameters.feedRate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            toleranceValid: valid\n          });\n        },\n        isInvalid: !this.state.toleranceValid,\n        name: \"tolerance\",\n        description: this.state.toleranceValid ? \"\" : \"please enter a valid number\",\n        label: \"Tolerance\",\n        placeholder: String(store.getState().defaultParameters.tolerance),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            jogRateValid: valid\n          });\n        },\n        isInvalid: !this.state.jogRateValid,\n        name: \"jogRate\",\n        description: this.state.jogRateValid ? \"\" : \"please enter a valid number\",\n        label: \"Jog Rate\",\n        placeholder: String(store.getState().defaultParameters.jogRate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            jogHeightValid: valid\n          });\n        },\n        isInvalid: !this.state.jogHeightValid,\n        name: \"jogHeight\",\n        description: this.state.jogHeightValid ? \"\" : \"please enter a valid number\",\n        label: \"Jog Height\",\n        placeholder: String(store.getState().defaultParameters.jogHeight),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        marginTop: 20,\n        onChange: function onChange(e) {\n          var valid = e.target.value !== \"\";\n\n          _this2.setState({\n            nameValid: valid\n          });\n        },\n        isInvalid: !this.state.nameValid,\n        name: \"name\",\n        description: this.state.nameValid ? \"\" : \"please enter something\",\n        label: \"Name for this Profile\",\n        placeholder: String(store.getState().defaultParameters.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: this.props.disabled,\n        onClick: function onClick() {\n          return _this2.setState({\n            isShown: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Drill\"));\n    }\n  }]);\n\n  return DrillButton;\n}(Component);\n\nexport { DrillButton };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/components/DrillButton.js"],"names":["React","Component","Button","Dialog","TextInputField","SegmentedControl","Heading","Link","Strong","Text","utils","drill","store","DrillButton","state","isShown","nameValid","cutDepthValid","toolDiameterValid","toleranceValid","jogHeightValid","jogRateValid","feedRateValid","validateSubmit","valid","name","helpExtract","cutDepth","Number","toolDiameter","tolerance","jogHeight","jogRate","feedRate","getState","defaultParameters","isNaN","toolRadius","compensatedRadius","parameters","deepcopy","setState","oldToolpaths","toolpaths","newProfiles","selected","map","path","type","sourceGeometryID","geometry","contours","id","makeID","cutSelected","visible","newToolpaths","update","e","isNum","target","value","String","props","disabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button, Dialog, TextInputField, SegmentedControl, Heading, Link, Strong, Text} from 'evergreen-ui';\nimport * as utils from '../utils.js';\nimport {drill} from '../toolpaths/drill.js';\n\nimport store from '../store.js';\n\nclass DrillButton extends Component {\n\n  state = {\n    isShown: false,\n    nameValid: true,\n    cutDepthValid: true,\n    toolDiameterValid: true,\n    toleranceValid: true,\n    jogHeightValid: true,\n    jogRateValid: true,\n    feedRateValid: true,\n  }\n\n  validateSubmit = () => {\n\n    let valid = this.state.nameValid &&\n                this.state.cutDepthValid &&\n                this.state.toolDiameterValid &&\n                this.state.toleranceValid &&\n                this.state.jogHeightValid &&\n                this.state.jogRateValid &&\n                this.state.feedRateValid;\n    if (valid) {\n\n      let name = utils.helpExtract(\"name\");\n      let cutDepth = Number(utils.helpExtract(\"cutDepth\"));\n      let toolDiameter = Number(utils.helpExtract(\"toolDiameter\"));\n      let tolerance = Number(utils.helpExtract(\"tolerance\"));\n      let jogHeight = Number(utils.helpExtract(\"jogHeight\"));\n      let jogRate = Number(utils.helpExtract(\"jogRate\"));\n      let feedRate = Number(utils.helpExtract(\"feedRate\"));\n\n      if (utils.helpExtract(\"name\") === \"\") name = store.getState().defaultParameters.name;\n      if (utils.helpExtract(\"cutDepth\") === \"\") cutDepth = store.getState().defaultParameters.cutDepth;\n      if (utils.helpExtract(\"toolDiameter\") === \"\") toolDiameter = store.getState().defaultParameters.toolDiameter;\n      if (utils.helpExtract(\"tolerance\") === \"\") tolerance = store.getState().defaultParameters.tolerance;\n      if (utils.helpExtract(\"jogHeight\") === \"\") jogHeight = store.getState().defaultParameters.jogHeight;\n      if (utils.helpExtract(\"jogRate\") === \"\") jogRate = store.getState().defaultParameters.jogRate;\n      if (utils.helpExtract(\"feedRate\") === \"\") feedRate = store.getState().defaultParameters.feedRate;\n\n      if (isNaN(cutDepth)) cutDepth = store.getState().defaultParameters.cutDepth;\n      if (isNaN(toolDiameter)) toolDiameter = store.getState().defaultParameters.toolDiameter;\n      if (isNaN(tolerance)) tolerance = store.getState().defaultParameters.tolerance;\n      if (isNaN(jogHeight)) jogHeight = store.getState().defaultParameters.jogHeight;\n      if (isNaN(jogRate)) jogRate = store.getState().defaultParameters.jogRate;\n      if (isNaN(feedRate)) feedRate = store.getState().defaultParameters.feedRate;\n\n\n      //derived parameters\n      let toolRadius = toolDiameter/2;\n      let compensatedRadius = toolRadius + tolerance;\n\n      //settings will be compiled to a single object here\n      let parameters = utils.deepcopy(store.state.defaultParameters);\n\n      parameters[\"cutDepth\"] = cutDepth;\n      parameters[\"toolDiameter\"] = toolDiameter;\n      parameters[\"tolerance\"] = tolerance;\n      parameters[\"compensatedRadius\"] = compensatedRadius;\n      parameters[\"feedRate\"] = feedRate;\n      parameters[\"jogHeight\"] = jogHeight;\n      parameters[\"jogRate\"] = jogRate;\n      // parameters[\"insideCutting\"] = insideCutting;\n\n      //console.log(\"parameters\", parameters);\n\n      this.setState({\n        isShown:false,\n      });\n\n      //update app state here\n      let oldToolpaths = store.state.toolpaths;\n      let newProfiles = store.state.selected.map(path => {\n\n        return {\n          type: \"drill\",\n          name: name,\n          parameters: parameters,\n          sourceGeometryID: path,\n          geometry: drill(store.state.contours[path], parameters),\n          id: utils.makeID(),\n          cutSelected: false,\n          visible: true,\n        }\n      })\n\n      let newToolpaths = [...oldToolpaths, ...newProfiles];\n\n      // console.log(\"newToolpaths\", newToolpaths);\n\n      store.update({toolpaths:newToolpaths});\n\n    }\n  }\n\nrender() {\n\n  return (\n    <div>\n      <Dialog\n        isShown={this.state.isShown}\n        title={\"Settings for this Drill Cut\"}\n        onCloseComplete={() => {\n          this.setState({\n            isShown:false,\n          })\n        }}\n        onConfirm={this.validateSubmit}>\n\n        <TextInputField\n          onChange={e => {\n            let valid = utils.isNum(e.target.value);\n            this.setState({cutDepthValid:valid})\n          }}\n          isInvalid={!this.state.cutDepthValid}\n          name=\"cutDepth\"\n          description={(this.state.cutDepthValid) ? \"\" : \"please enter a valid number\"}\n          label=\"Depth of Cut\"\n          placeholder={String(store.getState().defaultParameters.cutDepth)}/>\n\n        <TextInputField\n          onChange={e => {\n            let valid = utils.isNum(e.target.value);\n            this.setState({toolDiameterValid:valid})\n          }}\n          isInvalid={!this.state.toolDiameterValid}\n          name=\"toolDiameter\"\n          description={(this.state.toolDiameterValid) ? \"\" : \"please enter a valid number\"}\n          label=\"Tool Diameter\"\n          placeholder={String(store.getState().defaultParameters.toolDiameter)}/>\n\n          <TextInputField\n            onChange={e => {\n              let valid = utils.isNum(e.target.value);\n              this.setState({feedRateValid:valid})\n            }}\n            isInvalid={!this.state.feedRateValid}\n            name=\"feedRate\"\n            description={(this.state.feedRateValid) ? \"\" : \"please enter a valid number\"}\n            label=\"Feed Rate\"\n            placeholder={String(store.getState().defaultParameters.feedRate)}/>\n\n            <TextInputField\n              onChange={e => {\n                let valid = utils.isNum(e.target.value);\n                this.setState({toleranceValid:valid})\n              }}\n              isInvalid={!this.state.toleranceValid}\n              name=\"tolerance\"\n              description={(this.state.toleranceValid) ? \"\" : \"please enter a valid number\"}\n              label=\"Tolerance\"\n              placeholder={String(store.getState().defaultParameters.tolerance)}/>\n\n          <TextInputField\n            onChange={e => {\n              let valid = utils.isNum(e.target.value);\n              this.setState({jogRateValid:valid})\n            }}\n            isInvalid={!this.state.jogRateValid}\n            name=\"jogRate\"\n            description={(this.state.jogRateValid) ? \"\" : \"please enter a valid number\"}\n            label=\"Jog Rate\"\n            placeholder={String(store.getState().defaultParameters.jogRate)}/>\n\n            <TextInputField\n              onChange={e => {\n                let valid = utils.isNum(e.target.value);\n                this.setState({jogHeightValid:valid})\n              }}\n              isInvalid={!this.state.jogHeightValid}\n              name=\"jogHeight\"\n              description={(this.state.jogHeightValid) ? \"\" : \"please enter a valid number\"}\n              label=\"Jog Height\"\n              placeholder={String(store.getState().defaultParameters.jogHeight)}/>\n\n            <TextInputField\n              marginTop={20}\n              onChange={e => {\n                let valid = e.target.value !== \"\";\n                this.setState({nameValid:valid})\n              }}\n              isInvalid={!this.state.nameValid}\n              name=\"name\"\n              description={(this.state.nameValid) ? \"\" : \"please enter something\"}\n              label=\"Name for this Profile\"\n              placeholder={String(store.getState().defaultParameters.name)}/>\n\n      </Dialog>\n      <Button\n        disabled={this.props.disabled}\n        onClick={() => this.setState({isShown:true})}>\n        Drill\n      </Button>\n    </div>\n  );\n}\n}\n\nexport {DrillButton};\n"]},"metadata":{},"sourceType":"module"}