{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\nvar STRANGE_CORRECTION = 0.0000001;\n\nvar intToolPath = function intToolPath(geo, radius) {\n  try {\n    return mjs.model.outline(geo, radius, 1, true);\n  } catch (_unused) {\n    console.log(\"stopping\");\n    return false;\n  }\n};\n\nvar intToolPaths = function intToolPaths(geo, radius) {\n  var first = intToolPath(geo, radius);\n\n  if (first === false) {\n    return false;\n  }\n\n  var model = {};\n  var count = 0;\n  model[count] = intToolPath(geo, radius);\n  count++;\n\n  while (intToolPath(model[count - 1], radius)) {\n    console.log(count);\n    model[count] = intToolPath(model[count - 1], radius);\n    count++;\n  }\n\n  console.log(model);\n  return model;\n};\n\nvar pocket = function pocket(model, params) {\n  //let p = model.models.profile;\n  var p = model; // let outline = mjs.model.outline(p, params.compensatedRadius, 1, true); //third parameter is what type of corners, 0 (rounded) by default\n\n  var outline = intToolPath(p, params.compensatedRadius + STRANGE_CORRECTION); // let outlines = intToolPaths(p, params.compensatedRadius + STRANGE_CORRECTION);\n  //\n  // if (outline !== true) {\n  //   return {drawing: {models:{}}, gcode: '', filename: \"null\"}\n  // }\n  //let chains = mjs.model.findChains(expansion);\n\n  var chain = mjs.model.findSingleChain(outline);\n  var divisions = Math.floor(chain.pathLength / params.minimumSpacing);\n  var spacing = chain.pathLength / divisions;\n  var keyPoints = mjs.chain.toPoints(chain, spacing); // let scaleFactor = 10;\n  // let scaleXY = keyPoints.map(p => [p[0] * scaleFactor, p[1] * scaleFactor]);\n\n  var gcodePoints = keyPoints.map(function (p) {\n    return \"G1 X\".concat(p[0], \" Y\").concat(p[1], \" F\").concat(params.feedRate);\n  });\n  var gcode = JSON.parse(JSON.stringify(gcodePoints));\n  var firstPoint = keyPoints[0];\n  var paths = params.depthOfPasses.map(function (p, i) {\n    return [\"G1 Z\".concat(params.depthOfPasses[i], \" F12.0\")].concat(_toConsumableArray(gcode), [\"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(params.feedRate)]);\n  });\n  paths = paths.flat(1);\n  gcode = [params.units, \"G90\", \"G1 Z\".concat(params.jogHeight, \" F9.0\"), \"G0 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1])].concat(_toConsumableArray(paths)); // write to a new file named\n\n  var filename = 'testGcodePocket.nc';\n  var text = gcode.join('\\n'); //testing\n  // console.log(\"pocket\", outline);\n\n  var o2 = intToolPath(outline);\n  console.log(o2);\n  var oModel = {\n    models: {\n      outline: outline,\n      o2: o2\n    }\n  };\n  return {\n    drawing: oModel,\n    gcode: text,\n    filename: filename\n  };\n};\n\nexport { pocket };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/toolpaths/pocket.js"],"names":["mjs","STRANGE_CORRECTION","intToolPath","geo","radius","model","outline","console","log","intToolPaths","first","count","pocket","params","p","compensatedRadius","chain","findSingleChain","divisions","Math","floor","pathLength","minimumSpacing","spacing","keyPoints","toPoints","gcodePoints","map","feedRate","gcode","JSON","parse","stringify","firstPoint","paths","depthOfPasses","i","flat","units","jogHeight","filename","text","join","o2","oModel","models","drawing"],"mappings":"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","sourcesContent":["// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\n\nconst STRANGE_CORRECTION = 0.0000001;\n\nconst intToolPath = (geo, radius) => {\n  try {\n    return mjs.model.outline(geo, radius, 1, true);\n  }\n  catch {\n    console.log(\"stopping\")\n    return false\n  }\n}\n\nconst intToolPaths = (geo, radius) => {\n  let first = intToolPath(geo, radius);\n  if (first === false) {return false}\n\n  let model = {}\n  let count = 0;\n\n  model[count] = intToolPath(geo, radius);\n\n  count++;\n\n  while (intToolPath(model[count-1], radius)) {\n    console.log(count);\n    model[count] = intToolPath(model[count-1], radius);\n    count++;\n  }\n\n  console.log(model);\n\n  return model;\n}\n\nconst pocket = (model, params) => {\n  //let p = model.models.profile;\n  let p = model;\n\n  // let outline = mjs.model.outline(p, params.compensatedRadius, 1, true); //third parameter is what type of corners, 0 (rounded) by default\n  let outline = intToolPath(p, params.compensatedRadius + STRANGE_CORRECTION);\n  // let outlines = intToolPaths(p, params.compensatedRadius + STRANGE_CORRECTION);\n  //\n  // if (outline !== true) {\n  //   return {drawing: {models:{}}, gcode: '', filename: \"null\"}\n  // }\n\n  //let chains = mjs.model.findChains(expansion);\n  let chain = mjs.model.findSingleChain(outline);\n\n  var divisions = Math.floor(chain.pathLength / params.minimumSpacing);\n  var spacing = chain.pathLength / divisions;\n\n  let keyPoints = mjs.chain.toPoints(chain, spacing);\n\n  // let scaleFactor = 10;\n  // let scaleXY = keyPoints.map(p => [p[0] * scaleFactor, p[1] * scaleFactor]);\n\n  let gcodePoints = keyPoints.map(p => `G1 X${p[0]} Y${p[1]} F${params.feedRate}`)\n  let gcode = JSON.parse(JSON.stringify(gcodePoints));\n\n  let firstPoint = keyPoints[0];\n\n  let paths = params.depthOfPasses.map((p,i) => [`G1 Z${params.depthOfPasses[i]} F12.0`, ...gcode, `G1 X${firstPoint[0]} Y${firstPoint[1]} F${params.feedRate}`])\n  paths = paths.flat(1);\n\n  gcode = [\n    params.units,\n    \"G90\",\n    `G1 Z${params.jogHeight} F9.0`,\n    `G0 X${firstPoint[0]} Y${firstPoint[1]}`,\n    ...paths\n  ]\n\n  // write to a new file named\n  let filename = 'testGcodePocket.nc';\n\n  let text = gcode.join('\\n');\n\n  //testing\n  // console.log(\"pocket\", outline);\n\n  let o2 = intToolPath(outline);\n  console.log(o2)\n  let oModel = {\n    models:{\n      outline,\n      o2\n    }\n  }\n\n  return {drawing: oModel, gcode: text, filename};\n};\n\n\nexport {pocket};\n"]},"metadata":{},"sourceType":"module"}