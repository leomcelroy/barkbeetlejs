{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nvar _tooltip = require('../tooltip');\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar SliderButton = function (_Component) {\n  (0, _inherits3.default)(SliderButton, _Component);\n\n  function SliderButton(props) {\n    (0, _classCallCheck3.default)(this, SliderButton);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (SliderButton.__proto__ || Object.getPrototypeOf(SliderButton)).call(this, props));\n\n    _this.state = {\n      hovering: false,\n      dragging: false,\n      startX: 0,\n      startY: 0,\n      currentX: 0,\n      currentY: 0,\n      startPosition: 0,\n      newPosition: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(SliderButton, [{\n    key: 'parent',\n    value: function parent() {\n      return this.context.component;\n    }\n  }, {\n    key: 'handleMouseEnter',\n    value: function handleMouseEnter() {\n      this.setState({\n        hovering: true\n      });\n    }\n  }, {\n    key: 'handleMouseLeave',\n    value: function handleMouseLeave() {\n      this.setState({\n        hovering: false\n      });\n    }\n  }, {\n    key: 'onButtonDown',\n    value: function onButtonDown(event) {\n      if (this.disabled()) return;\n      this.onDragStart(event);\n      window.addEventListener('mousemove', this.onDragging.bind(this));\n      window.addEventListener('mouseup', this.onDragEnd.bind(this));\n      window.addEventListener('contextmenu', this.onDragEnd.bind(this));\n    }\n  }, {\n    key: 'onDragStart',\n    value: function onDragStart(event) {\n      this.setState({\n        dragging: true,\n        startX: event.clientX,\n        startY: event.clientY,\n        startPosition: parseInt(this.currentPosition(), 10)\n      });\n    }\n  }, {\n    key: 'onDragging',\n    value: function onDragging(event) {\n      if (this.state.dragging) {\n        this.state.currentX = event.clientX;\n        this.state.currentY = event.clientY;\n        var diff = void 0;\n\n        if (this.props.vertical) {\n          diff = (this.state.startY - this.state.currentY) / this.parent().sliderSize() * 100;\n        } else {\n          diff = (this.state.currentX - this.state.startX) / this.parent().sliderSize() * 100;\n        }\n\n        this.state.newPosition = this.state.startPosition + diff;\n        this.setPosition(this.state.newPosition);\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: 'onDragEnd',\n    value: function onDragEnd() {\n      var _this2 = this;\n\n      if (this.state.dragging) {\n        /*\n         * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移\n         * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上\n         */\n        setTimeout(function () {\n          _this2.setState({\n            dragging: false\n          }, function () {\n            _this2.setPosition(_this2.state.newPosition);\n          });\n        }, 0);\n        window.removeEventListener('mousemove', this.onDragging.bind(this));\n        window.removeEventListener('mouseup', this.onDragEnd.bind(this));\n        window.removeEventListener('contextmenu', this.onDragEnd.bind(this));\n      }\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(newPosition) {\n      if (newPosition < 0) {\n        newPosition = 0;\n      } else if (newPosition > 100) {\n        newPosition = 100;\n      }\n\n      var lengthPerStep = 100 / ((this.max() - this.min()) / this.step());\n      var steps = Math.round(newPosition / lengthPerStep);\n      var value = steps * lengthPerStep * (this.max() - this.min()) * 0.01 + this.min();\n      this.props.onChange(parseFloat(value.toFixed(this.precision())));\n    }\n    /* Computed Methods */\n\n  }, {\n    key: 'formatValue',\n    value: function formatValue() {\n      var formatTooltip = this.parent().props.formatTooltip;\n\n      if (formatTooltip instanceof Function) {\n        return formatTooltip(this.props.value);\n      }\n\n      return this.props.value;\n    }\n  }, {\n    key: 'disabled',\n    value: function disabled() {\n      return this.parent().props.disabled;\n    }\n  }, {\n    key: 'max',\n    value: function max() {\n      return this.parent().props.max;\n    }\n  }, {\n    key: 'min',\n    value: function min() {\n      return this.parent().props.min;\n    }\n  }, {\n    key: 'step',\n    value: function step() {\n      return this.parent().props.step;\n    }\n  }, {\n    key: 'precision',\n    value: function precision() {\n      return this.parent().state.precision;\n    }\n  }, {\n    key: 'currentPosition',\n    value: function currentPosition() {\n      return (this.props.value - this.min()) / (this.max() - this.min()) * 100 + '%';\n    }\n  }, {\n    key: 'wrapperStyle',\n    value: function wrapperStyle() {\n      return this.props.vertical ? {\n        bottom: this.currentPosition()\n      } : {\n        left: this.currentPosition()\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          hovering = _state.hovering,\n          dragging = _state.dragging;\n      return _react2.default.createElement('div', {\n        ref: 'button',\n        className: this.classNames('el-slider__button-wrapper', {\n          'hover': hovering,\n          'dragging': dragging\n        }),\n        style: this.wrapperStyle(),\n        onMouseEnter: this.handleMouseEnter.bind(this),\n        onMouseLeave: this.handleMouseLeave.bind(this),\n        onMouseDown: this.onButtonDown.bind(this)\n      }, _react2.default.createElement(_tooltip2.default, {\n        ref: 'tooltip',\n        placement: 'top',\n        content: _react2.default.createElement('span', null, this.formatValue()),\n        disabled: !this.parent().props.showTooltip\n      }, _react2.default.createElement('div', {\n        className: this.classNames('el-slider__button', {\n          'hover': this.state.hovering,\n          'dragging': this.state.dragging\n        })\n      })));\n    }\n  }]);\n  return SliderButton;\n}(_libs.Component);\n\nSliderButton.defaultProps = {\n  value: 0\n};\nvar _default = SliderButton;\nexports.default = _default;\nSliderButton.contextTypes = {\n  component: _libs.PropTypes.any\n};\nSliderButton.propTypes = {\n  onChange: _libs.PropTypes.func.isRequired,\n  value: _libs.PropTypes.number,\n  vertical: _libs.PropTypes.bool\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(SliderButton, 'SliderButton', 'src/slider/Button.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/slider/Button.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}