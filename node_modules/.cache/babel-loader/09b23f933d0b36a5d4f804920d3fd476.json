{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nexports.getScrollBarWidth = getScrollBarWidth;\nexports.getValueByPath = getValueByPath;\nexports.getRowIdentity = getRowIdentity;\nexports.getLeafColumns = getLeafColumns;\nexports.getColumns = getColumns;\nexports.convertToRows = convertToRows;\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _document = document;\nvar scrollBarWidth = void 0;\n\nfunction getScrollBarWidth() {\n  if (scrollBarWidth !== undefined) return scrollBarWidth;\n\n  var dom = _document.createElement('div');\n\n  var body = _document.body || dom;\n  dom.style.visibility = 'hidden';\n  dom.style.width = '100px';\n  dom.style.position = 'absolute';\n  dom.style.top = '-9999px';\n  dom.style.overflow = 'scroll';\n  body.appendChild(dom);\n  var totalWidth = dom.offsetWidth;\n  var widthWithoutScroll = dom.clientWidth;\n  body.removeChild(dom);\n  return totalWidth - widthWithoutScroll;\n}\n\nfunction getValueByPath(data, path) {\n  if (typeof path !== 'string') return null;\n  return path.split('.').reduce(function (pre, cur) {\n    return (pre || {})[cur];\n  }, data);\n}\n\nfunction getRowIdentity(row, rowKey) {\n  if (typeof rowKey === 'string') {\n    return getValueByPath(row, rowKey);\n  } else if (typeof rowKey === 'function') {\n    return rowKey(row);\n  }\n}\n\nfunction getLeafColumns(columns) {\n  var result = [];\n  columns.forEach(function (column) {\n    if (column.subColumns) {\n      result.push.apply(result, (0, _toConsumableArray3.default)(getLeafColumns(column.subColumns)));\n    } else {\n      result.push(column);\n    }\n  });\n  return result;\n}\n\nfunction convertChildrenToColumns(children) {\n  return React.Children.map(children, function (child) {\n    if (child.type.typeName !== 'TableColumn') {\n      console.warn('Table component\\'s children must be TableColumn, but received ' + child.type);\n      return {};\n    }\n\n    var column = Object.assign({}, child.props);\n\n    if (column.children) {\n      column.subColumns = convertChildrenToColumns(column.children);\n      delete column.children;\n    }\n\n    return column;\n  });\n}\n\nfunction getColumns(props) {\n  return props.children ? convertChildrenToColumns(props.children) : props.columns || [];\n}\n\nfunction convertToRows(columns) {\n  var maxLevel = 1;\n\n  function traverse(column, parent) {\n    if (parent) {\n      column.level = parent.level + 1;\n\n      if (maxLevel < column.level) {\n        maxLevel = column.level;\n      }\n    } else {\n      column.level = 1;\n    }\n\n    if (column.subColumns) {\n      var colSpan = 0;\n      column.subColumns.forEach(function (subColumn) {\n        traverse(subColumn, column);\n        colSpan += subColumn.colSpan;\n      });\n      column.colSpan = colSpan;\n    } else {\n      column.colSpan = 1;\n    }\n  }\n\n  columns.forEach(function (column) {\n    traverse(column);\n  });\n  var rows = [];\n\n  for (var i = 0; i < maxLevel; i++) {\n    rows.push([]);\n  }\n\n  var allColumns = [];\n  var queue = columns.slice();\n\n  for (var _i = 0; queue[_i]; _i++) {\n    allColumns.push(queue[_i]);\n    if (queue[_i].subColumns) queue.push.apply(queue, (0, _toConsumableArray3.default)(queue[_i].subColumns));\n  }\n\n  allColumns.forEach(function (column) {\n    if (!column.subColumns) {\n      column.rowSpan = maxLevel - column.level + 1;\n    } else {\n      column.rowSpan = 1;\n    }\n\n    rows[column.level - 1].push(column);\n  });\n  return rows;\n}\n\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_document, '_document', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(scrollBarWidth, 'scrollBarWidth', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(getScrollBarWidth, 'getScrollBarWidth', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(getValueByPath, 'getValueByPath', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(getRowIdentity, 'getRowIdentity', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(getLeafColumns, 'getLeafColumns', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(convertChildrenToColumns, 'convertChildrenToColumns', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(getColumns, 'getColumns', 'src/table/utils.js');\n\n  __REACT_HOT_LOADER__.register(convertToRows, 'convertToRows', 'src/table/utils.js');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}