{"ast":null,"code":"import _slicedToArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/Workplane.js\";\nimport React, { Component, useState } from 'react';\nimport * as utils from './utils.js';\n\nvar Workplane = function Workplane(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState({\n    width: 500,\n    height: 500,\n    v0: 0,\n    v1: 0,\n    v2: 500,\n    v3: 500,\n    mousedown: false //zoomDelta: 0,\n\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var wheel = function wheel(e) {\n    e.preventDefault();\n    var loc = utils.getSVGpoint(e, state.v0, state.v1, state.v2, state.v3, state.width, state.height);\n\n    if (e.ctrlKey) {\n      var zoomRate = 10; //zooms to center now\n\n      if (e.deltaY < 0) {\n        //console.log('zoom in');\n        var v2 = e.deltaY * zoomRate + state.v2 > 1 ? e.deltaY * zoomRate + state.v2 : state.v2;\n        var v3 = e.deltaY * zoomRate + state.v3 > 1 ? e.deltaY * zoomRate + state.v3 : state.v3;\n        var v0 = state.v0 - e.deltaY * zoomRate / 2;\n        var v1 = state.v1 - e.deltaY * zoomRate / 2; // console.log(\"e.deltaY * zoomRate\", e.deltaY * zoomRate)\n        // console.log(\"v0\", e.deltaY * zoomRate, v0)\n        // console.log(\"v1\", state.v1, v1)\n\n        setState({\n          v0: v0,\n          v1: v1,\n          v2: v2,\n          v3: v3\n        });\n      }\n\n      if (e.deltaY > 0) {\n        //console.log('zoom out');\n        var _v = e.deltaY * zoomRate + state.v2;\n\n        var _v2 = e.deltaY * zoomRate + state.v3;\n\n        var _v3 = state.v0 - e.deltaY * zoomRate / 2;\n\n        var _v4 = state.v1 - e.deltaY * zoomRate / 2;\n\n        setState({\n          v0: _v3,\n          v1: _v4,\n          v2: _v,\n          v3: _v2\n        });\n      }\n\n      return;\n    }\n\n    if (e.deltaY < 0) {\n      //console.log('scrolling up');\n      var _v5 = state.v1 + e.deltaY;\n\n      setState({\n        v1: _v5\n      });\n    }\n\n    if (e.deltaY > 0) {\n      //console.log('scrolling down');\n      var _v6 = state.v1 + e.deltaY;\n\n      setState({\n        v1: _v6\n      });\n    }\n\n    if (e.deltaX < 0) {\n      //console.log('scrolling left');\n      var _v7 = state.v0 + e.deltaX;\n\n      setState({\n        v0: _v7\n      });\n    }\n\n    if (e.deltaX > 0) {\n      //console.log('scrolling right');\n      var _v8 = state.v0 + e.deltaX;\n\n      setState({\n        v0: _v8\n      });\n    }\n  }; //   // Find your root SVG element\n  // var svg = document.querySelector('svg');\n  //\n  // // Create an SVGPoint for future math\n  // var pt = svg.createSVGPoint();\n  //\n  // // Get point in global SVG space\n  // function cursorPoint(evt){\n  //   pt.x = evt.clientX; pt.y = evt.clientY;\n  //   return pt.matrixTransform(svg.getScreenCTM().inverse());\n  // }\n  //\n  // svg.addEventListener('mousemove',function(evt){\n  //   var loc = cursorPoint(evt);\n  //   // Use loc.x and loc.y here\n  // },false);\n\n\n  var mouseDown = function mouseDown(e) {\n    setState({\n      mousedown: true\n    });\n  };\n\n  var mouseMove = function mouseMove(e) {\n    var loc = utils.getSVGpoint(e, state.v0, state.v1, state.v2, state.v3, state.width, state.height); // console.log(loc.x, loc.y)\n  };\n\n  var mouseUp = function mouseUp(e) {\n    setState({\n      mousedown: false\n    });\n  };\n\n  return React.createElement(\"svg\", {\n    width: state.width,\n    height: state.height,\n    viewBox: \"\".concat(state.v0, \" \").concat(state.v1, \" \").concat(state.v2, \" \").concat(state.v3),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onWheel: function onWheel(e) {\n      return wheel(e);\n    },\n    onMouseDown: function onMouseDown(e) {\n      return mouseDown(e);\n    },\n    onMouseMove: function onMouseMove(e) {\n      return mouseMove(e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      return mouseUp(e);\n    },\n    style: {\n      border: \"1px solid #cccccc\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, props.groups);\n};\n\nexport { Workplane };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/Workplane.js"],"names":["React","Component","useState","utils","Workplane","width","height","v0","v1","v2","v3","mousedown","state","setState","wheel","e","preventDefault","loc","getSVGpoint","ctrlKey","zoomRate","deltaY","deltaX","mouseDown","mouseMove","mouseUp","border","props","groups"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport * as utils from './utils.js';\n\n\nconst Workplane = ({}) => {\n\n  const [state, setState] = useState({\n      width: 500,\n      height: 500,\n      v0: 0,\n      v1: 0,\n      v2: 500,\n      v3: 500,\n      mousedown: false,\n      //zoomDelta: 0,\n    });\n\n  const wheel = (e) => {\n    e.preventDefault();\n    let loc = utils.getSVGpoint(e, state.v0, state.v1, state.v2, state.v3 ,state.width, state.height);\n\n    if (e.ctrlKey) {\n\n      let zoomRate = 10;\n      //zooms to center now\n\n      if (e.deltaY < 0) {\n        //console.log('zoom in');\n\n        let v2 = (e.deltaY * zoomRate + state.v2 > 1) ? e.deltaY * zoomRate + state.v2 : state.v2;\n        let v3 = (e.deltaY * zoomRate + state.v3 > 1) ? e.deltaY * zoomRate + state.v3 : state.v3;\n\n        let v0 = state.v0 - e.deltaY * zoomRate/2;\n        let v1 = state.v1 - e.deltaY * zoomRate/2;\n        // console.log(\"e.deltaY * zoomRate\", e.deltaY * zoomRate)\n        // console.log(\"v0\", e.deltaY * zoomRate, v0)\n        // console.log(\"v1\", state.v1, v1)\n\n        setState({v0, v1, v2, v3})\n      }\n\n      if (e.deltaY > 0) {\n        //console.log('zoom out');\n\n        let v2 = e.deltaY * zoomRate + state.v2;\n        let v3 = e.deltaY * zoomRate + state.v3;\n\n        let v0 = state.v0 - e.deltaY * zoomRate/2;\n        let v1 = state.v1 - e.deltaY * zoomRate/2;\n\n        setState({v0,v1, v2, v3})\n      }\n\n      return\n    }\n\n    if (e.deltaY < 0) {\n      //console.log('scrolling up');\n\n      let v1 = state.v1 + e.deltaY;\n      setState({v1});\n    }\n    if (e.deltaY > 0) {\n      //console.log('scrolling down');\n\n      let v1 = state.v1 + e.deltaY;\n      setState({v1});\n    }\n    if (e.deltaX < 0) {\n      //console.log('scrolling left');\n\n      let v0 = state.v0 + e.deltaX;\n      setState({v0});\n    }\n    if (e.deltaX > 0) {\n      //console.log('scrolling right');\n\n      let v0 = state.v0 + e.deltaX;\n      setState({v0});\n    }\n  }\n\n//   // Find your root SVG element\n// var svg = document.querySelector('svg');\n//\n// // Create an SVGPoint for future math\n// var pt = svg.createSVGPoint();\n//\n// // Get point in global SVG space\n// function cursorPoint(evt){\n//   pt.x = evt.clientX; pt.y = evt.clientY;\n//   return pt.matrixTransform(svg.getScreenCTM().inverse());\n// }\n//\n// svg.addEventListener('mousemove',function(evt){\n//   var loc = cursorPoint(evt);\n//   // Use loc.x and loc.y here\n// },false);\n\n  const mouseDown = (e) => {\n    setState({\n      mousedown: true\n    });\n\n  }\n\n  const mouseMove = (e) => {\n    let loc = utils.getSVGpoint(e, state.v0, state.v1, state.v2, state.v3 ,state.width, state.height);\n\n    // console.log(loc.x, loc.y)\n  }\n\n  const mouseUp = (e) => {\n    setState({\n      mousedown: false\n    });\n  }\n\n  return (\n      <svg\n        width={state.width}\n        height={state.height}\n        viewBox={`${state.v0} ${state.v1} ${state.v2} ${state.v3}`}\n        xmlns={\"http://www.w3.org/2000/svg\"}\n        onWheel={(e) => wheel(e)}\n        onMouseDown={(e) => mouseDown(e)}\n        onMouseMove={(e) => mouseMove(e)}\n        onMouseUp={(e) => mouseUp(e)}\n        style={{border: \"1px solid #cccccc\"}}>\n\n          {props.groups}\n      </svg>\n  );\n\n}\n\nexport {Workplane}\n"]},"metadata":{},"sourceType":"module"}