{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js\";\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { Workplane } from './Workplane.js';\nimport { kk } from './joints/koshikake.js';\nimport { profile } from './toolpaths/profile.js';\nimport { pocket } from './toolpaths/pocket.js';\nimport { Button, Heading, Pane } from 'evergreen-ui'; //import {replaceWithPath} from './svg_to_makerjs.js';\n\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport createStore from 'pure-store';\nimport store from \"./store.js\"; //this is my global state library\n// const store = createStore({\n//   shapes: {},\n//   toolpaths:[],\n//   selected: [],\n//   material: \"wood\",\n//   thickness: 34,\n//   units: \"mm\",\n//   zero: \"bottomleft\",\n// });\n\nvar uploadSVG = function uploadSVG(e) {\n  //helper function\n  var replaceWithPath = function replaceWithPath(child) {\n    //why cant I put this in a different file\n    console.log(\"child\", child);\n\n    if (child.name === \"g\") {\n      return child.children.map(function (grandchild) {\n        return replaceWithPath(grandchild);\n      });\n    }\n\n    if (child.name === \"rectangle\") {\n      var x;\n      var y;\n      var width;\n      var height;\n      var rx;\n      var ry;\n      var temp = s2p.rect({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        rx: rx,\n        ry: ry\n      });\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"circle\") {\n      var cx;\n      var cy;\n      var r;\n\n      var _temp = s2p.rect({\n        cx: cx,\n        cy: cy,\n        r: r\n      });\n\n      return mjs.importer.fromSVGPathData(_temp);\n    }\n\n    if (child.name === \"ellipse\") {\n      var _cx;\n\n      var _cy;\n\n      var _rx;\n\n      var _ry;\n\n      var _temp2 = s2p.ellipse({\n        cx: _cx,\n        cy: _cy,\n        rx: _rx,\n        ry: _ry\n      });\n\n      return mjs.importer.fromSVGPathData(_temp2);\n    }\n\n    if (child.name === \"polygon\") {\n      var points;\n\n      var _temp3 = s2p.polygon({\n        points: points\n      });\n\n      return mjs.importer.fromSVGPathData(_temp3);\n    }\n\n    if (child.name === \"polyline\") {\n      var _points;\n\n      var _temp4 = s2p.polyline({\n        points: _points\n      });\n\n      return mjs.importer.fromSVGPathData(_temp4);\n    }\n\n    if (child.name === \"line\") {\n      var x1;\n      var x2;\n      var y1;\n      var y2;\n\n      var _temp5 = s2p.line({\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      });\n\n      return mjs.importer.fromSVGPathData(_temp5);\n    }\n\n    if (child.name === \"path\") {\n      var makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n      return makerjsPath;\n    }\n  }; //main event\n\n\n  var files = e.target.files;\n  var file = files[0];\n  var reader = new FileReader();\n\n  reader.onload = function (event) {\n    var text = event.target.result;\n    svgson.parse(text).then(function (json) {\n      var svg = json.children.map(function (child) {\n        return replaceWithPath(child);\n      });\n      svg = svg.flat(1); //TODO: what does the argument do again?\n      //TODO: update state to have makerjs models\n\n      console.log(\"svg\", svg);\n      var models = {};\n      svg.forEach(function (shape) {\n        models[utils.makeID()] = shape;\n      });\n      console.log(\"models\", models); //ultimately I will set state of app\n    });\n  };\n\n  reader.readAsText(file);\n};\n\nvar App = function App() {\n  // constructor() {\n  //   super();\n  //\n  //   this.state = {\n  //     shapes: {},\n  //     toolpaths:[],\n  //     selected: [],\n  //     material: \"wood\",\n  //     thickness: 34,\n  //     units: \"mm\",\n  //     zero: \"bottom_left\",\n  //   }\n  // };\n  // updateFromChild(newState) {\n  //   console.log(\"why\")\n  //   if (newState === \"mm\") {\n  //     this.setState({units:\"mm\"});\n  //   } else if (newState === \"in\") {\n  //     this.setState({units:\"in\"});\n  //   }\n  // }\n  //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n  var test = kk; //test = mjs.model.originate(test);\n\n  var testProfile = test.models.profile;\n  var testPocket = test.models.pocket;\n  var profileCut = profile(testProfile, params);\n  var pocketCut = pocket(testPocket, params); // let drawings = [test, profile(test)];\n  // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n  //testing if internal outlines will make acceptable pocket paths, appears so\n  //let p2 = pocket(testPocket, params).drawing;\n\n  var t1 = new mjs.models.Oval(20, 20);\n  var t2 = mjs.model.move(new mjs.models.Oval(20, 20), [19, 0]);\n  var test0 = mjs.model.combineUnion(t1, t2); // console.log(\"test0\", test0)\n\n  var test1 = pocket(test0, params); // console.log(test0)\n  // test0 = mjs.model.move(test0, [50, 0]);\n\n  var model = {\n    models: {\n      shapes: {\n        models: {\n          profileSource: testProfile,\n          pocketSource: testPocket //test0\n\n        }\n      },\n      cuts: {\n        models: {\n          profileCut: profileCut.drawing,\n          pocketCut: pocketCut.drawing //test1: test1.drawing\n\n        } //pocketCut2: pocket(p2, params).drawing,\n        // test0,\n        // test1,\n\n      }\n    }\n  };\n  model.models.cuts.layer = \"red\"; // model = mjs.model.originate(model);\n  // model = mjs.model.zero(model);\n\n  model['paths'] = {\n    origin: new mjs.paths.Circle(params.compensatedRadius)\n  };\n  var modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n  var viewModel = mjs.exporter.toSVG(modelToView, {\n    useSvgPathOnly: false,\n    strokeWidth: \".5mm\" // layerOptions:{\n    //   cuts: {\n    //     stroke: \"red\"\n    //   }\n    // },\n\n  }); //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n\n  viewModel = [viewModel]; //let p = material_type(this.state.dialogs.material_type, this);\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    onMouseDown: function onMouseDown(e) {\n      return console.log(\"div target\", e.target.getAttribute(\"data-route\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainEvent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Workplane, {\n    groups: viewModel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"myInput\",\n    type: \"file\",\n    ref: function ref(_ref) {\n      return \"\";\n    },\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      return _this.uploadSVG(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(Button, {\n    marginRight: 4,\n    onClick: function onClick(e) {\n      return \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"save\"))), React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Settings\"), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \" \", React.createElement(MaterialType, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \" \", React.createElement(MaterialThickness, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \" \", React.createElement(Units, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \" \", React.createElement(Origin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    marginTop: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Create Toolpaths\"), React.createElement(Button, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(PocketButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  })), React.createElement(Button, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Drill\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    marginTop: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Toolpaths\"), React.createElement(Button, {\n    marginTop: 4,\n    onClick: function onClick() {\n      //utils.download(test1.filename, test1.gcode);\n      utils.download(profileCut.filename, profileCut.gcode);\n      utils.download(pocketCut.filename, pocketCut.gcode);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"download gcode\"))), React.createElement(Button, {\n    onClick: function onClick() {\n      return console.log(store.getState());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Log State\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js"],"names":["React","Component","utils","mjs","params","s2p","svgson","Workplane","kk","profile","pocket","Button","Heading","Pane","MaterialType","MaterialThickness","Origin","Units","PocketButton","createStore","store","uploadSVG","e","replaceWithPath","child","console","log","name","children","map","grandchild","x","y","width","height","rx","ry","temp","rect","importer","fromSVGPathData","cx","cy","r","ellipse","points","polygon","polyline","x1","x2","y1","y2","line","makerjsPath","attributes","d","files","target","file","reader","FileReader","onload","event","text","result","parse","then","json","svg","flat","models","forEach","shape","makeID","readAsText","App","test","testProfile","testPocket","profileCut","pocketCut","t1","Oval","t2","model","move","test0","combineUnion","test1","shapes","profileSource","pocketSource","cuts","drawing","layer","origin","paths","Circle","compensatedRadius","modelToView","scale","deepcopy","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","getAttribute","ref","display","download","filename","gcode","getState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport {Workplane} from './Workplane.js'\nimport {kk} from './joints/koshikake.js';\nimport {profile} from './toolpaths/profile.js';\nimport {pocket} from './toolpaths/pocket.js';\n\nimport {Button, Heading, Pane} from 'evergreen-ui';\n//import {replaceWithPath} from './svg_to_makerjs.js';\n\nimport {MaterialType} from './components/MaterialType.js'\nimport {MaterialThickness} from './components/MaterialThickness.js'\nimport {Origin} from './components/Origin.js'\nimport {Units} from './components/Units.js'\nimport {PocketButton} from './components/PocketButton.js'\n\nimport createStore from 'pure-store';\n\nimport store from \"./store.js\"; //this is my global state library\n\n// const store = createStore({\n//   shapes: {},\n//   toolpaths:[],\n//   selected: [],\n//   material: \"wood\",\n//   thickness: 34,\n//   units: \"mm\",\n//   zero: \"bottomleft\",\n// });\n\nconst uploadSVG = (e) =>{\n  //helper function\n  const replaceWithPath = (child) => { //why cant I put this in a different file\n    console.log(\"child\", child);\n\n    if (child.name === \"g\") {\n      return child.children.map(grandchild => replaceWithPath(grandchild));\n    }\n\n    if (child.name === \"rectangle\") {\n      let x;\n      let y;\n      let width;\n      let height;\n      let rx;\n      let ry;\n\n      let temp = s2p.rect({x, y, width, height, rx, ry});\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"circle\") {\n      let cx;\n      let cy;\n      let r;\n\n      let temp = s2p.rect({cx, cy, r});\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"ellipse\") {\n      let cx;\n      let cy;\n      let rx;\n      let ry;\n\n      let temp = s2p.ellipse({cx, cy, rx, ry});\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"polygon\") {\n      let points\n\n      let temp = s2p.polygon({points});\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"polyline\") {\n      let points\n\n      let temp = s2p.polyline({points});\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"line\") {\n      let x1;\n      let x2;\n      let y1;\n      let y2;\n\n      let temp = s2p.line({x1, x2, y1, y2});\n      return mjs.importer.fromSVGPathData(temp);\n    }\n\n    if (child.name === \"path\") {\n      let makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n      return makerjsPath;\n    }\n  }\n\n  //main event\n  let files = e.target.files;\n  let file = files[0];\n\n  var reader = new FileReader();\n\n  reader.onload = (event) => {\n    let text = event.target.result;\n\n    svgson.parse(text).then((json) => {\n      let svg = json.children.map(child => {\n        return replaceWithPath(child);\n      });\n\n      svg = svg.flat(1); //TODO: what does the argument do again?\n\n      //TODO: update state to have makerjs models\n      console.log(\"svg\", svg);\n      let models = {};\n\n      svg.forEach(shape => {\n        models[utils.makeID()] = shape;\n      })\n\n      console.log(\"models\", models);\n\n      //ultimately I will set state of app\n    });\n  };\n\n  reader.readAsText(file);\n}\n\nconst App = () => {\n  // constructor() {\n  //   super();\n  //\n  //   this.state = {\n  //     shapes: {},\n  //     toolpaths:[],\n  //     selected: [],\n  //     material: \"wood\",\n  //     thickness: 34,\n  //     units: \"mm\",\n  //     zero: \"bottom_left\",\n  //   }\n  // };\n\n\n  // updateFromChild(newState) {\n  //   console.log(\"why\")\n  //   if (newState === \"mm\") {\n  //     this.setState({units:\"mm\"});\n  //   } else if (newState === \"in\") {\n  //     this.setState({units:\"in\"});\n  //   }\n  // }\n\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    let test = kk;\n    //test = mjs.model.originate(test);\n    let testProfile = test.models.profile;\n    let testPocket = test.models.pocket;\n    let profileCut = profile(testProfile, params);\n    let pocketCut = pocket(testPocket, params);\n\n    // let drawings = [test, profile(test)];\n    // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n\n    //testing if internal outlines will make acceptable pocket paths, appears so\n    //let p2 = pocket(testPocket, params).drawing;\n    let t1 = new mjs.models.Oval(20,20)\n    let t2 = mjs.model.move(new mjs.models.Oval(20,20), [19,0])\n    let test0 = mjs.model.combineUnion(t1, t2);\n    // console.log(\"test0\", test0)\n    let test1 = pocket(test0, params);\n    // console.log(test0)\n    // test0 = mjs.model.move(test0, [50, 0]);\n\n    let model = {\n      models: {\n        shapes: {\n          models: {\n            profileSource: testProfile,\n            pocketSource: testPocket,\n            //test0\n          }\n        },\n        cuts: {\n          models: {\n            profileCut: profileCut.drawing,\n            pocketCut: pocketCut.drawing,\n            //test1: test1.drawing\n          }\n        }\n        //pocketCut2: pocket(p2, params).drawing,\n        // test0,\n        // test1,\n      }\n    }\n\n    model.models.cuts.layer = \"red\";\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n    model['paths'] = {\n      origin: new mjs.paths.Circle(params.compensatedRadius)\n    }\n\n    let modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n    let viewModel = mjs.exporter.toSVG(modelToView, {\n      useSvgPathOnly:false,\n      strokeWidth:\".5mm\",\n      // layerOptions:{\n      //   cuts: {\n      //     stroke: \"red\"\n      //   }\n      // },\n    });\n    //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n    viewModel = [viewModel];\n\n    //let p = material_type(this.state.dialogs.material_type, this);\n    return (\n      <div\n        className=\"wrapper\"\n        onMouseDown={(e) => console.log(\"div target\", e.target.getAttribute(\"data-route\"))}>\n\n        <div className=\"mainEvent\">\n          <Workplane groups={viewModel}/>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => \"\"}\n              style={{ display: 'none' }}\n              onChange={(e) => this.uploadSVG(e)}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => \"\"}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button>\n              save\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType/></Pane>\n            <Pane marginTop={4}> <MaterialThickness/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            <Button marginTop={4}>Profile</Button><br/>\n            <Pane marginTop={4}><PocketButton/></Pane>\n            <Button marginTop={4}>Drill</Button><br/>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <Button\n              marginTop={4}\n              onClick={() => {\n                //utils.download(test1.filename, test1.gcode);\n                utils.download(profileCut.filename, profileCut.gcode);\n                utils.download(pocketCut.filename, pocketCut.gcode);\n              }}\n              >\n                download gcode\n            </Button>\n          </div>\n        </div>\n        <Button onClick={() => console.log(store.getState())}>Log State</Button>\n      </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}