{"ast":null,"code":"import _slicedToArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { uploadSVG } from './uploadSVG.js';\nimport { Workplane } from './Workplane.js';\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { ProfileButton } from './components/ProfileButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport { renderLine } from './unmakerjs/primitives.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      thicknessSubmit: false,\n      materialSubmit: false,\n      originSubmit: false,\n      initialized: true //will be false\n\n    };\n\n    _this.firstSubmit = function (name) {\n      var old = _this.state;\n      old[name] = true;\n\n      _this.setState({\n        old: old\n      });\n    };\n\n    _this.hover = function (dataRoute) {\n      if (dataRoute !== null) {\n        if (dataRoute.split(\",\").length < 4) {\n          return;\n        } // TODO: This is a bit of a hack\n\n\n        dataRoute = dataRoute.split(\",\")[3].replace(/[\\\"]/g, \"\");\n        var id = dataRoute.split(\"_\");\n        id = id.length > 1 ? id[1] : id[0];\n        store.update({\n          hovered: [id]\n        });\n      } else {\n        store.update({\n          hovered: []\n        }); //this is a bit hackish\n      }\n    };\n\n    _this.select = function (dataRoute) {\n      if (dataRoute === null) {\n        store.update({\n          selected: []\n        });\n      } else {\n        //TODO this is when hover is turned off\n        if (dataRoute.split(\",\").length < 4) {\n          return;\n        } // TODO: This is a bit of a hack\n\n\n        dataRoute = dataRoute.split(\",\")[3].replace(/[\\\"]/g, \"\");\n        var id = dataRoute.split(\"_\");\n        id = id.length > 1 ? id[1] : id[0];\n        store.update(function (s) {\n          return s.selected.push(id);\n        });\n      } // store.state.hovered.forEach(id => {\n      //   store.update(s => {\n      //     if (!s.selected.includes(id)) {\n      //       s.selected.push(id);\n      //     } else {\n      //       //TODO: remove entry from selected list if it is already selected and is getting clicked\n      //     }\n      //   })\n      // })\n\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initialized\",\n    value: function initialized() {\n      if (!this.state.initialized && this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit) {\n        this.setState({\n          initialized: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    // componentDidMount() { //tests\n    //   let modelT = {\n    //     paths: {\n    //       0: new mjs.paths.Line([0, 0], [10, 10]),\n    //       1: new mjs.paths.Line([0, 0], [20, 10]),\n    //       2: new mjs.paths.Line([0, -20], [0, 0]),\n    //       3: new mjs.paths.Line([20, 10], [30, 10]),\n    //       4: new mjs.paths.Line([0, -20], [-10, 0]),\n    //     }\n    //   };\n    //\n    //   let chainsT = mjs.model.findChains(modelT);\n    //\n    //   let chainsTModels = chainsT.map(chain => mjs.chain.toNewModel(chain));\n    //\n    //   console.log(\"chainsT\", chainsT);\n    //   console.log(\"chainsTModels\", chainsTModels);\n    //\n    //   let shapes = store.state.shapes;\n    //\n    //   shapes[\"paths\"] = modelT.paths;\n    //\n    //   store.update({shapes})\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      if (!this.state.initialized) this.initialized();\n      var drawing = {\n        models: {\n          shapes: {\n            models: _objectSpread({}, store.getState().shapes)\n          },\n          cuts: {\n            models: {}\n          },\n          selected: {\n            models: {}\n          },\n          hovered: {\n            models: {}\n          }\n        }\n      };\n      store.getState().toolpaths.forEach(function (path) {\n        if (path.cutSelected) {\n          drawing.models.cuts.models[path.id] = path.geometry.drawing;\n        }\n      });\n      store.getState().selected.forEach(function (shape) {\n        drawing.models.selected.models[\"selected_\".concat(shape)] = store.getState().shapes[shape];\n      });\n      store.getState().hovered.forEach(function (shape) {\n        drawing.models.hovered.models[\"hovered_\".concat(shape)] = store.getState().shapes[shape];\n      });\n      drawing.models.cuts.layer = \"red\";\n      drawing.models.selected.layer = \"blue\";\n      drawing.models.hovered.layer = \"yellow\"; // let cuts = {};\n      //\n      // store.getState().toolpaths.forEach(path => {\n      //   if (path.cutSelected) {\n      //     cuts[path.id] = path.geometry.drawing;\n      //   }\n      // })\n      //\n      // let selectedShapes = {};\n      //\n      // store.getState().selected.forEach(shape => {\n      //   selectedShapes[`selected_${shape}`] = store.getState().shapes[shape];\n      // })\n      //\n      // let hoveredShapes = {};\n      //\n      // store.getState().hovered.forEach(shape => {\n      //   hoveredShapes[`hovered_${shape}`] = store.getState().shapes[shape];\n      // })\n      //\n      // let model = {\n      //   models: {\n      //     shapes: {\n      //       models: {\n      //         ...store.getState().shapes\n      //       }\n      //     },\n      //     cuts: {\n      //       models: {\n      //         ...cuts\n      //       }\n      //     },\n      //     selected: {\n      //       models: {\n      //         ...selectedShapes\n      //       }\n      //     },\n      //     hovered: {\n      //       models: {\n      //         ...hoveredShapes\n      //       }\n      //     }\n      //   }\n      // }\n      //\n      // model.models.cuts.layer = \"red\";\n      // model.models.selected.layer = \"blue\";\n      // model.models.hovered.layer = \"yellow\";\n      // model = mjs.model.originate(model);\n      // model = mjs.model.zero(model);\n      // model['paths'] = {\n      //   origin: new mjs.paths.Circle(store.getState().defaultParameters.compensatedRadius)\n      // }\n      // let modelToView = mjs.model.scale(utils.deepcopy(drawing), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n      //var t0 = performance.now();//TODO: this rendering is way too slow\n\n      var viewModel = mjs.exporter.toSVG(drawing, {\n        useSvgPathOnly: false,\n        strokeWidth: \".5mm\" // layerOptions:{\n        //   cuts: {\n        //     stroke: \"red\"\n        //   }\n        // },\n\n      }); // console.log(viewModel);\n      // var t1 = performance.now();\n      //\n      // console.log(\"Call to render SVG took \" + (t1 - t0) + \" milliseconds.\")\n\n      viewModel = [viewModel];\n      var viewModel2 = Object.entries(store.state.contours).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            id = _ref2[0],\n            lines = _ref2[1];\n\n        return React.createElement(\"g\", {\n          key: \"\".concat(id, \"_group\"),\n          id: \"\".concat(id, \"_group\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, \" \", lines.map(function (line, i) {\n          return renderLine(line, \"\".concat(id, \"_index\").concat(i));\n        }), \" \");\n      });\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onMouseMove: function onMouseMove(e) {\n          return _this2.hover(e.target.getAttribute(\"data-route\"));\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this2.select(e.target.getAttribute(\"data-route\"));\n        },\n        className: \"mainEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(\"svg\", {\n        width: 0,\n        height: 0,\n        id: \"thisIsDumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), React.createElement(Workplane, {\n        groups: [],\n        groups2: viewModel2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref3) {\n          return _this2.upload = _ref3;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: uploadSVG,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(Button, {\n        marginRight: 4,\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return console.log(store.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"save\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), \"Number Selected: \", store.state.selected.length, \"\\xA0\", React.createElement(Button, {\n        onClick: function onClick() {\n          var shapes = Object.entries(store.state.shapes);\n          shapes = shapes.filter(function (_ref4) {\n            var _ref5 = _slicedToArray(_ref4, 2),\n                id = _ref5[0],\n                shape = _ref5[1];\n\n            return !store.state.selected.includes(id);\n          });\n          var toolpaths = store.state.toolpaths.filter(function (toolpath) {\n            return !store.state.selected.includes(toolpath.sourceGeometryID);\n          });\n          var newShapes = {};\n          shapes.forEach(function (shape) {\n            newShapes[shape[0]] = shape[1];\n          });\n          shapes = newShapes;\n          store.update({\n            shapes: shapes,\n            toolpaths: toolpaths,\n            selected: []\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialType, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialThickness, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \" \", React.createElement(Units, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \" \", React.createElement(Origin, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      })), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"select settings before editting options\") : \"\", React.createElement(Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \" \", React.createElement(AdvancedOptions, {\n        disabled: !this.state.initialized,\n        default: true,\n        params: store.getState().defaultParameters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Create Toolpaths\"), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"select settings before creating toolpaths\") : \"\", React.createElement(\"div\", {\n        className: \"toolpaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(ProfileButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(PocketButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginLeft: 8,\n        marginTop: 4,\n        onClick: function onClick() {\n          return console.log(store.getState());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Drill\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Toolpaths\"), React.createElement(ToolpathList, {\n        marginTop: 4,\n        state: store.getState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js"],"names":["React","Component","PureComponent","Button","Heading","Pane","Paragraph","utils","mjs","params","s2p","svgson","uploadSVG","Workplane","MaterialType","MaterialThickness","Origin","Units","PocketButton","ProfileButton","AdvancedOptions","ToolpathList","renderLine","store","App","state","thicknessSubmit","materialSubmit","originSubmit","initialized","firstSubmit","name","old","setState","hover","dataRoute","split","length","replace","id","update","hovered","select","selected","s","push","drawing","models","shapes","getState","cuts","toolpaths","forEach","path","cutSelected","geometry","shape","layer","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","viewModel2","Object","entries","contours","map","lines","line","i","e","target","getAttribute","ref","upload","display","click","console","log","filter","includes","toolpath","sourceGeometryID","newShapes","defaultParameters"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {Button, Heading, Pane, Paragraph} from 'evergreen-ui';\nimport './App.css';\n\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\n\nimport {uploadSVG} from './uploadSVG.js';\n\nimport {Workplane} from './Workplane.js'\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {ProfileButton} from './components/ProfileButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\nimport {renderLine} from './unmakerjs/primitives.js';\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nclass App extends Component {\n\n  state = {\n    thicknessSubmit : false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: true, //will be false\n  }\n\n  firstSubmit = (name) => {\n    let old = this.state;\n    old[name] = true;\n\n    this.setState({old});\n  }\n\n  initialized() {\n    if (!this.state.initialized && (this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit)) {\n      this.setState({initialized:true});\n    }\n  }\n\n  hover = (dataRoute) => {\n\n    if (dataRoute !== null) {\n      if (dataRoute.split(\",\").length < 4) {return} // TODO: This is a bit of a hack\n\n      dataRoute = dataRoute.split(\",\")[3].replace(/[\\\"]/g, \"\");\n\n      let id = dataRoute.split(\"_\");\n      id = (id.length > 1) ? id[1] : id[0];\n\n      store.update({ hovered: [id] });\n\n    } else {\n      store.update({ hovered: [] }); //this is a bit hackish\n    }\n  }\n\n  // select = (dataRoute) => {\n  //\n  //   if (dataRoute === null) {\n  //     store.update({selected: []}); //TODO: tightedn up this logic\n  //   } else {\n  //     store.state.hovered.forEach(h => {\n  //       let id = h.split(\"_\");\n  //       if (id[0] === \"hovered\") {\n  //         id = id[1];\n  //       } else {\n  //         id = id[0];\n  //       }\n  //\n  //\n  //       store.update(s => {\n  //         if (!s.selected.includes(id)) {\n  //           s.selected.push(id);\n  //         }\n  //       })\n  //     })\n  //   }\n  //\n  //   console.log(store.state.selected)\n  //\n  // }\n\n  select = (dataRoute) => {\n\n    if (dataRoute === null) {\n      store.update({selected:[]});\n    }\n\n    else { //TODO this is when hover is turned off\n      if (dataRoute.split(\",\").length < 4) {return} // TODO: This is a bit of a hack\n\n      dataRoute = dataRoute.split(\",\")[3].replace(/[\\\"]/g, \"\");\n\n      let id = dataRoute.split(\"_\");\n      id = (id.length > 1) ? id[1] : id[0];\n\n      store.update(s => s.selected.push(id));\n    }\n\n    // store.state.hovered.forEach(id => {\n    //   store.update(s => {\n    //     if (!s.selected.includes(id)) {\n    //       s.selected.push(id);\n    //     } else {\n    //       //TODO: remove entry from selected list if it is already selected and is getting clicked\n    //     }\n    //   })\n    // })\n  }\n\n  // componentDidMount() { //tests\n  //   let modelT = {\n  //     paths: {\n  //       0: new mjs.paths.Line([0, 0], [10, 10]),\n  //       1: new mjs.paths.Line([0, 0], [20, 10]),\n  //       2: new mjs.paths.Line([0, -20], [0, 0]),\n  //       3: new mjs.paths.Line([20, 10], [30, 10]),\n  //       4: new mjs.paths.Line([0, -20], [-10, 0]),\n  //     }\n  //   };\n  //\n  //   let chainsT = mjs.model.findChains(modelT);\n  //\n  //   let chainsTModels = chainsT.map(chain => mjs.chain.toNewModel(chain));\n  //\n  //   console.log(\"chainsT\", chainsT);\n  //   console.log(\"chainsTModels\", chainsTModels);\n  //\n  //   let shapes = store.state.shapes;\n  //\n  //   shapes[\"paths\"] = modelT.paths;\n  //\n  //   store.update({shapes})\n  // }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    if (!this.state.initialized) this.initialized();\n\n    let drawing = {\n      models: {\n        shapes: {\n          models: {\n            ...store.getState().shapes\n          }\n        },\n        cuts: {\n          models: {}\n        },\n        selected: {\n          models: {}\n        },\n        hovered: {\n          models: {}\n        }\n      }\n    }\n\n    store.getState().toolpaths.forEach(path => {\n      if (path.cutSelected) {\n        drawing.models.cuts.models[path.id] = path.geometry.drawing;\n      }\n    })\n\n    store.getState().selected.forEach(shape => {\n      drawing.models.selected.models[`selected_${shape}`] = store.getState().shapes[shape];\n    })\n\n    store.getState().hovered.forEach(shape => {\n      drawing.models.hovered.models[`hovered_${shape}`] = store.getState().shapes[shape];\n    })\n\n    drawing.models.cuts.layer = \"red\";\n    drawing.models.selected.layer = \"blue\";\n    drawing.models.hovered.layer = \"yellow\";\n\n    // let cuts = {};\n    //\n    // store.getState().toolpaths.forEach(path => {\n    //   if (path.cutSelected) {\n    //     cuts[path.id] = path.geometry.drawing;\n    //   }\n    // })\n    //\n    // let selectedShapes = {};\n    //\n    // store.getState().selected.forEach(shape => {\n    //   selectedShapes[`selected_${shape}`] = store.getState().shapes[shape];\n    // })\n    //\n    // let hoveredShapes = {};\n    //\n    // store.getState().hovered.forEach(shape => {\n    //   hoveredShapes[`hovered_${shape}`] = store.getState().shapes[shape];\n    // })\n    //\n    // let model = {\n    //   models: {\n    //     shapes: {\n    //       models: {\n    //         ...store.getState().shapes\n    //       }\n    //     },\n    //     cuts: {\n    //       models: {\n    //         ...cuts\n    //       }\n    //     },\n    //     selected: {\n    //       models: {\n    //         ...selectedShapes\n    //       }\n    //     },\n    //     hovered: {\n    //       models: {\n    //         ...hoveredShapes\n    //       }\n    //     }\n    //   }\n    // }\n    //\n    // model.models.cuts.layer = \"red\";\n    // model.models.selected.layer = \"blue\";\n    // model.models.hovered.layer = \"yellow\";\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n\n    // model['paths'] = {\n    //   origin: new mjs.paths.Circle(store.getState().defaultParameters.compensatedRadius)\n    // }\n\n    // let modelToView = mjs.model.scale(utils.deepcopy(drawing), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n     //var t0 = performance.now();//TODO: this rendering is way too slow\n\n    let viewModel = mjs.exporter.toSVG(drawing, {\n      useSvgPathOnly:false,\n      strokeWidth:\".5mm\",\n      // layerOptions:{\n      //   cuts: {\n      //     stroke: \"red\"\n      //   }\n      // },\n    });\n\n    // console.log(viewModel);\n\n    // var t1 = performance.now();\n    //\n    // console.log(\"Call to render SVG took \" + (t1 - t0) + \" milliseconds.\")\n\n    viewModel = [viewModel];\n\n    let viewModel2 = Object.entries(store.state.contours).map(([id, lines]) => <g key={`${id}_group`} id={`${id}_group`}> {lines.map((line, i) => renderLine(line, `${id}_index${i}`))} </g>);\n\n    return (\n      <div\n        className=\"wrapper\"\n        >\n\n\n        <div>\n          <div\n            onMouseMove={(e) => this.hover(e.target.getAttribute(\"data-route\"))}\n            onMouseDown={(e) => this.select(e.target.getAttribute(\"data-route\"))}\n            className=\"mainEvent\">\n            <Workplane groups={viewModel}/>\n            <svg width={0} height={0} id={\"thisIsDumb\"}></svg>\n          </div>\n          <Workplane groups={[]} groups2={viewModel2}/>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => this.upload = ref}\n              style={{ display: 'none' }}\n              onChange={uploadSVG}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => this.upload.click()}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button\n              onClick={() => console.log(store.state)}>\n              save\n            </Button>\n            <br/>\n            Number Selected: {store.state.selected.length}\n            &nbsp;\n            <Button\n              onClick={() => {\n                let shapes = Object.entries(store.state.shapes);\n                shapes = shapes.filter(([id, shape]) => !store.state.selected.includes(id))\n\n                let toolpaths = store.state.toolpaths.filter(toolpath => !store.state.selected.includes(toolpath.sourceGeometryID));\n\n                let newShapes = {};\n\n                shapes.forEach(shape => {\n                  newShapes[shape[0]] = shape[1];\n                })\n\n                shapes = newShapes;\n\n                store.update({\n                  shapes,\n                  toolpaths,\n                  selected: []\n                })\n\n              }}>\n              Delete\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <MaterialThickness firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin firstSubmit={this.firstSubmit}/></Pane>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before editting options</Paragraph> : \"\"}\n            <Pane> <AdvancedOptions disabled={!this.state.initialized} default={true} params={store.getState().defaultParameters}/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before creating toolpaths</Paragraph> : \"\"}\n            <div className=\"toolpaths\">\n              <Pane marginLeft={8} marginTop={4}><ProfileButton disabled={!this.state.initialized}/></Pane>\n              <Pane marginLeft={8} marginTop={4}><PocketButton disabled={!this.state.initialized}/></Pane>\n              <Button disabled={!this.state.initialized} marginLeft={8} marginTop={4} onClick={() => console.log(store.getState())}>Drill</Button>\n            </div>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <ToolpathList marginTop={4} state={store.getState()}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}