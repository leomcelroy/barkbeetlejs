{"ast":null,"code":"'use strict';\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nmodule.exports = _react2['default'].createClass({\n  displayName: 'SegmentedControl',\n  propTypes: {\n    className: _react2['default'].PropTypes.string,\n    equalWidthSegments: _react2['default'].PropTypes.bool,\n    onChange: _react2['default'].PropTypes.func.isRequired,\n    options: _react2['default'].PropTypes.array.isRequired,\n    type: _react2['default'].PropTypes.oneOf(['default', 'muted', 'danger', 'info', 'primary', 'success', 'warning']),\n    value: _react2['default'].PropTypes.string\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      type: 'default'\n    };\n  },\n  onChange: function onChange(value) {\n    this.props.onChange(value);\n  },\n  render: function render() {\n    var _this = this;\n\n    var componentClassName = (0, _classnames2['default'])('SegmentedControl', 'SegmentedControl--' + this.props.type, {\n      'SegmentedControl--equal-widths': this.props.equalWidthSegments\n    }, this.props.className);\n    var options = this.props.options.map(function (op) {\n      var buttonClassName = (0, _classnames2['default'])('SegmentedControl__button', {\n        'is-selected': op.value === _this.props.value\n      });\n      return _react2['default'].createElement('span', {\n        key: 'option-' + op.value,\n        className: 'SegmentedControl__item'\n      }, _react2['default'].createElement('button', {\n        type: 'button',\n        onClick: _this.onChange.bind(_this, op.value),\n        className: buttonClassName\n      }, op.label));\n    });\n    return _react2['default'].createElement('div', {\n      className: componentClassName\n    }, options);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}