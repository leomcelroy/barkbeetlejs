{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Checkbox = function (_Component) {\n  (0, _inherits3.default)(Checkbox, _Component);\n\n  function Checkbox(props) {\n    (0, _classCallCheck3.default)(this, Checkbox);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call(this, props));\n\n    _this.state = {\n      checked: props.checked,\n      focus: props.focus,\n      label: _this.getLabel(props)\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Checkbox, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        checked: nextProps.checked,\n        focus: nextProps.focus,\n        label: this.getLabel(nextProps)\n      });\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus() {\n      this.setState({\n        focus: true\n      });\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur() {\n      this.setState({\n        focus: false\n      });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(e) {\n      var _this2 = this;\n\n      if (e.target instanceof HTMLInputElement) {\n        var _label = this.state.label;\n        var _props = this.props,\n            trueLabel = _props.trueLabel,\n            falseLabel = _props.falseLabel;\n        var _checked = e.target.checked;\n        var group = this.context.ElCheckboxGroup;\n\n        if (group) {\n          var length = group.state.options.length + (_checked ? 1 : -1);\n\n          if (group.props.min !== undefined && length < group.props.min) {\n            return;\n          }\n\n          if (group.props.max !== undefined && length > group.props.max) {\n            return;\n          }\n        }\n\n        var newLabel = _label;\n\n        if (this.props.trueLabel || this.props.falseLabel) {\n          newLabel = _checked ? trueLabel : falseLabel;\n        }\n\n        this.setState({\n          checked: _checked,\n          label: newLabel\n        }, function () {\n          if (_this2.props.onChange) {\n            _this2.props.onChange(_checked);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'getLabel',\n    value: function getLabel(props) {\n      if (props.trueLabel || props.falseLabel) {\n        return props.checked ? props.trueLabel : props.falseLabel;\n      } else {\n        return props.label;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('label', {\n        style: this.style(),\n        className: this.className('el-checkbox')\n      }, _react2.default.createElement('span', {\n        className: this.classNames('el-checkbox__input', {\n          'is-disabled': this.props.disabled,\n          'is-checked': this.state.checked,\n          'is-indeterminate': this.props.indeterminate,\n          'is-focus': this.state.focus\n        })\n      }, _react2.default.createElement('span', {\n        className: 'el-checkbox__inner'\n      }), _react2.default.createElement('input', {\n        className: 'el-checkbox__original',\n        type: 'checkbox',\n        checked: this.state.checked,\n        disabled: this.props.disabled,\n        onFocus: this.onFocus.bind(this),\n        onBlur: this.onBlur.bind(this),\n        onChange: this.onChange.bind(this)\n      })), _react2.default.createElement('span', {\n        className: 'el-checkbox__label'\n      }, this.props.children || this.state.label));\n    }\n  }]);\n  return Checkbox;\n}(_libs.Component);\n\nCheckbox.elementType = 'Checkbox';\nvar _default = Checkbox;\nexports.default = _default;\nCheckbox.contextTypes = {\n  ElCheckboxGroup: _libs.PropTypes.any\n};\nCheckbox.propTypes = {\n  label: _libs.PropTypes.string,\n  trueLabel: _libs.PropTypes.oneOfType([_libs.PropTypes.string, _libs.PropTypes.number]),\n  falseLabel: _libs.PropTypes.oneOfType([_libs.PropTypes.string, _libs.PropTypes.number]),\n  disabled: _libs.PropTypes.bool,\n  checked: _libs.PropTypes.bool,\n  indeterminate: _libs.PropTypes.bool,\n  focus: _libs.PropTypes.bool,\n  onChange: _libs.PropTypes.func\n};\nCheckbox.defaultProps = {\n  checked: false,\n  focus: false\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Checkbox, 'Checkbox', 'src/checkbox/CheckBox.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/checkbox/CheckBox.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}