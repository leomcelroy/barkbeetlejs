{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar immer_1 = require(\"immer\");\n\nvar PureStore =\n/** @class */\nfunction () {\n  function PureStore(parent, getter, rootState) {\n    var _this = this;\n\n    this.callbacks = [];\n\n    this.getState = function () {\n      return _this.getter(_this.root.rootState);\n    };\n\n    this.update = function (updater) {\n      var updaterFn = updater instanceof Function ? updater : function (e) {\n        return Object.assign(e, updater);\n      };\n      _this.root.rootState = immer_1.default(_this.root.rootState, function (s) {\n        updaterFn(_this.getter(s));\n      });\n\n      _this.root.callbacks.forEach(function (callback) {\n        return callback();\n      });\n    };\n\n    this.storeFor = function (getter) {\n      return new PureStore(_this, getter);\n    };\n\n    this.updaterFor = function (getter) {\n      return _this.storeFor(getter).update;\n    };\n\n    this.subscribe = function (callback) {\n      if (_this.root != _this) throw \"Only the top level store can be subscribed to.\";\n\n      _this.callbacks.push(callback);\n\n      return function () {\n        return _this.callbacks.splice(_this.callbacks.indexOf(callback), 1);\n      };\n    };\n\n    this.parent = parent;\n    this.root = parent && parent.root || this;\n    if (!parent) this.rootState = rootState;\n\n    this.getter = function (s) {\n      return getter(parent ? parent.getter(s) : s);\n    };\n  }\n\n  Object.defineProperty(PureStore.prototype, \"state\", {\n    get: function get() {\n      return this.getState();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PureStore;\n}();\n\nexports.PureStore = PureStore;\n\nexports.default = function (state) {\n  return new PureStore(null, function (s) {\n    return s;\n  }, state);\n};","map":null,"metadata":{},"sourceType":"script"}