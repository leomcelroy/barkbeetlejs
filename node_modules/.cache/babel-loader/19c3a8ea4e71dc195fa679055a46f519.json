{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js_real/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as s2p from 'shape2path';\nimport * as mjs from 'makerjs'; //utils\n\nvar MakeSeries = function MakeSeries(s, n, c) {\n  var l = [];\n  l.push(s);\n\n  for (var i = 0; i < c - 1; i++) {\n    l.push(l[i] + n);\n  }\n\n  return l;\n};\n\nvar EditSVG = function EditSVG(svg) {\n  return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" \".concat(svg.slice(4));\n};\n\nvar Download = function Download(filename, text) {\n  var pom = document.createElement('a');\n  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  pom.setAttribute('download', filename);\n\n  if (document.createEvent) {\n    var event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    pom.dispatchEvent(event);\n  } else {\n    pom.click();\n  }\n}; //import svg and turn into paths\n\n\nvar t = s2p.rect({\n  x: 0,\n  y: 120,\n  width: 200,\n  height: 200,\n  rx: 20,\n  ry: 20\n});\nvar m = mjs.importer.fromSVGPathData(t); //generate gcode data\n\nvar cutDepth = 1.3;\nvar passDepth = .5;\nvar toolDiameter = 1;\nvar numberOfOffsets = 3;\nvar stepover = .125;\nvar tolerance = .5;\nvar climbDirection = false;\nvar insideCutting = false;\nvar millOuterFirst = false;\nvar jogHeight = 1;\nvar jogRate = 40;\nvar feedRate = 20;\nvar toolRadius = toolDiameter / 2;\nvar nSeries = toolDiameter * stepover;\nvar compensatedRadius = toolRadius + tolerance;\nvar tempFloor = Math.floor(cutDepth / passDepth);\nvar actualPassDepth = cutDepth / tempFloor;\nvar depthOfPasses = MakeSeries(actualPassDepth, actualPassDepth, tempFloor).map(function (n) {\n  return -n;\n});\nconsole.log(depthOfPasses);\nvar c1 = mjs.model.expandPaths(m, compensatedRadius, 1);\nvar c2 = mjs.model.findChains(c1);\nvar chain = mjs.model.findSingleChain(c1);\nvar minimumSpacing = 5;\nvar divisions = Math.floor(chain.pathLength / minimumSpacing);\nvar spacing = chain.pathLength / divisions;\nvar keyPoints = mjs.chain.toPoints(chain, spacing);\nvar scaleFactor = 100;\nvar scaleXY = keyPoints.map(function (p) {\n  return [p[0] / scaleFactor, p[1] / scaleFactor];\n});\nvar gcodePoints = scaleXY.map(function (p) {\n  return \"G1 X\".concat(p[0], \" Y\").concat(p[1], \" F\").concat(feedRate);\n});\nvar gcode = JSON.parse(JSON.stringify(gcodePoints));\nvar firstPoint = scaleXY[0];\nvar paths = depthOfPasses.map(function (p, i) {\n  return [\"G1 Z\".concat(depthOfPasses[i], \" F12.0\")].concat(_toConsumableArray(gcode), [\"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(feedRate)]);\n});\npaths = paths.flat(1);\ngcode = [\"G20\", \"G90\", \"G1 Z\".concat(jogHeight, \" F9.0\"), \"G0 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1])].concat(_toConsumableArray(paths)); // write to a new file named\n\nvar filename = 'testGcode.nc';\nvar text = gcode.join('\\n');\nDownload(filename, text);\nvar svg = mjs.exporter.toSVG(c1);\nsvg = EditSVG(svg);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: svg\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js_real/src/App.js"],"names":["React","Component","s2p","mjs","MakeSeries","s","n","c","l","push","i","EditSVG","svg","slice","Download","filename","text","pom","document","createElement","setAttribute","encodeURIComponent","createEvent","event","initEvent","dispatchEvent","click","t","rect","x","y","width","height","rx","ry","m","importer","fromSVGPathData","cutDepth","passDepth","toolDiameter","numberOfOffsets","stepover","tolerance","climbDirection","insideCutting","millOuterFirst","jogHeight","jogRate","feedRate","toolRadius","nSeries","compensatedRadius","tempFloor","Math","floor","actualPassDepth","depthOfPasses","map","console","log","c1","model","expandPaths","c2","findChains","chain","findSingleChain","minimumSpacing","divisions","pathLength","spacing","keyPoints","toPoints","scaleFactor","scaleXY","p","gcodePoints","gcode","JSON","parse","stringify","firstPoint","paths","flat","join","exporter","toSVG","App","__html"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport * as s2p from 'shape2path';\nimport * as mjs from 'makerjs';\n\n//utils\nconst MakeSeries = (s, n, c) => {\n  let l = [];\n  l.push(s);\n\n  for (let i = 0; i < c - 1; i++) {\n    l.push(l[i] + n);\n  }\n\n  return l;\n}\n\nconst EditSVG  = (svg) => `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ${svg.slice(4)}`;\n\nconst Download = (filename, text) => {\n  var pom = document.createElement('a');\n\n  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  pom.setAttribute('download', filename);\n\n  if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      pom.dispatchEvent(event);\n  }\n  else {\n      pom.click();\n  }\n}\n\n//import svg and turn into paths\nlet t = s2p.rect({x: 0, y: 120, width: 200, height: 200, rx: 20, ry: 20});\nlet m = mjs.importer.fromSVGPathData(t);\n\n//generate gcode data\nlet cutDepth = 1.3;\nlet passDepth = .5;\nlet toolDiameter = 1;\nlet numberOfOffsets = 3;\nlet stepover = .125;\nlet tolerance = .5;\nlet climbDirection = false;\nlet insideCutting = false;\nlet millOuterFirst = false;\nlet jogHeight = 1;\nlet jogRate = 40;\nlet feedRate = 20;\n\nlet toolRadius = toolDiameter/2;\n\nlet nSeries = toolDiameter * stepover;\nlet compensatedRadius = toolRadius + tolerance;\n\nlet tempFloor = Math.floor(cutDepth/passDepth);\nlet actualPassDepth = cutDepth/tempFloor;\n\nlet depthOfPasses = MakeSeries(actualPassDepth, actualPassDepth, tempFloor).map(n => -n);\nconsole.log(depthOfPasses)\n\nlet c1 = mjs.model.expandPaths(m, compensatedRadius, 1);\n\nlet c2 = mjs.model.findChains(c1);\n\nlet chain = mjs.model.findSingleChain(c1);\n\nvar minimumSpacing = 5;\nvar divisions = Math.floor(chain.pathLength / minimumSpacing);\nvar spacing = chain.pathLength / divisions;\n\nlet keyPoints = mjs.chain.toPoints(chain, spacing);\n\nlet scaleFactor = 100;\nlet scaleXY = keyPoints.map(p => [p[0]/scaleFactor, p[1]/scaleFactor]);\n\nlet gcodePoints = scaleXY.map(p => `G1 X${p[0]} Y${p[1]} F${feedRate}`)\nlet gcode = JSON.parse(JSON.stringify(gcodePoints));\n\nlet firstPoint = scaleXY[0];\n\nlet paths = depthOfPasses.map((p,i) => [`G1 Z${depthOfPasses[i]} F12.0`, ...gcode, `G1 X${firstPoint[0]} Y${firstPoint[1]} F${feedRate}`])\npaths = paths.flat(1);\n\ngcode = [\n  \"G20\",\n  \"G90\",\n  `G1 Z${jogHeight} F9.0`,\n  `G0 X${firstPoint[0]} Y${firstPoint[1]}`,\n  ...paths\n]\n\n// write to a new file named\nlet filename = 'testGcode.nc';\n\nlet text = gcode.join('\\n');\n\nDownload(filename, text);\n\nlet svg = mjs.exporter.toSVG(c1);\n\nsvg = EditSVG(svg);\n\nclass App extends Component {\n  render() {\n    return (\n      <div dangerouslySetInnerHTML={{__html: svg}}/>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}