{"ast":null,"code":"/**\n * Function to help with focus management for selectable table cells.\n * @param {Object} key - React `event.key`.\n * @param {Element} ref - the cell to manage focus interaction for.\n */\nexport default function manageTableCellFocusInteraction(key, ref) {\n  // eslint-disable-next-line unicorn/prefer-spread\n  var tableRowChildren = Array.from(ref.parentElement.children);\n  var columnIndex = tableRowChildren.indexOf(ref);\n  var nextItemToFocus;\n\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    if (key === 'ArrowLeft' && columnIndex - 1 >= 0) {\n      nextItemToFocus = tableRowChildren[columnIndex - 1];\n    } else if (key === 'ArrowRight' && columnIndex + 1 < tableRowChildren.length) {\n      nextItemToFocus = tableRowChildren[columnIndex + 1];\n    }\n  } else if (key === 'ArrowUp' || key === 'ArrowDown') {\n    // eslint-disable-next-line unicorn/prefer-spread\n    var tableBodyChildren = Array.from(ref.parentElement.parentElement.children);\n    var rowIndex = tableBodyChildren.indexOf(ref.parentElement);\n    var nextRow;\n\n    if (key === 'ArrowUp' && rowIndex - 1 >= 0) {\n      nextRow = tableBodyChildren[rowIndex - 1];\n    } else if (key === 'ArrowDown' && rowIndex + 1 < tableBodyChildren.length) {\n      nextRow = tableBodyChildren[rowIndex + 1];\n    }\n\n    if (nextRow && nextRow.children) {\n      nextItemToFocus = nextRow.children[columnIndex];\n    }\n  }\n\n  if (nextItemToFocus && nextItemToFocus.hasAttribute('tabindex')) {\n    nextItemToFocus.focus();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}