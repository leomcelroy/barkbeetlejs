{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport * as Classes from \"../../common/classes\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { PanelView } from \"./panelView\";\n\nvar PanelStack =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PanelStack, _super);\n\n  function PanelStack() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      direction: \"push\",\n      stack: [_this.props.initialPanel]\n    };\n\n    _this.handlePanelClose = function (panel) {\n      var stack = _this.state.stack; // only remove this panel if it is at the top and not the only one.\n\n      if (stack[0] !== panel || stack.length <= 1) {\n        return;\n      }\n\n      safeInvoke(_this.props.onClose, panel);\n\n      _this.setState(function (state) {\n        return {\n          direction: \"pop\",\n          stack: state.stack.filter(function (p) {\n            return p !== panel;\n          })\n        };\n      });\n    };\n\n    _this.handlePanelOpen = function (panel) {\n      safeInvoke(_this.props.onOpen, panel);\n\n      _this.setState(function (state) {\n        return {\n          direction: \"push\",\n          stack: [panel].concat(state.stack)\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  PanelStack.prototype.render = function () {\n    var classes = classNames(Classes.PANEL_STACK, Classes.PANEL_STACK + \"-\" + this.state.direction, this.props.className);\n    return React.createElement(TransitionGroup, {\n      className: classes,\n      component: \"div\"\n    }, this.renderCurrentPanel());\n  };\n\n  PanelStack.prototype.renderCurrentPanel = function () {\n    var stack = this.state.stack;\n\n    if (stack.length === 0) {\n      return null;\n    }\n\n    var activePanel = stack[0],\n        previousPanel = stack[1];\n    return React.createElement(CSSTransition, {\n      classNames: Classes.PANEL_STACK,\n      key: stack.length,\n      timeout: 400\n    }, React.createElement(PanelView, {\n      onClose: this.handlePanelClose,\n      onOpen: this.handlePanelOpen,\n      panel: activePanel,\n      previousPanel: previousPanel\n    }));\n  };\n\n  return PanelStack;\n}(React.PureComponent);\n\nexport { PanelStack };","map":null,"metadata":{},"sourceType":"module"}