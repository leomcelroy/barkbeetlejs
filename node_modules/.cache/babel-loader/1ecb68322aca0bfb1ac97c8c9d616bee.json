{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js\";\nimport React, { useState } from 'react';\nimport { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport './App.css';\nimport simplify from 'simplify-js';\nimport * as utils from './utils.js';\nimport { uploadSVG, uploadBBJS } from './uploadSVG.js';\nimport { Workplane } from './components/Workplane.js';\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { ProfileButton } from './components/ProfileButton.js';\nimport { DrillButton } from './components/DrillButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport { renderLine, connectPoints } from './unmakerjs/primitives.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nvar TOLERANCE = 1;\nvar HQ = false;\n\nvar linesToPolylinePoints = function linesToPolylinePoints(lines, lastIndex) {\n  return lines.map(function (line, i) {\n    if (i === lastIndex - 1) return [{\n      x: line.origin[0],\n      y: line.origin[1]\n    }, {\n      x: line.end[0],\n      y: line.end[1]\n    }];\n    return {\n      x: line.origin[0],\n      y: line.origin[1]\n    };\n  }).flat();\n};\n\nvar simplifyLines = function simplifyLines(lines) {\n  return connectPoints(simplify(linesToPolylinePoints(lines, lines.length), TOLERANCE, HQ).map(function (el) {\n    return [el.x, el.y];\n  }));\n};\n\nvar simplifyToolpath = function simplifyToolpath(toolpath) {\n  return toolpath.map(function (lines) {\n    if (!Array.isArray(lines[0])) return simplifyLines(lines, lines.length);\n    return lines.map(function (lines2) {\n      return simplifyLines(lines2, lines2.length);\n    }).flat();\n  }).flat();\n};\n\nvar App = function App() {\n  var _useState = useState({\n    thicknessSubmit: false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: true,\n    //will be false\n    groupHovered: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var firstSubmit = function firstSubmit(name) {\n    var old = state;\n    old[name] = true;\n    setState(_objectSpread({}, state, {\n      old: old\n    }));\n  };\n\n  var initialized = function initialized() {\n    if (!state.initialized && state.thicknessSubmit && state.materialSubmit && state.originSubmit) {\n      setState(_objectSpread({}, state, {\n        initialized: true\n      }));\n    }\n  };\n\n  var groupHover = function groupHover(id, enter) {\n    id = id.split('_');\n    var toolpath = id[1] === \"toolpath\";\n    id = id[0];\n    var currentGroupHovered = state.groupHovered;\n    currentGroupHovered.push(id);\n\n    if (id && !toolpath && enter) {\n      setState(_objectSpread({}, state, {\n        groupHovered: currentGroupHovered\n      }));\n    } else {\n      setState(_objectSpread({}, state, {\n        groupHovered: []\n      }));\n    }\n  }; // const hover = (id) => {\n  //   id = id.split('_');\n  //   let toolpath = (id[1] === \"toolpath\")\n  //\n  //   id = id[0];\n  //\n  //   if (id && !toolpath) {\n  //     store.update({ hovered: [id] });\n  //   } else {\n  //     store.update({ hovered: [] }); //this is a bit hackish\n  //   }\n  //\n  // }\n\n\n  var select = function select(id) {\n    id = id.split('_');\n    var toolpath = id[1] === \"toolpath\";\n    id = id[0];\n\n    if (id && !store.state.selected.includes(id) && !toolpath) {\n      store.update(function (s) {\n        return s.selected.push(id);\n      });\n      ;\n    } else {\n      store.update({\n        selected: []\n      }); //this is a bit hackish\n    }\n  }; //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n\n\n  if (!state.initialized) initialized();\n  var viewModel = Object.entries(store.state.contours).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        lines = _ref2[1];\n\n    return React.createElement(\"g\", {\n      onMouseEnter: function onMouseEnter(e) {\n        return groupHover(e.target.parentNode.id, true);\n      },\n      onMouseLeave: function onMouseLeave(e) {\n        return groupHover(e.target.parentNode.id, false);\n      },\n      key: \"\".concat(id),\n      id: \"\".concat(id, \"_contour\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, simplifyLines(lines, lines.length).map(function (line, i) {\n      return renderLine(line, \"\".concat(id, \"_index\").concat(i), {\n        selected: store.state.selected.includes(id),\n        highlighted: state.groupHovered.includes(id)\n      });\n    }));\n  });\n  var toolpathView = store.state.toolpaths.map(function (toolpath) {\n    return React.createElement(\"g\", {\n      key: \"\".concat(toolpath.id),\n      id: \"\".concat(toolpath.id, \"_toolpath\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, toolpath.visible && simplifyToolpath(toolpath.geometry.drawing).map(function (line, i) {\n      return renderLine(line, \"\".concat(toolpath.id, \"_index\").concat(i), {\n        toolpath: true\n      });\n    }));\n  });\n  var origin = React.createElement(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"10\",\n    stroke: \"black\",\n    \"stroke-width\": \"3\",\n    fill: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  });\n  viewModel = [].concat(_toConsumableArray(viewModel), _toConsumableArray(toolpathView));\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onMouseDown: function onMouseDown(e) {\n      return select(e.target.parentNode.id);\n    },\n    className: \"mainEvent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Workplane, {\n    groups: viewModel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"svg\", {\n    width: 0,\n    height: 0,\n    id: \"thisIsDumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"myInput\",\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    onChange: function onChange(e) {\n      var files = e.target.files;\n      var file = files[0];\n      var filetype = file.name.split('.')[1];\n      if (filetype === \"bbjs\") return uploadBBJS(e);\n      if (filetype === \"svg\") return uploadSVG(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(Button, {\n    marginRight: 4,\n    onClick: function onClick() {\n      return document.getElementById(\"myInput\").click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"upload (SVG or BBJS)\"), React.createElement(Button, {\n    onClick: function onClick() {\n      utils.download(\"save.bbjs\", JSON.stringify(store.state));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), \"Number Selected: \", store.state.selected.length, \"\\xA0\", React.createElement(Button, {\n    onClick: function onClick() {\n      var contours = Object.entries(store.state.contours);\n      contours = contours.filter(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            id = _ref4[0],\n            contour = _ref4[1];\n\n        return !store.state.selected.includes(id);\n      });\n      var toolpaths = store.state.toolpaths.filter(function (toolpath) {\n        return !store.state.selected.includes(toolpath.sourceGeometryID);\n      });\n      var newContours = {};\n      contours.forEach(function (contour) {\n        newContours[contour[0]] = contour[1];\n      });\n      contours = newContours;\n      store.update({\n        contours: contours,\n        toolpaths: toolpaths,\n        selected: []\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Settings\"), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \" \", React.createElement(MaterialType, {\n    firstSubmit: firstSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \" \", React.createElement(MaterialThickness, {\n    firstSubmit: firstSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \" \", React.createElement(Units, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \" \", React.createElement(Origin, {\n    firstSubmit: firstSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  })), !state.initialized ? React.createElement(Paragraph, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"select settings before editting options\") : \"\", React.createElement(Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \" \", React.createElement(AdvancedOptions, {\n    disabled: !state.initialized,\n    setDefault: true,\n    params: store.getState().defaultParameters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    marginTop: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Create Toolpaths\"), !state.initialized ? React.createElement(Paragraph, {\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"select settings before creating toolpaths\") : \"\", React.createElement(\"div\", {\n    className: \"toolpaths\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Pane, {\n    marginLeft: 8,\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(ProfileButton, {\n    disabled: !state.initialized,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginLeft: 8,\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(PocketButton, {\n    disabled: !state.initialized,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })), React.createElement(Pane, {\n    marginLeft: 8,\n    marginTop: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(DrillButton, {\n    disabled: !state.initialized,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    marginTop: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Toolpaths\"), React.createElement(ToolpathList, {\n    marginTop: 4,\n    state: store.getState(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js"],"names":["React","useState","Button","Heading","Pane","Paragraph","simplify","utils","uploadSVG","uploadBBJS","Workplane","MaterialType","MaterialThickness","Origin","Units","PocketButton","ProfileButton","DrillButton","AdvancedOptions","ToolpathList","renderLine","connectPoints","store","TOLERANCE","HQ","linesToPolylinePoints","lines","lastIndex","map","line","i","x","origin","y","end","flat","simplifyLines","length","el","simplifyToolpath","toolpath","Array","isArray","lines2","App","thicknessSubmit","materialSubmit","originSubmit","initialized","groupHovered","state","setState","firstSubmit","name","old","groupHover","id","enter","split","currentGroupHovered","push","select","selected","includes","update","s","viewModel","Object","entries","contours","e","target","parentNode","highlighted","toolpathView","toolpaths","visible","geometry","drawing","display","files","file","filetype","document","getElementById","click","download","JSON","stringify","filter","contour","sourceGeometryID","newContours","forEach","getState","defaultParameters"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Button, Heading, Pane, Paragraph} from 'evergreen-ui';\nimport './App.css';\n\nimport simplify from 'simplify-js';\n\nimport * as utils from './utils.js';\n\nimport {uploadSVG, uploadBBJS} from './uploadSVG.js';\n\nimport {Workplane} from './components/Workplane.js'\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {ProfileButton} from './components/ProfileButton.js';\nimport {DrillButton} from './components/DrillButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\nimport {renderLine, connectPoints} from './unmakerjs/primitives.js';\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nconst TOLERANCE = 1;\nconst HQ = false;\n\nconst linesToPolylinePoints = (lines, lastIndex) => lines.map((line, i) => {\n  if (i === lastIndex-1) return [{x:line.origin[0], y:line.origin[1]}, {x:line.end[0], y:line.end[1]}];\n\n  return {x:line.origin[0], y:line.origin[1]}\n}).flat()\n\nconst simplifyLines = (lines) => connectPoints(simplify(linesToPolylinePoints(lines, lines.length), TOLERANCE, HQ).map(el => [el.x, el.y]));\n\nconst simplifyToolpath = (toolpath) => toolpath.map(lines => {\n  if (!Array.isArray(lines[0])) return simplifyLines(lines, lines.length);\n\n  return lines.map(lines2 => simplifyLines(lines2, lines2.length)).flat();\n}).flat()\n\nconst App = () => {\n\n  const [state, setState] = useState({\n    thicknessSubmit : false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: true, //will be false\n    groupHovered: [],\n  });\n\n  const firstSubmit = (name) => {\n    let old = state;\n    old[name] = true;\n\n    setState({...state, old});\n  }\n\n  const initialized = () => {\n    if (!state.initialized && (state.thicknessSubmit && state.materialSubmit && state.originSubmit)) {\n      setState({...state, initialized:true});\n    }\n  }\n\n  const groupHover = (id, enter) => {\n    id = id.split('_');\n    let toolpath = (id[1] === \"toolpath\")\n    id = id[0];\n\n    let currentGroupHovered = state.groupHovered;\n    currentGroupHovered.push(id);\n\n\n    if (id && !toolpath && enter) {\n      setState({...state, groupHovered: currentGroupHovered});\n    } else {\n      setState({...state, groupHovered: []});\n    }\n\n  }\n\n  // const hover = (id) => {\n  //   id = id.split('_');\n  //   let toolpath = (id[1] === \"toolpath\")\n  //\n  //   id = id[0];\n  //\n  //   if (id && !toolpath) {\n  //     store.update({ hovered: [id] });\n  //   } else {\n  //     store.update({ hovered: [] }); //this is a bit hackish\n  //   }\n  //\n  // }\n\n  const select = (id) => {\n    id = id.split('_');\n    let toolpath = (id[1] === \"toolpath\")\n\n    id = id[0];\n\n    if (id && !store.state.selected.includes(id) && !toolpath) {\n      store.update(s => s.selected.push(id));;\n    } else {\n      store.update({selected: []}); //this is a bit hackish\n    }\n\n  }\n\n\n\n  //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n  if (!state.initialized) initialized();\n\n  let viewModel = Object.entries(store.state.contours).map(([id, lines]) => (\n    <g\n      onMouseEnter={(e) => groupHover(e.target.parentNode.id, true)}\n      onMouseLeave={(e) => groupHover(e.target.parentNode.id, false)}\n      key={`${id}`}\n      id={`${id}_contour`}>\n      {simplifyLines(lines, lines.length).map((line, i) => renderLine(\n        line,\n        `${id}_index${i}`,\n        {\n          selected: store.state.selected.includes(id),\n          highlighted: state.groupHovered.includes(id)\n        }))}\n     </g>\n  ));\n\n  let toolpathView = store.state.toolpaths.map(toolpath => (\n    <g\n      key={`${toolpath.id}`}\n      id={`${toolpath.id}_toolpath`}>\n      {toolpath.visible && simplifyToolpath(toolpath.geometry.drawing).map((line, i) => renderLine(line,\n        `${toolpath.id}_index${i}`,\n        {\n         toolpath: true\n        }))}\n    </g>\n  ));\n\n  let origin = <circle cx=\"0\" cy=\"0\" r=\"10\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n\n  viewModel = [...viewModel, ...toolpathView]\n\n  return (\n    <div\n      className=\"wrapper\"\n      >\n\n\n      <div>\n        <div\n          onMouseDown={(e) => select(e.target.parentNode.id)}\n          className=\"mainEvent\">\n          <Workplane groups={viewModel}/>\n          <svg width={0} height={0} id={\"thisIsDumb\"}></svg>\n        </div>\n\n        <div>\n          <input\n            id=\"myInput\"\n            type=\"file\"\n            style={{display:\"none\"}}\n            onChange={(e) => {\n              let files = e.target.files;\n              let file = files[0];\n\n              let filetype = file.name.split('.')[1];\n\n              if (filetype === \"bbjs\") return uploadBBJS(e);\n              if (filetype === \"svg\") return uploadSVG(e)\n            }}/>\n          <Button\n            marginRight={4}\n            onClick={() => document.getElementById(\"myInput\").click()}>\n              upload (SVG or BBJS)\n          </Button>\n          <Button\n            onClick={() => {\n              utils.download(\"save.bbjs\", JSON.stringify(store.state));\n              }}>\n            save\n          </Button>\n          <br/>\n          Number Selected: {store.state.selected.length}\n          &nbsp;\n          <Button\n            onClick={() => {\n              let contours = Object.entries(store.state.contours);\n              contours = contours.filter(([id, contour]) => !store.state.selected.includes(id))\n\n              let toolpaths = store.state.toolpaths.filter(toolpath => !store.state.selected.includes(toolpath.sourceGeometryID));\n\n              let newContours = {};\n\n              contours.forEach(contour => {\n                newContours[contour[0]] = contour[1];\n              })\n\n              contours = newContours;\n\n              store.update({\n                contours,\n                toolpaths,\n                selected: []\n              })\n\n            }}>\n            Delete\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"sidebar\">\n        <div>\n          <Heading>Settings</Heading>\n          <Pane marginTop={4}> <MaterialType firstSubmit={firstSubmit}/></Pane>\n          <Pane marginTop={4}> <MaterialThickness firstSubmit={firstSubmit}/></Pane>\n          <Pane marginTop={4}> <Units/></Pane>\n          <Pane marginTop={4}> <Origin firstSubmit={firstSubmit}/></Pane>\n          {(!state.initialized) ? <Paragraph marginTop={4}>select settings before editting options</Paragraph> : \"\"}\n          <Pane> <AdvancedOptions disabled={!state.initialized} setDefault={true} params={store.getState().defaultParameters}/></Pane>\n        </div>\n\n        <div>\n          <Heading marginTop={8}>Create Toolpaths</Heading>\n          {(!state.initialized) ? <Paragraph marginTop={4}>select settings before creating toolpaths</Paragraph> : \"\"}\n          <div className=\"toolpaths\">\n            <Pane marginLeft={8} marginTop={4}><ProfileButton disabled={!state.initialized}/></Pane>\n            <Pane marginLeft={8} marginTop={4}><PocketButton disabled={!state.initialized}/></Pane>\n            <Pane marginLeft={8} marginTop={4}><DrillButton disabled={!state.initialized}/></Pane>\n          </div>\n        </div>\n\n        <div>\n          <Heading marginTop={8}>Toolpaths</Heading>\n          <ToolpathList marginTop={4} state={store.getState()}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}