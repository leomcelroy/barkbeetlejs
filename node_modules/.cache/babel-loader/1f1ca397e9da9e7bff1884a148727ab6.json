{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\nvar STRANGE_CORRECTION = 0.0000001; //TODO: why is this neccessary otherwise outline shits the bed\n\nvar len = function len(toolpath) {\n  return Object.keys(toolpath.models).length;\n};\n\nvar isToolpath = function isToolpath(toolpath) {\n  //console.log(\"toolpath\", toolpath);\n  if (len(toolpath) === 1) {\n    return true;\n  } else if (len(toolpath) > 1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar intToolpath = function intToolpath(geo, radius) {\n  var corners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  // console.log(\"geo\", geo);\n  // console.log(len(geo));\n  // let corners = (len(geo) === 1) ? 1 : 0;\n  var pass;\n\n  try {\n    pass = mjs.model.outline(geo, radius + STRANGE_CORRECTION, corners, true);\n  } catch (_unused) {\n    corners = 0;\n    pass = mjs.model.outline(geo, radius + STRANGE_CORRECTION, corners, true);\n  }\n\n  return pass;\n};\n\nvar intToolpaths = function intToolpaths(geo, params) {\n  var models = {};\n  var count = 0;\n  var pass = intToolpath(geo, params.compensatedRadius * params.stepoverPercentage);\n\n  if (isToolpath(pass) !== true) {\n    return {\n      models: {}\n    };\n  }\n\n  while (isToolpath(pass)) {\n    models[count] = pass;\n    count++;\n    pass = intToolpath(models[count - 1], params.compensatedRadius * params.stepoverPercentage); // this is a strange issue\n    // not entirely sure why mjs has issues with some corner parameters when there are sharp separate corners in model\n    // try {\n    //   pass = intToolpath(models[count - 1], params.compensatedRadius * params.stepoverPercentage, corners);\n    // } catch {\n    //   corners = 0;\n    // }\n    //\n    // if (len(pass) > 1) {\n    //   corners = 0;\n    // }\n    //console.log(\"pass\", pass, \"count\", count, \"ispath\", isToolpath(pass));\n  }\n\n  var model = {\n    models: models //console.log(\"model\", model)\n\n  };\n  return model;\n};\n\nvar pocket = function pocket(model, params) {\n  var p = model;\n  var outlines = intToolpaths(p, params);\n  var iterOut = Object.values(outlines.models);\n  var chains = iterOut.map(function (x) {\n    return mjs.model.findChains(x);\n  });\n  var divisions = chains.map(function (c) {\n    return c.map(function (c2) {\n      return Math.floor(c2.pathLength / params.minimumSpacing);\n    });\n  });\n  var spacing = chains.map(function (c, i) {\n    return c.map(function (c2, j) {\n      return c2.pathLength / divisions[i][j];\n    });\n  });\n  var keyPoints = chains.map(function (c, i) {\n    return c.map(function (c2, j) {\n      return mjs.chain.toKeyPoints(c2, spacing[i][j]);\n    });\n  });\n  console.log(keyPoints);\n  var gcodePoints = keyPoints.map(function (c) {\n    var points = c.map(function (c2) {\n      var firstPoint = c2[0];\n      firstPoint = \"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(params.feedRate);\n      return _toConsumableArray(c2.map(function (c3) {\n        return \"G1 X\".concat(c3[0], \" Y\").concat(c3[1], \" F\").concat(params.feedRate);\n      })).concat([firstPoint]);\n    });\n\n    if (c.length > 1) {\n      console.log(points);\n      return [\"G1 Z\".concat(params.jogHeight, \" F9.0\"), points[points.length - 1], \"plunge\"].concat(_toConsumableArray(points));\n    }\n\n    return [\"plunge\"].concat(_toConsumableArray(points));\n  });\n  var paths = gcodePoints.flat(1);\n  console.log(\"paths\", paths);\n  var firstPoint = keyPoints[0][0][0];\n  var paths2 = params.depthOfPasses.map(function (p, i) {\n    return [\"G1 Z\".concat(params.depthOfPasses[i], \" F12.0\")].concat(_toConsumableArray(paths.flat(1)));\n  });\n  paths2 = paths2.flat(1);\n  var gcode = [params.units, \"G90\", \"G1 Z\".concat(params.jogHeight, \" F9.0\"), \"G0 X\".concat(firstPoint[0][0], \" Y\").concat(firstPoint[0][1])].concat(_toConsumableArray(paths2), [\"G1 Z\".concat(params.jogHeight, \" F9.0\")]); // write to a new file named\n\n  var filename = 'testGcodePocket.nc';\n  var text = gcode.join('\\n');\n  return {\n    drawing: outlines,\n    gcode: text,\n    filename: filename\n  };\n};\n\nexport { pocket };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/toolpaths/pocket.js"],"names":["mjs","STRANGE_CORRECTION","len","toolpath","Object","keys","models","length","isToolpath","intToolpath","geo","radius","corners","pass","model","outline","intToolpaths","params","count","compensatedRadius","stepoverPercentage","pocket","p","outlines","iterOut","values","chains","map","x","findChains","divisions","c","c2","Math","floor","pathLength","minimumSpacing","spacing","i","j","keyPoints","chain","toKeyPoints","console","log","gcodePoints","points","firstPoint","feedRate","c3","jogHeight","paths","flat","paths2","depthOfPasses","gcode","units","filename","text","join","drawing"],"mappings":"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","sourcesContent":["// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\n\nconst STRANGE_CORRECTION = 0.0000001; //TODO: why is this neccessary otherwise outline shits the bed\n\nconst len = (toolpath) => Object.keys(toolpath.models).length;\n\nconst isToolpath = (toolpath) => {\n  //console.log(\"toolpath\", toolpath);\n\n  if (len(toolpath) === 1) {\n    return true;\n  } else if (len(toolpath) > 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst intToolpath = (geo, radius, corners = 1) => {\n  // console.log(\"geo\", geo);\n  // console.log(len(geo));\n  // let corners = (len(geo) === 1) ? 1 : 0;\n\n  let pass;\n\n  try {\n    pass = mjs.model.outline(geo, radius + STRANGE_CORRECTION, corners, true);\n  } catch {\n    corners = 0;\n    pass = mjs.model.outline(geo, radius + STRANGE_CORRECTION, corners, true);\n  }\n\n  return pass\n}\n\nconst intToolpaths = (geo, params) => {\n  let models = {}\n  let count = 0;\n\n  let pass = intToolpath(geo, params.compensatedRadius * params.stepoverPercentage);\n\n  if (isToolpath(pass) !== true) {\n    return {models:{}};\n  }\n\n  while ( isToolpath(pass)) {\n    models[count] = pass;\n    count++;\n    pass = intToolpath(models[count - 1], params.compensatedRadius * params.stepoverPercentage);\n\n    // this is a strange issue\n    // not entirely sure why mjs has issues with some corner parameters when there are sharp separate corners in model\n    // try {\n    //   pass = intToolpath(models[count - 1], params.compensatedRadius * params.stepoverPercentage, corners);\n    // } catch {\n    //   corners = 0;\n    // }\n    //\n    // if (len(pass) > 1) {\n    //   corners = 0;\n    // }\n\n    //console.log(\"pass\", pass, \"count\", count, \"ispath\", isToolpath(pass));\n  }\n\n  let model = {models}\n\n  //console.log(\"model\", model)\n\n  return model;\n}\n\nconst pocket = (model, params) => {\n  let p = model;\n\n  let outlines = intToolpaths(p, params);\n  let iterOut = Object.values(outlines.models);\n\n  let chains = iterOut.map(x => mjs.model.findChains(x));\n\n  var divisions = chains.map(c => c.map(c2 => Math.floor(c2.pathLength / params.minimumSpacing)));\n\n  var spacing = chains.map((c,i) => c.map((c2, j) => c2.pathLength / divisions[i][j]));\n\n  let keyPoints = chains.map((c, i) => c.map((c2, j) => mjs.chain.toKeyPoints(c2, spacing[i][j])));\n\n  console.log(keyPoints);\n\n  let gcodePoints = keyPoints.map(c => {\n    let points = c.map(c2 => {\n      let firstPoint = c2[0];\n      firstPoint = `G1 X${firstPoint[0]} Y${firstPoint[1]} F${params.feedRate}`;\n\n      return [\n        ...c2.map(c3 => `G1 X${c3[0]} Y${c3[1]} F${params.feedRate}`),\n        firstPoint\n      ]}\n    );\n\n    if (c.length > 1) {\n      console.log(points)\n      return [\n        `G1 Z${params.jogHeight} F9.0`,\n        points[points.length - 1],\n        \"plunge\",\n        ...points\n      ]\n    }\n\n    return [\n      \"plunge\",\n      ...points\n    ];\n  });\n\n  let paths = gcodePoints.flat(1);\n  console.log(\"paths\", paths)\n\n  let firstPoint = keyPoints[0][0][0];\n\n  let paths2 = params.depthOfPasses.map((p,i) => [\n    `G1 Z${params.depthOfPasses[i]} F12.0`,\n    ...paths.flat(1),\n  ])\n  paths2 = paths2.flat(1);\n\n  let gcode = [\n    params.units,\n    \"G90\",\n    `G1 Z${params.jogHeight} F9.0`,\n    `G0 X${firstPoint[0][0]} Y${firstPoint[0][1]}`,\n    ...paths2,\n    `G1 Z${params.jogHeight} F9.0`,\n  ]\n\n  // write to a new file named\n  let filename = 'testGcodePocket.nc';\n\n  let text = gcode.join('\\n');\n\n  return {drawing: outlines, gcode: text, filename};\n};\n\n\nexport {pocket};\n"]},"metadata":{},"sourceType":"module"}