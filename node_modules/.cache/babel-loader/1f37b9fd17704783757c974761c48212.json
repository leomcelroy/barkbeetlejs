{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Icon } from '../../icon';\nimport { TableRow, TextTableCell } from '../../table';\n\nvar Option =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Option, _PureComponent);\n\n  function Option() {\n    _classCallCheck(this, Option);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Option).apply(this, arguments));\n  }\n\n  _createClass(Option, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          onSelect = _this$props.onSelect,\n          onDeselect = _this$props.onDeselect,\n          isHighlighted = _this$props.isHighlighted,\n          isSelected = _this$props.isSelected,\n          isSelectable = _this$props.isSelectable,\n          style = _this$props.style,\n          height = _this$props.height,\n          props = _objectWithoutProperties(_this$props, [\"label\", \"onSelect\", \"onDeselect\", \"isHighlighted\", \"isSelected\", \"isSelectable\", \"style\", \"height\"]);\n\n      return React.createElement(TableRow, _extends({\n        isSelectable: isSelectable,\n        isHighlighted: isHighlighted,\n        onSelect: onSelect,\n        onDeselect: onDeselect,\n        isSelected: isSelected,\n        style: style,\n        display: \"flex\",\n        alignItems: \"center\",\n        borderBottom: false\n      }, props), React.createElement(Pane, {\n        paddingLeft: 12,\n        paddingRight: 8,\n        opacity: isSelected ? 1 : 0,\n        flexGrow: 0,\n        paddingTop: 4\n      }, React.createElement(Icon, {\n        color: \"selected\",\n        icon: \"tick\",\n        size: 14\n      })), React.createElement(TextTableCell, {\n        height: height,\n        borderBottom: \"muted\",\n        textProps: isSelected ? {\n          color: 'selected'\n        } : {},\n        paddingLeft: 0,\n        borderRight: null,\n        flex: 1,\n        alignSelf: \"stretch\"\n      }, label));\n    }\n  }]);\n\n  return Option;\n}(PureComponent);\n\nOption.displayName = \"Option\";\n\n_defineProperty(Option, \"propTypes\", {\n  label: PropTypes.string,\n  style: PropTypes.any,\n  height: PropTypes.number,\n  onSelect: PropTypes.func,\n  onDeselect: PropTypes.func,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  isSelectable: PropTypes.bool\n});\n\nexport { Option as default };","map":null,"metadata":{},"sourceType":"module"}