{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// makerjs model, depth, params -> pocket toolpath\nimport { clipOffsetContour } from '../unmakerjs/clipper.js';\n\nvar len = function len(toolpath) {\n  return Object.keys(toolpath).length;\n};\n\nvar isToolpath = function isToolpath(toolpath) {\n  // console.log(\"toolpath\", toolpath);\n  if (len(toolpath) >= 1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar intToolpaths = function intToolpaths(geo, params) {\n  var contours = {};\n  var count = 0;\n  var pass = clipOffsetContour(geo, -params.compensatedRadius); //returns array of contours\n\n  if (isToolpath(pass) !== true) {\n    return contours;\n  }\n\n  while (isToolpath(pass)) {\n    contours[count] = pass;\n    count++;\n    var lastPass = contours[count - 1]; // console.log(\"lastPass\", lastPass)\n\n    pass = lastPass.map(function (contour) {\n      return clipOffsetContour(contour, -params.compensatedRadius * params.stepoverPercentage / 100);\n    }).flat();\n  }\n\n  return contours;\n};\n\nvar pocket = function pocket(contour, params) {\n  var outlines = intToolpaths(contour, params);\n  var keyPoints = Object.values(outlines).flat().map(function (outline) {\n    return outline.map(function (line) {\n      return [line.origin[0], line.origin[1]];\n    });\n  }); // outlines = Object.values(outlines).flat(2);\n  // console.log(\"outlines\", outlines);\n  // console.log(\"keyPoints\", keyPoints);\n\n  var gcodePoints = keyPoints.map(function (points) {\n    var raise = points.length > 1;\n    var firstPoint = points[0];\n    firstPoint = \"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(params.feedRate);\n\n    if (raise) {\n      return [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate), firstPoint, //want to jog to this one\n      \"plunge\"].concat(_toConsumableArray(points.map(function (point) {\n        return \"G1 X\".concat(point[0], \" Y\").concat(point[1], \" F\").concat(params.feedRate);\n      })), [firstPoint, \"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]);\n    } else {\n      return [firstPoint, \"plunge\"].concat(_toConsumableArray(points.map(function (point) {\n        return \"G1 X\".concat(point[0], \" Y\").concat(point[1], \" F\").concat(params.feedRate);\n      })), [firstPoint]);\n    }\n  });\n  var paths = gcodePoints.flat(); // let firstPoint = keyPoints[0][0][0];\n\n  var paths2 = params.depthOfPasses.map(function (p, i) {\n    return _toConsumableArray(paths.map(function (x) {\n      return x === \"plunge\" ? \"G1 Z\".concat(params.depthOfPasses[i], \" F1000.0\") : x;\n    }));\n  }); // console.log(paths2)\n\n  paths2 = paths2.flat();\n  var units;\n  if (params.units === \"in\") units = \"G20\";\n  if (params.units === \"mm\") units = \"G21\";\n  var preamble = [units, \"G90\"];\n  var gcode = [].concat(preamble, [\"(end of preamble)\", \"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)], _toConsumableArray(paths2), [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]);\n  var text = gcode.join('\\n'); //write to a new file named\n  // let filename = 'testGcodePocket.gcode';\n\n  return {\n    drawing: Object.values(outlines),\n    gcode: text\n  };\n};\n\nexport { pocket };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/toolpaths/pocket.js"],"names":["clipOffsetContour","len","toolpath","Object","keys","length","isToolpath","intToolpaths","geo","params","contours","count","pass","compensatedRadius","lastPass","map","contour","stepoverPercentage","flat","pocket","outlines","keyPoints","values","outline","line","origin","gcodePoints","points","raise","firstPoint","feedRate","jogHeight","jogRate","point","paths","paths2","depthOfPasses","p","i","x","units","preamble","gcode","text","join","drawing"],"mappings":"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","sourcesContent":["// makerjs model, depth, params -> pocket toolpath\nimport {clipOffsetContour} from '../unmakerjs/clipper.js'\n\n\nconst len = (toolpath) => Object.keys(toolpath).length;\n\nconst isToolpath = (toolpath) => {\n  // console.log(\"toolpath\", toolpath);\n\n  if (len(toolpath) >= 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst intToolpaths = (geo, params) => {\n  let contours = {};\n  let count = 0;\n\n  let pass = clipOffsetContour(geo, -params.compensatedRadius); //returns array of contours\n\n  if (isToolpath(pass) !== true) {\n    return contours;\n  }\n\n  while (isToolpath(pass)) {\n    contours[count] = pass;\n    count++;\n    let lastPass = contours[count - 1];\n    // console.log(\"lastPass\", lastPass)\n    pass = lastPass.map(contour => clipOffsetContour(contour, -params.compensatedRadius * params.stepoverPercentage/100)).flat();\n\n  }\n\n  return contours;\n}\n\nconst pocket = (contour, params) => {\n\n  let outlines = intToolpaths(contour, params);\n\n  let keyPoints = Object.values(outlines).flat().map(outline => outline.map(line => [line.origin[0], line.origin[1]]));\n\n  // outlines = Object.values(outlines).flat(2);\n  // console.log(\"outlines\", outlines);\n\n  // console.log(\"keyPoints\", keyPoints);\n\n  let gcodePoints = keyPoints.map(points => {\n    let raise = points.length > 1;\n    let firstPoint = points[0];\n\n    firstPoint = `G1 X${firstPoint[0]} Y${firstPoint[1]} F${params.feedRate}`;\n\n    if (raise) {\n      return [\n        `G1 Z${params.jogHeight} F${params.jogRate}`,\n        firstPoint, //want to jog to this one\n        \"plunge\",\n        ...points.map(point => `G1 X${point[0]} Y${point[1]} F${params.feedRate}`),\n        firstPoint,\n        `G1 Z${params.jogHeight} F${params.jogRate}`,\n      ]\n    } else {\n      return [\n        firstPoint,\n        \"plunge\",\n        ...points.map(point => `G1 X${point[0]} Y${point[1]} F${params.feedRate}`),\n        firstPoint\n      ]\n    }\n  });\n\n  let paths = gcodePoints.flat();\n\n  // let firstPoint = keyPoints[0][0][0];\n\n  let paths2 = params.depthOfPasses.map((p,i) => [\n    ...paths.map(x => (x === \"plunge\") ? `G1 Z${params.depthOfPasses[i]} F1000.0` : x), //plunge rate\n  ])\n\n  // console.log(paths2)\n\n  paths2 = paths2.flat();\n\n  let units;\n  if (params.units === \"in\") units = \"G20\";\n  if (params.units === \"mm\") units = \"G21\";\n\n  let preamble = [units, \"G90\"];\n\n  let gcode = [\n    ...preamble,\n    \"(end of preamble)\",\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n    // `G0 X${firstPoint[0]} Y${firstPoint[1]}`,\n    ...paths2,\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n  ]\n\n\n  let text = gcode.join('\\n');\n\n  //write to a new file named\n  // let filename = 'testGcodePocket.gcode';\n\n  return {drawing: Object.values(outlines), gcode: text};\n};\n\n\nexport {pocket};\n"]},"metadata":{},"sourceType":"module"}