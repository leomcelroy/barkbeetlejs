{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n\n\nvar supportsPassive = void 0;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {\n  supportsPassive = false;\n}\n/**\n * A helper function for manually setting touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {boolean} add - Boolean if the event listener should be added or removed.\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\n\n\nexport function setTouchEvent(add, el, eventType, callback, options) {\n  return el[(add ? 'add' : 'remove') + 'EventListener']('touch' + eventType, callback, supportsPassive ? _extends({\n    passive: true\n  }, options) : false);\n}\n/**\n * A helper function for manually adding touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\n\nexport function addTouchEvent(el, type, callback, options) {\n  return setTouchEvent(true, el, type, callback, options);\n}\n/**\n * A helper function for manually removing touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\n\nexport function removeTouchEvent(el, type, callback, options) {\n  return setTouchEvent(false, el, type, callback, options);\n}","map":null,"metadata":{},"sourceType":"module"}