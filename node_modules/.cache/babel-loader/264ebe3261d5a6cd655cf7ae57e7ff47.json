{"ast":null,"code":"import _slicedToArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { uploadSVG } from './uploadSVG.js';\nimport { Workplane } from './Workplane.js';\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { ProfileButton } from './components/ProfileButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport { renderLine } from './unmakerjs/primitives.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      thicknessSubmit: false,\n      materialSubmit: false,\n      originSubmit: false,\n      initialized: true //will be false\n\n    };\n\n    _this.firstSubmit = function (name) {\n      var old = _this.state;\n      old[name] = true;\n\n      _this.setState({\n        old: old\n      });\n    };\n\n    _this.hover = function (id) {\n      id = id.split('_')[0];\n\n      if (id) {\n        store.update({\n          hovered: [id]\n        });\n      } else {\n        store.update({\n          hovered: []\n        }); //this is a bit hackish\n      }\n\n      store.update({\n        hovered: [id]\n      });\n    };\n\n    _this.select = function (id) {\n      if (dataRoute === null) {\n        store.update({\n          selected: []\n        });\n      } else {\n        //TODO this is when hover is turned off\n        if (dataRoute.split(\",\").length < 4) {\n          return;\n        } // TODO: This is a bit of a hack\n\n\n        dataRoute = dataRoute.split(\",\")[3].replace(/[\\\"]/g, \"\");\n\n        var _id = dataRoute.split(\"_\");\n\n        _id = _id.length > 1 ? _id[1] : _id[0];\n        store.update(function (s) {\n          return s.selected.push(_id);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initialized\",\n    value: function initialized() {\n      if (!this.state.initialized && this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit) {\n        this.setState({\n          initialized: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      if (!this.state.initialized) this.initialized();\n      var drawing = {\n        models: {\n          shapes: {\n            models: _objectSpread({}, store.getState().shapes)\n          },\n          cuts: {\n            models: {}\n          },\n          selected: {\n            models: {}\n          },\n          hovered: {\n            models: {}\n          }\n        }\n      };\n      store.getState().toolpaths.forEach(function (path) {\n        if (path.cutSelected) {\n          drawing.models.cuts.models[path.id] = path.geometry.drawing;\n        }\n      });\n      store.getState().selected.forEach(function (shape) {\n        drawing.models.selected.models[\"selected_\".concat(shape)] = store.getState().shapes[shape];\n      });\n      store.getState().hovered.forEach(function (shape) {\n        drawing.models.hovered.models[\"hovered_\".concat(shape)] = store.getState().shapes[shape];\n      });\n      drawing.models.cuts.layer = \"red\";\n      drawing.models.selected.layer = \"blue\";\n      drawing.models.hovered.layer = \"yellow\";\n      var viewModel = mjs.exporter.toSVG(drawing, {\n        useSvgPathOnly: false,\n        strokeWidth: \".5mm\"\n      });\n      viewModel = [viewModel];\n      var viewModel2 = Object.entries(store.state.contours).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            id = _ref2[0],\n            lines = _ref2[1];\n\n        return React.createElement(\"g\", {\n          key: \"\".concat(id, \"_group\"),\n          id: \"\".concat(id, \"_group\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, lines.map(function (line, i) {\n          return renderLine(line, \"\".concat(id, \"_index\").concat(i), false, store.state.hovered.includes(id));\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onMouseMove: function onMouseMove(e) {\n          return _this2.hover(e.target.parentNode.id);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this2.select(e.target.parentNode.id);\n        },\n        className: \"mainEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(Workplane, {\n        groups: [],\n        groups2: viewModel2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"svg\", {\n        width: 0,\n        height: 0,\n        id: \"thisIsDumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref3) {\n          return _this2.upload = _ref3;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: uploadSVG,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Button, {\n        marginRight: 4,\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return console.log(store.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"save\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"Number Selected: \", store.state.selected.length, \"\\xA0\", React.createElement(Button, {\n        onClick: function onClick() {\n          var shapes = Object.entries(store.state.shapes);\n          shapes = shapes.filter(function (_ref4) {\n            var _ref5 = _slicedToArray(_ref4, 2),\n                id = _ref5[0],\n                shape = _ref5[1];\n\n            return !store.state.selected.includes(id);\n          });\n          var toolpaths = store.state.toolpaths.filter(function (toolpath) {\n            return !store.state.selected.includes(toolpath.sourceGeometryID);\n          });\n          var newShapes = {};\n          shapes.forEach(function (shape) {\n            newShapes[shape[0]] = shape[1];\n          });\n          shapes = newShapes;\n          store.update({\n            shapes: shapes,\n            toolpaths: toolpaths,\n            selected: []\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialType, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialThickness, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \" \", React.createElement(Units, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \" \", React.createElement(Origin, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"select settings before editting options\") : \"\", React.createElement(Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \" \", React.createElement(AdvancedOptions, {\n        disabled: !this.state.initialized,\n        default: true,\n        params: store.getState().defaultParameters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Create Toolpaths\"), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"select settings before creating toolpaths\") : \"\", React.createElement(\"div\", {\n        className: \"toolpaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(ProfileButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(PocketButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginLeft: 8,\n        marginTop: 4,\n        onClick: function onClick() {\n          return console.log(store.getState());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Drill\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Toolpaths\"), React.createElement(ToolpathList, {\n        marginTop: 4,\n        state: store.getState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js"],"names":["React","Component","PureComponent","Button","Heading","Pane","Paragraph","utils","mjs","params","s2p","svgson","uploadSVG","Workplane","MaterialType","MaterialThickness","Origin","Units","PocketButton","ProfileButton","AdvancedOptions","ToolpathList","renderLine","store","App","state","thicknessSubmit","materialSubmit","originSubmit","initialized","firstSubmit","name","old","setState","hover","id","split","update","hovered","select","dataRoute","selected","length","replace","s","push","drawing","models","shapes","getState","cuts","toolpaths","forEach","path","cutSelected","geometry","shape","layer","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","viewModel2","Object","entries","contours","map","lines","line","i","includes","e","target","parentNode","ref","upload","display","click","console","log","filter","toolpath","sourceGeometryID","newShapes","defaultParameters"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {Button, Heading, Pane, Paragraph} from 'evergreen-ui';\nimport './App.css';\n\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\n\nimport {uploadSVG} from './uploadSVG.js';\n\nimport {Workplane} from './Workplane.js'\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {ProfileButton} from './components/ProfileButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\nimport {renderLine} from './unmakerjs/primitives.js';\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nclass App extends Component {\n\n  state = {\n    thicknessSubmit : false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: true, //will be false\n  }\n\n  firstSubmit = (name) => {\n    let old = this.state;\n    old[name] = true;\n\n    this.setState({old});\n  }\n\n  initialized() {\n    if (!this.state.initialized && (this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit)) {\n      this.setState({initialized:true});\n    }\n  }\n\n  hover = (id) => {\n    id = id.split('_')[0];\n\n    if (id) {\n      store.update({ hovered: [id] });\n    } else {\n      store.update({ hovered: [] }); //this is a bit hackish\n    }\n\n    store.update({ hovered: [id] });\n  }\n\n  select = (id) => {\n\n    if (dataRoute === null) {\n      store.update({selected:[]});\n    }\n\n    else { //TODO this is when hover is turned off\n      if (dataRoute.split(\",\").length < 4) {return} // TODO: This is a bit of a hack\n\n      dataRoute = dataRoute.split(\",\")[3].replace(/[\\\"]/g, \"\");\n\n      let id = dataRoute.split(\"_\");\n      id = (id.length > 1) ? id[1] : id[0];\n\n      store.update(s => s.selected.push(id));\n    }\n\n  }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    if (!this.state.initialized) this.initialized();\n\n    let drawing = {\n      models: {\n        shapes: {\n          models: {\n            ...store.getState().shapes\n          }\n        },\n        cuts: {\n          models: {}\n        },\n        selected: {\n          models: {}\n        },\n        hovered: {\n          models: {}\n        }\n      }\n    }\n\n    store.getState().toolpaths.forEach(path => {\n      if (path.cutSelected) {\n        drawing.models.cuts.models[path.id] = path.geometry.drawing;\n      }\n    })\n\n    store.getState().selected.forEach(shape => {\n      drawing.models.selected.models[`selected_${shape}`] = store.getState().shapes[shape];\n    })\n\n    store.getState().hovered.forEach(shape => {\n      drawing.models.hovered.models[`hovered_${shape}`] = store.getState().shapes[shape];\n    })\n\n    drawing.models.cuts.layer = \"red\";\n    drawing.models.selected.layer = \"blue\";\n    drawing.models.hovered.layer = \"yellow\";\n\n    let viewModel = mjs.exporter.toSVG(drawing, {\n      useSvgPathOnly:false,\n      strokeWidth:\".5mm\",\n    });\n\n    viewModel = [viewModel];\n\n    let viewModel2 = Object.entries(store.state.contours).\n                      map(([id, lines]) => <g\n                                            key={`${id}_group`}\n                                            id={`${id}_group`}>\n                                            {lines.map((line, i) => renderLine(line, `${id}_index${i}`, false, store.state.hovered.includes(id)))}\n                                           </g>);\n\n    return (\n      <div\n        className=\"wrapper\"\n        >\n\n\n        <div>\n          <div\n            onMouseMove={(e) => this.hover(e.target.parentNode.id)}\n            onMouseDown={(e) => this.select(e.target.parentNode.id)}\n            className=\"mainEvent\">\n            <Workplane groups={viewModel}/>\n            <Workplane groups={[]} groups2={viewModel2}/>\n            <svg width={0} height={0} id={\"thisIsDumb\"}></svg>\n          </div>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => this.upload = ref}\n              style={{ display: 'none' }}\n              onChange={uploadSVG}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => this.upload.click()}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button\n              onClick={() => console.log(store.state)}>\n              save\n            </Button>\n            <br/>\n            Number Selected: {store.state.selected.length}\n            &nbsp;\n            <Button\n              onClick={() => {\n                let shapes = Object.entries(store.state.shapes);\n                shapes = shapes.filter(([id, shape]) => !store.state.selected.includes(id))\n\n                let toolpaths = store.state.toolpaths.filter(toolpath => !store.state.selected.includes(toolpath.sourceGeometryID));\n\n                let newShapes = {};\n\n                shapes.forEach(shape => {\n                  newShapes[shape[0]] = shape[1];\n                })\n\n                shapes = newShapes;\n\n                store.update({\n                  shapes,\n                  toolpaths,\n                  selected: []\n                })\n\n              }}>\n              Delete\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <MaterialThickness firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin firstSubmit={this.firstSubmit}/></Pane>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before editting options</Paragraph> : \"\"}\n            <Pane> <AdvancedOptions disabled={!this.state.initialized} default={true} params={store.getState().defaultParameters}/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before creating toolpaths</Paragraph> : \"\"}\n            <div className=\"toolpaths\">\n              <Pane marginLeft={8} marginTop={4}><ProfileButton disabled={!this.state.initialized}/></Pane>\n              <Pane marginLeft={8} marginTop={4}><PocketButton disabled={!this.state.initialized}/></Pane>\n              <Button disabled={!this.state.initialized} marginLeft={8} marginTop={4} onClick={() => console.log(store.getState())}>Drill</Button>\n            </div>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <ToolpathList marginTop={4} state={store.getState()}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}