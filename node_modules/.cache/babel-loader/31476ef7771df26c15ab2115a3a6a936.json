{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { normalizeKeyCombo } from \"./hotkeyParser\";\nvar KeyIcons = {\n  alt: \"key-option\",\n  cmd: \"key-command\",\n  ctrl: \"key-control\",\n  delete: \"key-delete\",\n  down: \"arrow-down\",\n  enter: \"key-enter\",\n  left: \"arrow-left\",\n  meta: \"key-command\",\n  right: \"arrow-right\",\n  shift: \"key-shift\",\n  up: \"arrow-up\"\n};\n\nvar KeyCombo =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(KeyCombo, _super);\n\n  function KeyCombo() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderKey = function (key, index) {\n      var icon = KeyIcons[key];\n      var reactKey = \"key-\" + index;\n      return icon == null ? React.createElement(\"kbd\", {\n        className: Classes.KEY,\n        key: reactKey\n      }, key) : React.createElement(\"kbd\", {\n        className: classNames(Classes.KEY, Classes.MODIFIER_KEY),\n        key: reactKey\n      }, React.createElement(Icon, {\n        icon: icon\n      }), \" \", key);\n    };\n\n    _this.renderMinimalKey = function (key, index) {\n      var icon = KeyIcons[key];\n      return icon == null ? key : React.createElement(Icon, {\n        icon: icon,\n        key: \"key-\" + index\n      });\n    };\n\n    return _this;\n  }\n\n  KeyCombo.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        combo = _a.combo,\n        minimal = _a.minimal;\n    var keys = normalizeKeyCombo(combo).map(function (key) {\n      return key.length === 1 ? key.toUpperCase() : key;\n    }).map(minimal ? this.renderMinimalKey : this.renderKey);\n    return React.createElement(\"span\", {\n      className: classNames(Classes.KEY_COMBO, className)\n    }, keys);\n  };\n\n  KeyCombo.displayName = DISPLAYNAME_PREFIX + \".KeyCombo\";\n  return KeyCombo;\n}(React.Component);\n\nexport { KeyCombo };","map":null,"metadata":{},"sourceType":"module"}