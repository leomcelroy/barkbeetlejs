{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _getCss = require('../get-css');\n\nvar _getCss2 = _interopRequireDefault(_getCss);\n\nvar _regex = require('../utils/regex');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = exports.propTypes = {\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginBottom: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginLeft: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginRight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginTop: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginX: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginY: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  padding: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingBottom: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingLeft: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingRight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingTop: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingX: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingY: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])\n};\nvar propAliases = exports.propAliases = {\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginBottom', 'marginTop'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingBottom', 'paddingTop']\n};\nvar propValidators = exports.propValidators = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  propValidators.margin = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\" + value + \"\\u201D) aren\\u055At supported with \\u201Cmargin\\u201D. Use \\u201CmarginX\\u201D, \\u201CmarginY\\u201D \\u201CmarginBottom\\u201D, \\u201CmarginLeft\\u201D, \\u201CmarginRight\\u201D and \\u201CmarginTop\\u201D instead.\";\n    }\n  };\n\n  propValidators.marginX = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\" + value + \"\\u201D) aren\\u055At supported with \\u201CmarginX\\u201D. Use \\u201CmarginLeft\\u201D and \\u201CmarginRight\\u201D instead.\";\n    }\n  };\n\n  propValidators.marginY = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\" + value + \"\\u201D) aren\\u055At supported with \\u201CmarginY\\u201D. Use \\u201CmarginBottom\\u201D and \\u201CmarginTop\\u201D instead.\";\n    }\n  };\n\n  propValidators.padding = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\" + value + \"\\u201D) aren\\u055At supported with \\u201Cpadding\\u201D. Use \\u201CpaddingX\\u201D, \\u201CpaddingY\\u201D \\u201CpaddingBottom\\u201D, \\u201CpaddingLeft\\u201D, \\u201CpaddingRight\\u201D and \\u201CpaddingTop\\u201D instead.\";\n    }\n  };\n\n  propValidators.paddingX = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\" + value + \"\\u201D) aren\\u055At supported with \\u201CpaddingX\\u201D. Use \\u201CpaddingLeft\\u201D and \\u201CpaddingRight\\u201D instead.\";\n    }\n  };\n\n  propValidators.paddingY = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return \"multiple values (\\u201C\" + value + \"\\u201D) aren\\u055At supported with \\u201CpaddingY\\u201D. Use \\u201CpaddingBottom\\u201D and \\u201CpaddingTop\\u201D instead.\";\n    }\n  };\n}\n\nvar _marginTop = {\n  className: 'mt',\n  cssName: 'margin-top',\n  jsName: 'marginTop'\n};\nvar _marginRight = {\n  className: 'mr',\n  cssName: 'margin-right',\n  jsName: 'marginRight'\n};\nvar _marginBottom = {\n  className: 'mb',\n  cssName: 'margin-bottom',\n  jsName: 'marginBottom'\n};\nvar _marginLeft = {\n  className: 'ml',\n  cssName: 'margin-left',\n  jsName: 'marginLeft'\n};\nvar _paddingTop = {\n  className: 'pt',\n  cssName: 'padding-top',\n  jsName: 'paddingTop'\n};\nvar _paddingRight = {\n  className: 'pr',\n  cssName: 'padding-right',\n  jsName: 'paddingRight'\n};\nvar _paddingBottom = {\n  className: 'pb',\n  cssName: 'padding-bottom',\n  jsName: 'paddingBottom'\n};\nvar _paddingLeft = {\n  className: 'pl',\n  cssName: 'padding-left',\n  jsName: 'paddingLeft'\n};\nvar propEnhancers = exports.propEnhancers = {\n  marginBottom: function marginBottom(value) {\n    return (0, _getCss2.default)(_marginBottom, value);\n  },\n  marginLeft: function marginLeft(value) {\n    return (0, _getCss2.default)(_marginLeft, value);\n  },\n  marginRight: function marginRight(value) {\n    return (0, _getCss2.default)(_marginRight, value);\n  },\n  marginTop: function marginTop(value) {\n    return (0, _getCss2.default)(_marginTop, value);\n  },\n  paddingBottom: function paddingBottom(value) {\n    return (0, _getCss2.default)(_paddingBottom, value);\n  },\n  paddingLeft: function paddingLeft(value) {\n    return (0, _getCss2.default)(_paddingLeft, value);\n  },\n  paddingRight: function paddingRight(value) {\n    return (0, _getCss2.default)(_paddingRight, value);\n  },\n  paddingTop: function paddingTop(value) {\n    return (0, _getCss2.default)(_paddingTop, value);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}