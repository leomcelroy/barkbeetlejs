{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport FormFieldLabel from './FormFieldLabel';\nimport FormFieldDescription from './FormFieldDescription';\nimport FormFieldValidationMessage from './FormFieldValidationMessage';\nimport FormFieldHint from './FormFieldHint';\n\nvar FormField =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(FormField, _PureComponent);\n\n  function FormField() {\n    _classCallCheck(this, FormField);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormField).apply(this, arguments));\n  }\n\n  _createClass(FormField, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          hint = _this$props.hint,\n          label = _this$props.label,\n          labelFor = _this$props.labelFor,\n          children = _this$props.children,\n          isRequired = _this$props.isRequired,\n          labelProps = _this$props.labelProps,\n          description = _this$props.description,\n          validationMessage = _this$props.validationMessage,\n          props = _objectWithoutProperties(_this$props, [\"hint\", \"label\", \"labelFor\", \"children\", \"isRequired\", \"labelProps\", \"description\", \"validationMessage\"]);\n\n      return React.createElement(Box, props, React.createElement(FormFieldLabel, _extends({\n        htmlFor: labelFor,\n        isAstrixShown: isRequired,\n        marginBottom: description ? 0 : 4\n      }, labelProps), label), typeof description === 'string' ? React.createElement(FormFieldDescription, {\n        marginBottom: 4\n      }, description) : description, children, typeof validationMessage === 'string' ? React.createElement(FormFieldValidationMessage, {\n        marginTop: 8\n      }, validationMessage) : validationMessage, typeof hint === 'string' ? React.createElement(FormFieldHint, {\n        marginTop: 6\n      }, hint) : hint);\n    }\n  }]);\n\n  return FormField;\n}(PureComponent);\n\nFormField.displayName = \"FormField\";\n\n_defineProperty(FormField, \"propTypes\", _objectSpread({\n  /**\n   * The label used above the input element.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Passed on the label as a htmlFor prop.\n   */\n  labelFor: PropTypes.string,\n\n  /**\n   * Wether or not show a asterix after the label.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * A optional description of the field under the label, above the input element.\n   */\n  description: PropTypes.node,\n\n  /**\n   * A optional hint under the input element.\n   */\n  hint: PropTypes.node,\n\n  /**\n   * If a validation message is passed it is shown under the input element\n   * and above the hint.\n   */\n  validationMessage: PropTypes.node\n}, dimensions.propTypes, spacing.propTypes, position.propTypes, layout.propTypes));\n\n_defineProperty(FormField, \"defaultProps\", {\n  labelProps: {\n    size: 400\n  }\n});\n\nexport { FormField as default };","map":null,"metadata":{},"sourceType":"module"}