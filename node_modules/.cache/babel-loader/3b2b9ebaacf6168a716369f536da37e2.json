{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar React = require('react');\n\nvar blacklist = require('blacklist');\n\nvar classNames = require('classnames');\n\nvar NOTE_TYPES = ['default', 'primary', 'success', 'warning', 'danger'];\nmodule.exports = React.createClass({\n  displayName: 'FormNote',\n  propTypes: {\n    className: React.PropTypes.string,\n    note: React.PropTypes.string,\n    type: React.PropTypes.oneOf(NOTE_TYPES)\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      type: 'default'\n    };\n  },\n  render: function render() {\n    // classes\n    var componentClass = classNames('FormNote', this.props.type ? 'FormNote--' + this.props.type : null, this.props.className); // props\n\n    var props = blacklist(this.props, 'className', 'note', 'type'); // allow users to pass through the note as an attribute or as children\n\n    return React.createElement('div', _extends({\n      className: componentClass,\n      dangerouslySetInnerHTML: this.props.note ? {\n        __html: this.props.note\n      } : null\n    }, props), this.props.children);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}