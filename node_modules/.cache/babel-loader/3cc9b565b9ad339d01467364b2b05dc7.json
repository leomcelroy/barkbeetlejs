{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _popper = require('popper.js');\n\nvar _popper2 = _interopRequireDefault(_popper);\n\nvar _libs = require('../../libs');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Popover = function (_Component) {\n  (0, _inherits3.default)(Popover, _Component);\n\n  function Popover(props) {\n    (0, _classCallCheck3.default)(this, Popover);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).call(this, props));\n\n    _this.state = {\n      showPopper: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Popover, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var trigger = this.props.trigger,\n          popper = this.refs.popper;\n      this.element = _reactDom2.default.findDOMNode(this);\n      this.reference = _reactDom2.default.findDOMNode(this.refs.reference);\n      if (this.reference === null) return;\n\n      if (trigger === 'click') {\n        this.reference.addEventListener('click', function () {\n          _this2.setState({\n            showPopper: !_this2.state.showPopper\n          });\n        });\n        document.addEventListener('click', function (e) {\n          if (!_this2.element || _this2.element.contains(e.target) || !_this2.reference || _this2.reference.contains(e.target) || !popper || popper.contains(e.target)) return;\n\n          _this2.setState({\n            showPopper: false\n          });\n        });\n      } else if (trigger === 'hover') {\n        this.reference.addEventListener('mouseenter', this.handleMouseEnter.bind(this));\n        this.reference.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n        popper.addEventListener('mouseenter', this.handleMouseEnter.bind(this));\n        popper.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\n      } else {\n        if (this.reference.nodeName === 'INPUT' || this.reference.nodeName === 'TEXTAREA') {\n          this.reference.addEventListener('focus', function () {\n            _this2.setState({\n              showPopper: true\n            });\n          });\n          this.reference.addEventListener('blur', function () {\n            _this2.setState({\n              showPopper: false\n            });\n          });\n        } else {\n          this.reference.addEventListener('mousedown', function () {\n            _this2.setState({\n              showPopper: true\n            });\n          });\n          this.reference.addEventListener('mouseup', function () {\n            _this2.setState({\n              showPopper: false\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      if (props.visible !== this.props.visible) {\n        this.setState({\n          showPopper: props.visible\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.reference.parentNode.replaceChild(this.reference.cloneNode(true), this.reference);\n    }\n  }, {\n    key: 'handleMouseEnter',\n    value: function handleMouseEnter() {\n      clearTimeout(this.timer);\n      this.setState({\n        showPopper: true\n      });\n    }\n  }, {\n    key: 'handleMouseLeave',\n    value: function handleMouseLeave() {\n      var _this3 = this;\n\n      this.timer = setTimeout(function () {\n        _this3.setState({\n          showPopper: false\n        });\n      }, 200);\n    }\n  }, {\n    key: 'onEnter',\n    value: function onEnter() {\n      if (this.refs.arrow) {\n        this.refs.arrow.setAttribute('x-arrow', '');\n      }\n\n      this.popperJS = new _popper2.default(this.reference, this.refs.popper, {\n        placement: this.props.placement,\n        modifiers: {\n          computeStyle: {\n            gpuAcceleration: false\n          }\n        }\n      });\n    }\n  }, {\n    key: 'onAfterLeave',\n    value: function onAfterLeave() {\n      this.popperJS.destroy();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          transition = _props.transition,\n          popperClass = _props.popperClass,\n          width = _props.width,\n          title = _props.title,\n          content = _props.content,\n          visibleArrow = _props.visibleArrow;\n      return _react2.default.createElement('span', null, _react2.default.createElement(_libs.Transition, {\n        name: transition,\n        onEnter: this.onEnter.bind(this),\n        onAfterLeave: this.onAfterLeave.bind(this)\n      }, _react2.default.createElement(_libs.View, {\n        show: this.state.showPopper\n      }, _react2.default.createElement('div', {\n        ref: 'popper',\n        className: this.className('el-popover', popperClass),\n        style: this.style({\n          width: Number(width)\n        })\n      }, title && _react2.default.createElement('div', {\n        className: 'el-popover__title'\n      }, title), content, visibleArrow && _react2.default.createElement('div', {\n        ref: 'arrow',\n        className: 'popper__arrow'\n      })))), _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {\n        ref: 'reference'\n      }));\n    }\n  }]);\n  return Popover;\n}(_libs.Component);\n\nPopover.defaultProps = {\n  visibleArrow: true,\n  transition: 'fade-in-linear',\n  trigger: 'click',\n  placement: 'bottom',\n  width: 150\n};\nvar _default = Popover;\nexports.default = _default;\nPopover.propTypes = {\n  width: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  placement: _libs.PropTypes.oneOf(['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end']),\n  trigger: _libs.PropTypes.oneOf(['click', 'focus', 'hover']),\n  title: _libs.PropTypes.string,\n  content: _libs.PropTypes.oneOfType([_libs.PropTypes.node, _libs.PropTypes.string]),\n  popperClass: _libs.PropTypes.string,\n  transition: _libs.PropTypes.string,\n  visible: _libs.PropTypes.bool,\n  visibleArrow: _libs.PropTypes.bool\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Popover, 'Popover', 'src/popover/Popover.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/popover/Popover.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}