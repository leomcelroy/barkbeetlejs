{"ast":null,"code":"//This code is adapted from https://github.com/makercam/makercam/blob/master/src/clipperOffset.ts\nimport ClipperLib from 'js-clipper';\nvar EndTypes = {\n  etOpenSquare: 0,\n  etOpenRound: 1,\n  etOpenButt: 2,\n  etClosedPolygon: 3,\n  etClosedLine: 4\n};\nvar JoinTypes = [ClipperLib.JoinType.jtSquare, ClipperLib.JoinType.jtRound, ClipperLib.JoinType.jtMiter];\nexport var clipOffset = function clipOffset(contour, offset) {\n  var joints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var tolerance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.01;\n  var scale = 1000;\n  var paths = contour.map(function (line) {\n    return [{\n      X: Math.round(line.origin[0] * scale),\n      Y: Math.round(line.origin[1] * scale)\n    }, {\n      X: Math.round(line.end[0] * scale),\n      Y: Math.round(line.end[1] * scale)\n    }];\n  }).reduce(function (result, value, index, array) {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2).flat());\n    }\n\n    return result;\n  }, []);\n  console.log(paths);\n  var co = new ClipperLib.ClipperOffset();\n  var offsetted = new ClipperLib.Paths();\n  co.Clear();\n  co.AddPaths(paths, JoinTypes[joints], EndTypes.etClosedLine); //chain.endless ? EndTypes.etClosedLine : EndTypes.etOpenButt\n\n  co.MiterLimit = 2;\n  co.ArcTolerance = 0.25;\n  co.Execute(offsetted, offset * scale);\n  console.log(offsetted);\n};","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/unmakerjs/clipper.js"],"names":["ClipperLib","EndTypes","etOpenSquare","etOpenRound","etOpenButt","etClosedPolygon","etClosedLine","JoinTypes","JoinType","jtSquare","jtRound","jtMiter","clipOffset","contour","offset","joints","tolerance","scale","paths","map","line","X","Math","round","origin","Y","end","reduce","result","value","index","array","push","slice","flat","console","log","co","ClipperOffset","offsetted","Paths","Clear","AddPaths","MiterLimit","ArcTolerance","Execute"],"mappings":"AAAA;AAEA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,YAAY,EAAE,CADD;AAEbC,EAAAA,WAAW,EAAE,CAFA;AAGbC,EAAAA,UAAU,EAAE,CAHC;AAIbC,EAAAA,eAAe,EAAE,CAJJ;AAKbC,EAAAA,YAAY,EAAE;AALD,CAAjB;AAQA,IAAMC,SAAS,GAAG,CACdP,UAAU,CAACQ,QAAX,CAAoBC,QADN,EAEdT,UAAU,CAACQ,QAAX,CAAoBE,OAFN,EAGdV,UAAU,CAACQ,QAAX,CAAoBG,OAHN,CAAlB;AAMA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,MAAV,EAAmD;AAAA,MAAjCC,MAAiC,uEAAxB,CAAwB;AAAA,MAArBC,SAAqB,uEAAT,IAAS;AACzE,MAAMC,KAAK,GAAG,IAAd;AAEA,MAAIC,KAAK,GAAGL,OAAO,CAACM,GAAR,CAAY,UAAAC,IAAI;AAAA,WAAK,CACb;AAACC,MAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,MAAL,CAAY,CAAZ,IAAiBP,KAA5B,CAAJ;AAAwCQ,MAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,MAAL,CAAY,CAAZ,IAAiBP,KAA5B;AAA3C,KADa,EAEb;AAACI,MAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACM,GAAL,CAAS,CAAT,IAAcT,KAAzB,CAAJ;AAAqCQ,MAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACM,GAAL,CAAS,CAAT,IAAcT,KAAzB;AAAxC,KAFa,CAAL;AAAA,GAAhB,EAGIU,MAHJ,CAGW,UAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,EAAiC;AACxC,QAAID,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACjBF,MAAAA,MAAM,CAACI,IAAP,CAAYD,KAAK,CAACE,KAAN,CAAYH,KAAZ,EAAmBA,KAAK,GAAG,CAA3B,EAA8BI,IAA9B,EAAZ;AACH;;AACD,WAAON,MAAP;AAEH,GATD,EASG,EATH,CAAZ;AAWAO,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AAEA,MAAMmB,EAAE,GAAG,IAAIrC,UAAU,CAACsC,aAAf,EAAX;AACA,MAAMC,SAAS,GAAG,IAAIvC,UAAU,CAACwC,KAAf,EAAlB;AACAH,EAAAA,EAAE,CAACI,KAAH;AACAJ,EAAAA,EAAE,CAACK,QAAH,CAAYxB,KAAZ,EAAmBX,SAAS,CAACQ,MAAD,CAA5B,EAAsCd,QAAQ,CAACK,YAA/C,EAnByE,CAmBZ;;AAC7D+B,EAAAA,EAAE,CAACM,UAAH,GAAgB,CAAhB;AACAN,EAAAA,EAAE,CAACO,YAAH,GAAkB,IAAlB;AACAP,EAAAA,EAAE,CAACQ,OAAH,CAAWN,SAAX,EAAsBzB,MAAM,GAAGG,KAA/B;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACH,CAzBM","sourcesContent":["//This code is adapted from https://github.com/makercam/makercam/blob/master/src/clipperOffset.ts\n\nimport ClipperLib from 'js-clipper';\n\nconst EndTypes = {\n    etOpenSquare: 0,\n    etOpenRound: 1,\n    etOpenButt: 2,\n    etClosedPolygon: 3,\n    etClosedLine: 4\n};\n\nconst JoinTypes = [\n    ClipperLib.JoinType.jtSquare,\n    ClipperLib.JoinType.jtRound,\n    ClipperLib.JoinType.jtMiter\n]\n\nexport const clipOffset = (contour, offset, joints = 0, tolerance = 0.01) => {\n    const scale = 1000\n\n    let paths = contour.map(line => ([\n                        {X: Math.round(line.origin[0] * scale), Y: Math.round(line.origin[1] * scale)},\n                        {X: Math.round(line.end[0] * scale), Y: Math.round(line.end[1] * scale)}\n                ])).reduce((result, value, index, array) => {\n                    if (index % 2 === 0) {\n                        result.push(array.slice(index, index + 2).flat());\n                    }\n                    return result;\n\n                }, []);\n\n    console.log(paths);\n\n    const co = new ClipperLib.ClipperOffset()\n    const offsetted = new ClipperLib.Paths()\n    co.Clear()\n    co.AddPaths(paths, JoinTypes[joints], EndTypes.etClosedLine) //chain.endless ? EndTypes.etClosedLine : EndTypes.etOpenButt\n    co.MiterLimit = 2\n    co.ArcTolerance = 0.25\n    co.Execute(offsetted, offset * scale);\n\n    console.log(offsetted);\n}\n"]},"metadata":{},"sourceType":"module"}