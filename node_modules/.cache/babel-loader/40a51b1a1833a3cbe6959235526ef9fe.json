{"ast":null,"code":"/*!\nCopyright (C) 2013-2015 by Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n(function (window) {\n  'use strict';\n  /* jshint loopfunc: true, noempty: false*/\n  // http://www.w3.org/TR/dom/#element\n\n  function createDocumentFragment() {\n    return document.createDocumentFragment();\n  }\n\n  function createElement(nodeName) {\n    return document.createElement(nodeName);\n  }\n\n  function enoughArguments(length, name) {\n    if (!length) throw new Error('Failed to construct ' + name + ': 1 argument required, but only 0 present.');\n  }\n\n  function mutationMacro(nodes) {\n    if (nodes.length === 1) {\n      return textNodeIfString(nodes[0]);\n    }\n\n    for (var fragment = createDocumentFragment(), list = slice.call(nodes), i = 0; i < nodes.length; i++) {\n      fragment.appendChild(textNodeIfString(list[i]));\n    }\n\n    return fragment;\n  }\n\n  function textNodeIfString(node) {\n    return typeof node === 'string' ? document.createTextNode(node) : node;\n  }\n\n  for (var head, property, TemporaryPrototype, TemporaryTokenList, wrapVerifyToken, document = window.document, hOP = Object.prototype.hasOwnProperty, defineProperty = Object.defineProperty || function (object, property, descriptor) {\n    if (hOP.call(descriptor, 'value')) {\n      object[property] = descriptor.value;\n    } else {\n      if (hOP.call(descriptor, 'get')) object.__defineGetter__(property, descriptor.get);\n      if (hOP.call(descriptor, 'set')) object.__defineSetter__(property, descriptor.set);\n    }\n\n    return object;\n  }, indexOf = [].indexOf || function indexOf(value) {\n    var length = this.length;\n\n    while (length--) {\n      if (this[length] === value) {\n        break;\n      }\n    }\n\n    return length;\n  }, // http://www.w3.org/TR/domcore/#domtokenlist\n  verifyToken = function verifyToken(token) {\n    if (!token) {\n      throw 'SyntaxError';\n    } else if (spaces.test(token)) {\n      throw 'InvalidCharacterError';\n    }\n\n    return token;\n  }, DOMTokenList = function DOMTokenList(node) {\n    var noClassName = typeof node.className === 'undefined',\n        className = noClassName ? node.getAttribute('class') || '' : node.className,\n        isSVG = noClassName || typeof className === 'object',\n        value = (isSVG ? noClassName ? className : className.baseVal : className).replace(trim, '');\n\n    if (value.length) {\n      properties.push.apply(this, value.split(spaces));\n    }\n\n    this._isSVG = isSVG;\n    this._ = node;\n  }, classListDescriptor = {\n    get: function get() {\n      return new DOMTokenList(this);\n    },\n    set: function set() {}\n  }, trim = /^\\s+|\\s+$/g, spaces = /\\s+/, SPACE = '\\x20', CLASS_LIST = 'classList', toggle = function toggle(token, force) {\n    if (this.contains(token)) {\n      if (!force) {\n        // force is not true (either false or omitted)\n        this.remove(token);\n      }\n    } else if (force === undefined || force) {\n      force = true;\n      this.add(token);\n    }\n\n    return !!force;\n  }, DocumentFragmentPrototype = window.DocumentFragment && DocumentFragment.prototype, Node = window.Node, NodePrototype = (Node || Element).prototype, CharacterData = window.CharacterData || Node, CharacterDataPrototype = CharacterData && CharacterData.prototype, DocumentType = window.DocumentType, DocumentTypePrototype = DocumentType && DocumentType.prototype, ElementPrototype = (window.Element || Node || window.HTMLElement).prototype, HTMLSelectElement = window.HTMLSelectElement || createElement('select').constructor, selectRemove = HTMLSelectElement.prototype.remove, SVGElement = window.SVGElement, properties = ['matches', ElementPrototype.matchesSelector || ElementPrototype.webkitMatchesSelector || ElementPrototype.khtmlMatchesSelector || ElementPrototype.mozMatchesSelector || ElementPrototype.msMatchesSelector || ElementPrototype.oMatchesSelector || function matches(selector) {\n    var parentNode = this.parentNode;\n    return !!parentNode && -1 < indexOf.call(parentNode.querySelectorAll(selector), this);\n  }, 'closest', function closest(selector) {\n    var parentNode = this,\n        matches;\n\n    while ( // document has no .matches\n    (matches = parentNode && parentNode.matches) && !parentNode.matches(selector)) {\n      parentNode = parentNode.parentNode;\n    }\n\n    return matches ? parentNode : null;\n  }, 'prepend', function prepend() {\n    var firstChild = this.firstChild,\n        node = mutationMacro(arguments);\n\n    if (firstChild) {\n      this.insertBefore(node, firstChild);\n    } else {\n      this.appendChild(node);\n    }\n  }, 'append', function append() {\n    this.appendChild(mutationMacro(arguments));\n  }, 'before', function before() {\n    var parentNode = this.parentNode;\n\n    if (parentNode) {\n      parentNode.insertBefore(mutationMacro(arguments), this);\n    }\n  }, 'after', function after() {\n    var parentNode = this.parentNode,\n        nextSibling = this.nextSibling,\n        node = mutationMacro(arguments);\n\n    if (parentNode) {\n      if (nextSibling) {\n        parentNode.insertBefore(node, nextSibling);\n      } else {\n        parentNode.appendChild(node);\n      }\n    }\n  }, // https://dom.spec.whatwg.org/#dom-element-toggleattribute\n  'toggleAttribute', function toggleAttribute(name, force) {\n    var had = this.hasAttribute(name);\n\n    if (1 < arguments.length) {\n      if (had && !force) this.removeAttribute(name);else if (force && !had) this.setAttribute(name, \"\");\n    } else if (had) this.removeAttribute(name);else this.setAttribute(name, \"\");\n\n    return this.hasAttribute(name);\n  }, // WARNING - DEPRECATED - use .replaceWith() instead\n  'replace', function replace() {\n    this.replaceWith.apply(this, arguments);\n  }, 'replaceWith', function replaceWith() {\n    var parentNode = this.parentNode;\n\n    if (parentNode) {\n      parentNode.replaceChild(mutationMacro(arguments), this);\n    }\n  }, 'remove', function remove() {\n    var parentNode = this.parentNode;\n\n    if (parentNode) {\n      parentNode.removeChild(this);\n    }\n  }], slice = properties.slice, i = properties.length; i; i -= 2) {\n    property = properties[i - 2];\n\n    if (!(property in ElementPrototype)) {\n      ElementPrototype[property] = properties[i - 1];\n    } // avoid unnecessary re-patch when the script is included\n    // gazillion times without any reason whatsoever\n    // https://github.com/WebReflection/dom4/pull/48\n\n\n    if (property === 'remove' && !selectRemove._dom4) {\n      // see https://github.com/WebReflection/dom4/issues/19\n      (HTMLSelectElement.prototype[property] = function () {\n        return 0 < arguments.length ? selectRemove.apply(this, arguments) : ElementPrototype.remove.call(this);\n      })._dom4 = true;\n    } // see https://github.com/WebReflection/dom4/issues/18\n\n\n    if (/^(?:before|after|replace|replaceWith|remove)$/.test(property)) {\n      if (CharacterData && !(property in CharacterDataPrototype)) {\n        CharacterDataPrototype[property] = properties[i - 1];\n      }\n\n      if (DocumentType && !(property in DocumentTypePrototype)) {\n        DocumentTypePrototype[property] = properties[i - 1];\n      }\n    } // see https://github.com/WebReflection/dom4/pull/26\n\n\n    if (/^(?:append|prepend)$/.test(property)) {\n      if (DocumentFragmentPrototype) {\n        if (!(property in DocumentFragmentPrototype)) {\n          DocumentFragmentPrototype[property] = properties[i - 1];\n        }\n      } else {\n        try {\n          createDocumentFragment().constructor.prototype[property] = properties[i - 1];\n        } catch (o_O) {}\n      }\n    }\n  } // most likely an IE9 only issue\n  // see https://github.com/WebReflection/dom4/issues/6\n\n\n  if (!createElement('a').matches('a')) {\n    ElementPrototype[property] = function (matches) {\n      return function (selector) {\n        return matches.call(this.parentNode ? this : createDocumentFragment().appendChild(this), selector);\n      };\n    }(ElementPrototype[property]);\n  } // used to fix both old webkit and SVG\n\n\n  DOMTokenList.prototype = {\n    length: 0,\n    add: function add() {\n      for (var j = 0, token; j < arguments.length; j++) {\n        token = arguments[j];\n\n        if (!this.contains(token)) {\n          properties.push.call(this, property);\n        }\n      }\n\n      if (this._isSVG) {\n        this._.setAttribute('class', '' + this);\n      } else {\n        this._.className = '' + this;\n      }\n    },\n    contains: function (indexOf) {\n      return function contains(token) {\n        i = indexOf.call(this, property = verifyToken(token));\n        return -1 < i;\n      };\n    }([].indexOf || function (token) {\n      i = this.length;\n\n      while (i-- && this[i] !== token) {}\n\n      return i;\n    }),\n    item: function item(i) {\n      return this[i] || null;\n    },\n    remove: function remove() {\n      for (var j = 0, token; j < arguments.length; j++) {\n        token = arguments[j];\n\n        if (this.contains(token)) {\n          properties.splice.call(this, i, 1);\n        }\n      }\n\n      if (this._isSVG) {\n        this._.setAttribute('class', '' + this);\n      } else {\n        this._.className = '' + this;\n      }\n    },\n    toggle: toggle,\n    toString: function toString() {\n      return properties.join.call(this, SPACE);\n    }\n  };\n\n  if (SVGElement && !(CLASS_LIST in SVGElement.prototype)) {\n    defineProperty(SVGElement.prototype, CLASS_LIST, classListDescriptor);\n  } // http://www.w3.org/TR/dom/#domtokenlist\n  // iOS 5.1 has completely screwed this property\n  // classList in ElementPrototype is false\n  // but it's actually there as getter\n\n\n  if (!(CLASS_LIST in document.documentElement)) {\n    defineProperty(ElementPrototype, CLASS_LIST, classListDescriptor);\n  } else {\n    // iOS 5.1 and Nokia ASHA do not support multiple add or remove\n    // trying to detect and fix that in here\n    TemporaryTokenList = createElement('div')[CLASS_LIST];\n    TemporaryTokenList.add('a', 'b', 'a');\n\n    if ('a\\x20b' != TemporaryTokenList) {\n      // no other way to reach original methods in iOS 5.1\n      TemporaryPrototype = TemporaryTokenList.constructor.prototype;\n\n      if (!('add' in TemporaryPrototype)) {\n        // ASHA double fails in here\n        TemporaryPrototype = window.TemporaryTokenList.prototype;\n      }\n\n      wrapVerifyToken = function wrapVerifyToken(original) {\n        return function () {\n          var i = 0;\n\n          while (i < arguments.length) {\n            original.call(this, arguments[i++]);\n          }\n        };\n      };\n\n      TemporaryPrototype.add = wrapVerifyToken(TemporaryPrototype.add);\n      TemporaryPrototype.remove = wrapVerifyToken(TemporaryPrototype.remove); // toggle is broken too ^_^ ... let's fix it\n\n      TemporaryPrototype.toggle = toggle;\n    }\n  }\n\n  if (!('contains' in NodePrototype)) {\n    defineProperty(NodePrototype, 'contains', {\n      value: function value(el) {\n        while (el && el !== this) {\n          el = el.parentNode;\n        }\n\n        return this === el;\n      }\n    });\n  }\n\n  if (!('head' in document)) {\n    defineProperty(document, 'head', {\n      get: function get() {\n        return head || (head = document.getElementsByTagName('head')[0]);\n      }\n    });\n  } // requestAnimationFrame partial polyfill\n\n\n  (function () {\n    for (var raf, rAF = window.requestAnimationFrame, cAF = window.cancelAnimationFrame, prefixes = ['o', 'ms', 'moz', 'webkit'], i = prefixes.length; !cAF && i--;) {\n      rAF = rAF || window[prefixes[i] + 'RequestAnimationFrame'];\n      cAF = window[prefixes[i] + 'CancelAnimationFrame'] || window[prefixes[i] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!cAF) {\n      // some FF apparently implemented rAF but no cAF \n      if (rAF) {\n        raf = rAF;\n\n        rAF = function rAF(callback) {\n          var goOn = true;\n          raf(function () {\n            if (goOn) callback.apply(this, arguments);\n          });\n          return function () {\n            goOn = false;\n          };\n        };\n\n        cAF = function cAF(id) {\n          id();\n        };\n      } else {\n        rAF = function rAF(callback) {\n          return setTimeout(callback, 15, 15);\n        };\n\n        cAF = function cAF(id) {\n          clearTimeout(id);\n        };\n      }\n    }\n\n    window.requestAnimationFrame = rAF;\n    window.cancelAnimationFrame = cAF;\n  })(); // http://www.w3.org/TR/dom/#customevent\n\n\n  try {\n    new window.CustomEvent('?');\n  } catch (o_O) {\n    window.CustomEvent = function (eventName, defaultInitDict) {\n      // the infamous substitute\n      function CustomEvent(type, eventInitDict) {\n        /*jshint eqnull:true */\n        var event = document.createEvent(eventName);\n\n        if (typeof type != 'string') {\n          throw new Error('An event name must be provided');\n        }\n\n        if (eventName == 'Event') {\n          event.initCustomEvent = initCustomEvent;\n        }\n\n        if (eventInitDict == null) {\n          eventInitDict = defaultInitDict;\n        }\n\n        event.initCustomEvent(type, eventInitDict.bubbles, eventInitDict.cancelable, eventInitDict.detail);\n        return event;\n      } // attached at runtime\n\n\n      function initCustomEvent(type, bubbles, cancelable, detail) {\n        /*jshint validthis:true*/\n        this.initEvent(type, bubbles, cancelable);\n        this.detail = detail;\n      } // that's it\n\n\n      return CustomEvent;\n    }( // is this IE9 or IE10 ?\n    // where CustomEvent is there\n    // but not usable as construtor ?\n    window.CustomEvent ? // use the CustomEvent interface in such case\n    'CustomEvent' : 'Event', // otherwise the common compatible one\n    {\n      bubbles: false,\n      cancelable: false,\n      detail: null\n    });\n  } // window.Event as constructor\n\n\n  try {\n    new Event('_');\n  } catch (o_O) {\n    /* jshint -W022 */\n    o_O = function ($Event) {\n      function Event(type, init) {\n        enoughArguments(arguments.length, 'Event');\n        var out = document.createEvent('Event');\n        if (!init) init = {};\n        out.initEvent(type, !!init.bubbles, !!init.cancelable);\n        return out;\n      }\n\n      Event.prototype = $Event.prototype;\n      return Event;\n    }(window.Event || function Event() {});\n\n    defineProperty(window, 'Event', {\n      value: o_O\n    }); // Android 4 gotcha\n\n    if (Event !== o_O) Event = o_O;\n  } // window.KeyboardEvent as constructor\n\n\n  try {\n    new KeyboardEvent('_', {});\n  } catch (o_O) {\n    /* jshint -W022 */\n    o_O = function ($KeyboardEvent) {\n      // code inspired by https://gist.github.com/termi/4654819\n      var initType = 0,\n          defaults = {\n        char: '',\n        key: '',\n        location: 0,\n        ctrlKey: false,\n        shiftKey: false,\n        altKey: false,\n        metaKey: false,\n        altGraphKey: false,\n        repeat: false,\n        locale: navigator.language,\n        detail: 0,\n        bubbles: false,\n        cancelable: false,\n        keyCode: 0,\n        charCode: 0,\n        which: 0\n      },\n          eventType;\n\n      try {\n        var e = document.createEvent('KeyboardEvent');\n        e.initKeyboardEvent('keyup', false, false, window, '+', 3, true, false, true, false, false);\n        initType = (e.keyIdentifier || e.key) == '+' && (e.keyLocation || e.location) == 3 && (e.ctrlKey ? e.altKey ? 1 : 3 : e.shiftKey ? 2 : 4) || 9;\n      } catch (o_O) {}\n\n      eventType = 0 < initType ? 'KeyboardEvent' : 'Event';\n\n      function getModifier(init) {\n        for (var out = [], keys = ['ctrlKey', 'Control', 'shiftKey', 'Shift', 'altKey', 'Alt', 'metaKey', 'Meta', 'altGraphKey', 'AltGraph'], i = 0; i < keys.length; i += 2) {\n          if (init[keys[i]]) out.push(keys[i + 1]);\n        }\n\n        return out.join(' ');\n      }\n\n      function withDefaults(target, source) {\n        for (var key in source) {\n          if (source.hasOwnProperty(key) && !source.hasOwnProperty.call(target, key)) target[key] = source[key];\n        }\n\n        return target;\n      }\n\n      function withInitValues(key, out, init) {\n        try {\n          out[key] = init[key];\n        } catch (o_O) {}\n      }\n\n      function KeyboardEvent(type, init) {\n        enoughArguments(arguments.length, 'KeyboardEvent');\n        init = withDefaults(init || {}, defaults);\n        var out = document.createEvent(eventType),\n            ctrlKey = init.ctrlKey,\n            shiftKey = init.shiftKey,\n            altKey = init.altKey,\n            metaKey = init.metaKey,\n            altGraphKey = init.altGraphKey,\n            modifiers = initType > 3 ? getModifier(init) : null,\n            key = String(init.key),\n            chr = String(init.char),\n            location = init.location,\n            keyCode = init.keyCode || (init.keyCode = key) && key.charCodeAt(0) || 0,\n            charCode = init.charCode || (init.charCode = chr) && chr.charCodeAt(0) || 0,\n            bubbles = init.bubbles,\n            cancelable = init.cancelable,\n            repeat = init.repeat,\n            locale = init.locale,\n            view = init.view || window,\n            args;\n        if (!init.which) init.which = init.keyCode;\n\n        if ('initKeyEvent' in out) {\n          out.initKeyEvent(type, bubbles, cancelable, view, ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);\n        } else if (0 < initType && 'initKeyboardEvent' in out) {\n          args = [type, bubbles, cancelable, view];\n\n          switch (initType) {\n            case 1:\n              args.push(key, location, ctrlKey, shiftKey, altKey, metaKey, altGraphKey);\n              break;\n\n            case 2:\n              args.push(ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);\n              break;\n\n            case 3:\n              args.push(key, location, ctrlKey, altKey, shiftKey, metaKey, altGraphKey);\n              break;\n\n            case 4:\n              args.push(key, location, modifiers, repeat, locale);\n              break;\n\n            default:\n              args.push(char, key, location, modifiers, repeat, locale);\n          }\n\n          out.initKeyboardEvent.apply(out, args);\n        } else {\n          out.initEvent(type, bubbles, cancelable);\n        }\n\n        for (key in out) {\n          if (defaults.hasOwnProperty(key) && out[key] !== init[key]) {\n            withInitValues(key, out, init);\n          }\n        }\n\n        return out;\n      }\n\n      KeyboardEvent.prototype = $KeyboardEvent.prototype;\n      return KeyboardEvent;\n    }(window.KeyboardEvent || function KeyboardEvent() {});\n\n    defineProperty(window, 'KeyboardEvent', {\n      value: o_O\n    }); // Android 4 gotcha\n\n    if (KeyboardEvent !== o_O) KeyboardEvent = o_O;\n  } // window.MouseEvent as constructor\n\n\n  try {\n    new MouseEvent('_', {});\n  } catch (o_O) {\n    /* jshint -W022 */\n    o_O = function ($MouseEvent) {\n      function MouseEvent(type, init) {\n        enoughArguments(arguments.length, 'MouseEvent');\n        var out = document.createEvent('MouseEvent');\n        if (!init) init = {};\n        out.initMouseEvent(type, !!init.bubbles, !!init.cancelable, init.view || window, init.detail || 1, init.screenX || 0, init.screenY || 0, init.clientX || 0, init.clientY || 0, !!init.ctrlKey, !!init.altKey, !!init.shiftKey, !!init.metaKey, init.button || 0, init.relatedTarget || null);\n        return out;\n      }\n\n      MouseEvent.prototype = $MouseEvent.prototype;\n      return MouseEvent;\n    }(window.MouseEvent || function MouseEvent() {});\n\n    defineProperty(window, 'MouseEvent', {\n      value: o_O\n    }); // Android 4 gotcha\n\n    if (MouseEvent !== o_O) MouseEvent = o_O;\n  }\n\n  if (!document.querySelectorAll('*').forEach) {\n    (function () {\n      function patch(what) {\n        var querySelectorAll = what.querySelectorAll;\n\n        what.querySelectorAll = function qSA(css) {\n          var result = querySelectorAll.call(this, css);\n          result.forEach = Array.prototype.forEach;\n          return result;\n        };\n      }\n\n      patch(document);\n      patch(Element.prototype);\n    })();\n  }\n\n  try {\n    // https://drafts.csswg.org/selectors-4/#the-scope-pseudo\n    document.querySelector(':scope *');\n  } catch (o_O) {\n    (function () {\n      var dataScope = 'data-scope-' + (Math.random() * 1e9 >>> 0);\n      var proto = Element.prototype;\n      var querySelector = proto.querySelector;\n      var querySelectorAll = proto.querySelectorAll;\n\n      proto.querySelector = function qS(css) {\n        return find(this, querySelector, css);\n      };\n\n      proto.querySelectorAll = function qSA(css) {\n        return find(this, querySelectorAll, css);\n      };\n\n      function find(node, method, css) {\n        node.setAttribute(dataScope, null);\n        var result = method.call(node, String(css).replace(/(^|,\\s*)(:scope([ >]|$))/g, function ($0, $1, $2, $3) {\n          return $1 + '[' + dataScope + ']' + ($3 || ' ');\n        }));\n        node.removeAttribute(dataScope);\n        return result;\n      }\n    })();\n  }\n})(window);\n\n(function (global) {\n  'use strict'; // a WeakMap fallback for DOM nodes only used as key\n\n  var DOMMap = global.WeakMap || function () {\n    var counter = 0,\n        dispatched = false,\n        drop = false,\n        value;\n\n    function dispatch(key, ce, shouldDrop) {\n      drop = shouldDrop;\n      dispatched = false;\n      value = undefined;\n      key.dispatchEvent(ce);\n    }\n\n    function Handler(value) {\n      this.value = value;\n    }\n\n    Handler.prototype.handleEvent = function handleEvent(e) {\n      dispatched = true;\n\n      if (drop) {\n        e.currentTarget.removeEventListener(e.type, this, false);\n      } else {\n        value = this.value;\n      }\n    };\n\n    function DOMMap() {\n      counter++; // make id clashing highly improbable\n\n      this.__ce__ = new Event('@DOMMap:' + counter + Math.random());\n    }\n\n    DOMMap.prototype = {\n      'constructor': DOMMap,\n      'delete': function del(key) {\n        return dispatch(key, this.__ce__, true), dispatched;\n      },\n      'get': function get(key) {\n        dispatch(key, this.__ce__, false);\n        var v = value;\n        value = undefined;\n        return v;\n      },\n      'has': function has(key) {\n        return dispatch(key, this.__ce__, false), dispatched;\n      },\n      'set': function set(key, value) {\n        dispatch(key, this.__ce__, true);\n        key.addEventListener(this.__ce__.type, new Handler(value), false);\n        return this;\n      }\n    };\n    return DOMMap;\n  }();\n\n  function Dict() {}\n\n  Dict.prototype = (Object.create || Object)(null); // https://dom.spec.whatwg.org/#interface-eventtarget\n\n  function createEventListener(type, callback, options) {\n    function eventListener(e) {\n      if (eventListener.once) {\n        e.currentTarget.removeEventListener(e.type, callback, eventListener);\n        eventListener.removed = true;\n      }\n\n      if (eventListener.passive) {\n        e.preventDefault = createEventListener.preventDefault;\n      }\n\n      if (typeof eventListener.callback === 'function') {\n        /* jshint validthis: true */\n        eventListener.callback.call(this, e);\n      } else if (eventListener.callback) {\n        eventListener.callback.handleEvent(e);\n      }\n\n      if (eventListener.passive) {\n        delete e.preventDefault;\n      }\n    }\n\n    eventListener.type = type;\n    eventListener.callback = callback;\n    eventListener.capture = !!options.capture;\n    eventListener.passive = !!options.passive;\n    eventListener.once = !!options.once; // currently pointless but specs say to use it, so ...\n\n    eventListener.removed = false;\n    return eventListener;\n  }\n\n  createEventListener.preventDefault = function preventDefault() {};\n\n  var Event = global.CustomEvent,\n      dE = global.dispatchEvent,\n      aEL = global.addEventListener,\n      rEL = global.removeEventListener,\n      counter = 0,\n      increment = function increment() {\n    counter++;\n  },\n      indexOf = [].indexOf || function indexOf(value) {\n    var length = this.length;\n\n    while (length--) {\n      if (this[length] === value) {\n        break;\n      }\n    }\n\n    return length;\n  },\n      getListenerKey = function getListenerKey(options) {\n    return ''.concat(options.capture ? '1' : '0', options.passive ? '1' : '0', options.once ? '1' : '0');\n  },\n      augment;\n\n  try {\n    aEL('_', increment, {\n      once: true\n    });\n    dE(new Event('_'));\n    dE(new Event('_'));\n    rEL('_', increment, {\n      once: true\n    });\n  } catch (o_O) {}\n\n  if (counter !== 1) {\n    (function () {\n      var dm = new DOMMap();\n\n      function createAEL(aEL) {\n        return function addEventListener(type, handler, options) {\n          if (options && typeof options !== 'boolean') {\n            var info = dm.get(this),\n                key = getListenerKey(options),\n                i,\n                tmp,\n                wrap;\n            if (!info) dm.set(this, info = new Dict());\n            if (!(type in info)) info[type] = {\n              handler: [],\n              wrap: []\n            };\n            tmp = info[type];\n            i = indexOf.call(tmp.handler, handler);\n\n            if (i < 0) {\n              i = tmp.handler.push(handler) - 1;\n              tmp.wrap[i] = wrap = new Dict();\n            } else {\n              wrap = tmp.wrap[i];\n            }\n\n            if (!(key in wrap)) {\n              wrap[key] = createEventListener(type, handler, options);\n              aEL.call(this, type, wrap[key], wrap[key].capture);\n            }\n          } else {\n            aEL.call(this, type, handler, options);\n          }\n        };\n      }\n\n      function createREL(rEL) {\n        return function removeEventListener(type, handler, options) {\n          if (options && typeof options !== 'boolean') {\n            var info = dm.get(this),\n                key,\n                i,\n                tmp,\n                wrap;\n\n            if (info && type in info) {\n              tmp = info[type];\n              i = indexOf.call(tmp.handler, handler);\n\n              if (-1 < i) {\n                key = getListenerKey(options);\n                wrap = tmp.wrap[i];\n\n                if (key in wrap) {\n                  rEL.call(this, type, wrap[key], wrap[key].capture);\n                  delete wrap[key]; // return if there are other wraps\n\n                  for (key in wrap) {\n                    return;\n                  } // otherwise remove all the things\n\n\n                  tmp.handler.splice(i, 1);\n                  tmp.wrap.splice(i, 1); // if there are no other handlers\n\n                  if (tmp.handler.length === 0) // drop the info[type] entirely\n                    delete info[type];\n                }\n              }\n            }\n          } else {\n            rEL.call(this, type, handler, options);\n          }\n        };\n      }\n\n      augment = function augment(Constructor) {\n        if (!Constructor) return;\n        var proto = Constructor.prototype;\n        proto.addEventListener = createAEL(proto.addEventListener);\n        proto.removeEventListener = createREL(proto.removeEventListener);\n      };\n\n      if (global.EventTarget) {\n        augment(EventTarget);\n      } else {\n        augment(global.Text);\n        augment(global.Element || global.HTMLElement);\n        augment(global.HTMLDocument);\n        augment(global.Window || {\n          prototype: global\n        });\n        augment(global.XMLHttpRequest);\n      }\n    })();\n  }\n})(self);","map":null,"metadata":{},"sourceType":"script"}