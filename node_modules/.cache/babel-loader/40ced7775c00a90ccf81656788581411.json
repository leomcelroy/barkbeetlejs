{"ast":null,"code":"/** @module Drawers/DrawerTypes */\n\n/**\n * An enum for all the different type of drawers.\n *\n * @readonly\n * @enum {string}\n */\nvar DrawerTypes = {\n  // Permanent drawers\n\n  /**\n   * This is the default drawer type. It will always be on the screen and takes\n   * up the entire height. This is very helpful for main navigation on desktops\n   * when you do not need an expandable workspace.\n   */\n  FULL_HEIGHT: 'full-height',\n\n  /**\n   * This drawer type will always be on the screen, but it will appear under the\n   * main toolbar.\n   */\n  CLIPPED: 'clipped',\n\n  /**\n   * This drawer type will always be on the screen, but it will appear under the\n   * main toolbar and have a transparent background. This is useful if you want\n   * a persistent drawer on desktop screens, but do not want the main focus to be\n   * the drawer.\n   */\n  FLOATING: 'floating',\n  // Persistent drawers\n\n  /**\n   * A persistent drawer changes between being hidden and being fixed on the page like\n   * a permanent drawer. When it is visible, it will take up the same amount of room\n   * as a permanent drawer, and will not go away until closed.\n   *\n   * This drawer type is helpful when you need to have a dynamic workspace size.\n   */\n  PERSISTENT: 'persistent',\n\n  /**\n   * This is a modification of the persistent drawer. It will behave as the persistent drawer\n   * but it will always have a \"mini\" drawer visible. This is helpful when you want to have\n   * a dynamic workspace size and keep certain actions available at all times.\n   */\n  PERSISTENT_MINI: 'persistent-mini',\n  // Temporary\n\n  /**\n   * A temporary drawer will not be visible by default. When it is visible, it will overlay\n   * the page to get the main focus on the drawer. When the user touches the overlay or\n   * one of the navigation items, the drawer will be closed. The overlay can be disabled on\n   * desktop and tablets.\n   */\n  TEMPORARY: 'temporary',\n\n  /**\n   * This is a modification of the temporary drawer. It will behave like a temporary drawer,\n   * but it will always have a \"mini\" drawer visible. Just like the `PERSISTENT_MINI` drawer\n   * type, this is useful when certain actions should be available at all times but additional\n   * actions are available when the drawer is visible.\n   */\n  TEMPORARY_MINI: 'temporary-mini'\n};\nexport default DrawerTypes;","map":null,"metadata":{},"sourceType":"module"}