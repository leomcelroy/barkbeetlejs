{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport React from \"react\";\nimport ReactSVGPanZoom from './viewer';\nimport PropTypes from \"prop-types\";\nimport { TOOL_NONE } from \"./constants\";\n\nvar UncontrolledReactSVGPanZoom =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UncontrolledReactSVGPanZoom, _React$Component);\n\n  function UncontrolledReactSVGPanZoom(props) {\n    var _this;\n\n    _classCallCheck(this, UncontrolledReactSVGPanZoom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UncontrolledReactSVGPanZoom).call(this, props));\n    _this.state = {\n      value: props.defaultValue || {},\n      tool: props.defaultTool || TOOL_NONE\n    };\n    _this.Viewer = null;\n    _this.changeTool = _this.changeTool.bind(_assertThisInitialized(_this));\n    _this.changeValue = _this.changeValue.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(UncontrolledReactSVGPanZoom, [{\n    key: \"changeTool\",\n    value: function changeTool(tool) {\n      this.setState({\n        tool: tool\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(value) {\n      this.setState({\n        value: value\n      });\n    }\n  }, {\n    key: \"pan\",\n    value: function pan(SVGDeltaX, SVGDeltaY) {\n      this.Viewer.pan(SVGDeltaX, SVGDeltaY);\n    }\n  }, {\n    key: \"zoom\",\n    value: function zoom(SVGPointX, SVGPointY, scaleFactor) {\n      this.Viewer.zoom(SVGPointX, SVGPointY, scaleFactor);\n    }\n  }, {\n    key: \"fitSelection\",\n    value: function fitSelection(selectionSVGPointX, selectionSVGPointY, selectionWidth, selectionHeight) {\n      this.Viewer.fitSelection(selectionSVGPointX, selectionSVGPointY, selectionWidth, selectionHeight);\n    }\n  }, {\n    key: \"fitToViewer\",\n    value: function fitToViewer(SVGAlignX, SVGAlignY) {\n      this.Viewer.fitToViewer(SVGAlignX, SVGAlignY);\n    }\n  }, {\n    key: \"zoomOnViewerCenter\",\n    value: function zoomOnViewerCenter(scaleFactor) {\n      this.Viewer.zoomOnViewerCenter(scaleFactor);\n    }\n  }, {\n    key: \"setPointOnViewerCenter\",\n    value: function setPointOnViewerCenter(SVGPointX, SVGPointY, zoomLevel) {\n      this.Viewer.setPointOnViewerCenter(SVGPointX, SVGPointY, zoomLevel);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.Viewer.reset();\n    }\n  }, {\n    key: \"openMiniature\",\n    value: function openMiniature() {\n      this.Viewer.openMiniature();\n    }\n  }, {\n    key: \"closeMiniature\",\n    value: function closeMiniature() {\n      this.Viewer.closeMiniature();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height,\n          onChangeTool = _this$props.onChangeTool,\n          onChangeValue = _this$props.onChangeValue,\n          props = _objectWithoutProperties(_this$props, [\"width\", \"height\", \"onChangeTool\", \"onChangeValue\"]);\n\n      var _this$state = this.state,\n          tool = _this$state.tool,\n          value = _this$state.value;\n      return React.createElement(ReactSVGPanZoom, _extends({\n        width: width,\n        height: height,\n        tool: tool,\n        onChangeTool: this.changeTool,\n        value: value,\n        onChangeValue: this.changeValue,\n        ref: function ref(Viewer) {\n          return _this2.Viewer = Viewer;\n        }\n      }, props));\n    }\n  }]);\n\n  return UncontrolledReactSVGPanZoom;\n}(React.Component);\n\nexport { UncontrolledReactSVGPanZoom as default };\nUncontrolledReactSVGPanZoom.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  defaultValue: PropTypes.object,\n  defaultTool: PropTypes.string\n};","map":null,"metadata":{},"sourceType":"module"}