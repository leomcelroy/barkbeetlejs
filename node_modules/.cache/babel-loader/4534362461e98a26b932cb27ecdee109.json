{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Paragraph } from '../../typography';\nimport { withTheme } from '../../theme';\n\nvar TooltipStateless =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TooltipStateless, _PureComponent);\n\n  function TooltipStateless() {\n    _classCallCheck(this, TooltipStateless);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TooltipStateless).apply(this, arguments));\n  }\n\n  _createClass(TooltipStateless, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          children = _this$props.children,\n          appearance = _this$props.appearance,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"children\", \"appearance\"]);\n\n      var _theme$getTooltipProp = theme.getTooltipProps(appearance),\n          color = _theme$getTooltipProp.color,\n          themedProps = _objectWithoutProperties(_theme$getTooltipProp, [\"color\"]);\n\n      var child;\n\n      if (typeof children === 'string') {\n        child = React.createElement(Paragraph, {\n          color: color,\n          size: 400\n        }, children);\n      } else {\n        child = children;\n      }\n\n      return React.createElement(Pane, _extends({\n        borderRadius: 3,\n        paddingX: 8,\n        paddingY: 4,\n        maxWidth: 240\n      }, themedProps, props), child);\n    }\n  }]);\n\n  return TooltipStateless;\n}(PureComponent);\n\nTooltipStateless.displayName = \"TooltipStateless\";\n\n_defineProperty(TooltipStateless, \"propTypes\", {\n  children: PropTypes.node,\n\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']).isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n});\n\nexport default withTheme(TooltipStateless);","map":null,"metadata":{},"sourceType":"module"}