{"ast":null,"code":"/** @module utils/Positoning/getSelectedTextPosition */\nimport getSelectedText from '../getSelectedText';\nimport getTextWidth from './getTextWidth';\nvar ZERO_WIDTH_CHARACTER = \"\\u200B\";\n/**\n * A utility function to attempt to get the current highlighted text position.\n *\n * When a context menu is opened, this function attempts to find the bounding client rect\n * for the highlighted text. However, if the text is in the text field, some weird stuff\n * happens and it is unable to get it correctly.\n */\n\nexport default function getSelectedTextPosition(e) {\n  var height = void 0;\n  var target = e.target,\n      clientX = e.clientX,\n      clientY = e.clientY;\n  var text = getSelectedText();\n  var width = Math.round(getTextWidth(text, target) || 0);\n\n  if (!text || target.classList.contains('md-text-field')) {\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\n    return {\n      width: width,\n      height: height,\n      left: clientX - width,\n      top: clientY\n    };\n  } // All browsers I am supporting have window.getSelection, but better safe than sorry\n\n\n  if (window.getSelection) {\n    var selection = window.getSelection();\n\n    if (selection.rangeCount) {\n      var range = selection.getRangeAt(0).cloneRange();\n      var rect = null;\n\n      if (range.getClientRects) {\n        var rects = range.getClientRects();\n\n        if (rects.length > 0) {\n          rect = rects[0];\n        }\n      }\n\n      if (!rect) {\n        var span = document.createElement('span');\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n        var spanParent = span.parentNode;\n        spanParent.removeChild(span);\n        spanParent.normalize();\n      }\n\n      return rect;\n    }\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}