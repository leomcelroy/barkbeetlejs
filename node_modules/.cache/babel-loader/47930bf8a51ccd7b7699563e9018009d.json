{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeColumns;\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction defaultRender(row, column) {\n  return (0, _utils.getValueByPath)(row, column.property);\n}\n\nvar defaults = {\n  default: {\n    order: ''\n  },\n  selection: {\n    width: 48,\n    minWidth: 48,\n    realWidth: 48,\n    className: 'el-table-column--selection'\n  },\n  expand: {\n    width: 48,\n    minWidth: 48,\n    realWidth: 48\n  },\n  index: {\n    width: 48,\n    minWidth: 48,\n    realWidth: 48\n  }\n};\nvar forced = {\n  expand: {\n    sortable: false,\n    resizable: false,\n    className: 'el-table__expand-column'\n  },\n  index: {\n    sortable: false\n  },\n  selection: {\n    sortable: false,\n    resizable: false\n  }\n};\nvar columnIDSeed = 1;\n\nfunction normalizeColumns(columns, tableIDSeed) {\n  return columns.map(function (column) {\n    var _column = void 0;\n\n    if (column.subColumns) {\n      // renderHeader\n      _column = Object.assign({}, column);\n      _column.subColumns = normalizeColumns(column.subColumns, tableIDSeed);\n    } else {\n      var width = column.width,\n          minWidth = column.minWidth;\n\n      if (width !== undefined) {\n        width = parseInt(width, 10);\n\n        if (isNaN(width)) {\n          width = null;\n        }\n      }\n\n      if (minWidth !== undefined) {\n        minWidth = parseInt(minWidth, 10);\n\n        if (isNaN(minWidth)) {\n          minWidth = 80;\n        }\n      } else {\n        minWidth = 80;\n      }\n\n      var id = \"el-table_\" + tableIDSeed + \"_column_\" + columnIDSeed++;\n      _column = Object.assign({\n        id: id,\n        sortable: false,\n        resizable: true,\n        showOverflowTooltip: false,\n        align: 'left',\n        filterMultiple: true\n      }, column, {\n        columnKey: column.columnKey || id,\n        width: width,\n        minWidth: minWidth,\n        realWidth: width || minWidth,\n        property: column.prop || column.property,\n        render: column.render || defaultRender,\n        align: column.align ? 'is-' + column.align : null,\n        headerAlign: column.headerAlign ? 'is-' + column.headerAlign : column.align ? 'is-' + column.align : null,\n        filterable: column.filters && column.filterMethod,\n        filterOpened: false,\n        filteredValue: column.filteredValue || null,\n        filterPlacement: column.filterPlacement || 'bottom'\n      }, defaults[column.type || 'default'], forced[column.type]);\n    }\n\n    return _column;\n  });\n}\n\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(defaultRender, \"defaultRender\", \"src/table/normalizeColumns.jsx\");\n\n  __REACT_HOT_LOADER__.register(defaults, \"defaults\", \"src/table/normalizeColumns.jsx\");\n\n  __REACT_HOT_LOADER__.register(forced, \"forced\", \"src/table/normalizeColumns.jsx\");\n\n  __REACT_HOT_LOADER__.register(columnIDSeed, \"columnIDSeed\", \"src/table/normalizeColumns.jsx\");\n\n  __REACT_HOT_LOADER__.register(normalizeColumns, \"normalizeColumns\", \"src/table/normalizeColumns.jsx\");\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}