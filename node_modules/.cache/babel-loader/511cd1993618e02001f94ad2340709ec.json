{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _libs = require('../../libs');\n\nvar _utils = require('./utils');\n\nvar _checkbox = require('../checkbox');\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _tag = require('../tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // import {toDate} from \"../date-picker/utils/index\";\n\n\nvar TableBody = function (_Component) {\n  (0, _inherits3.default)(TableBody, _Component);\n\n  function TableBody(props) {\n    (0, _classCallCheck3.default)(this, TableBody);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (TableBody.__proto__ || Object.getPrototypeOf(TableBody)).call(this, props));\n\n    ['handleMouseLeave'].forEach(function (fn) {\n      _this[fn] = _this[fn].bind(_this);\n    });\n    return _this;\n  }\n\n  (0, _createClass3.default)(TableBody, [{\n    key: 'handleMouseEnter',\n    value: function handleMouseEnter(index) {\n      this.context.store.setHoverRow(index);\n    }\n  }, {\n    key: 'handleMouseLeave',\n    value: function handleMouseLeave() {\n      this.context.store.setHoverRow(null);\n    }\n  }, {\n    key: 'handleCellMouseEnter',\n    value: function handleCellMouseEnter(row, column, event) {\n      this.dispatchEvent('onCellMouseEnter', row, column, event.currentTarget, event);\n    }\n  }, {\n    key: 'handleCellMouseLeave',\n    value: function handleCellMouseLeave(row, column, event) {\n      this.dispatchEvent('onCellMouseLeave', row, column, event.currentTarget, event);\n    }\n  }, {\n    key: 'handleCellClick',\n    value: function handleCellClick(row, column, event) {\n      this.dispatchEvent('onCellClick', row, column, event.currentTarget, event);\n      this.dispatchEvent('onRowClick', row, event, column);\n    }\n  }, {\n    key: 'handleCellDbClick',\n    value: function handleCellDbClick(row, column, event) {\n      this.dispatchEvent('onCellDbClick', row, column, event.currentTarget, event);\n      this.dispatchEvent('onRowDbClick', row, column);\n    }\n  }, {\n    key: 'handleRowContextMenu',\n    value: function handleRowContextMenu(row, event) {\n      this.dispatchEvent('onRowContextMenu', row, event);\n    }\n  }, {\n    key: 'dispatchEvent',\n    value: function dispatchEvent(name) {\n      var fn = this.props[name];\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      fn && fn.apply(undefined, args);\n    }\n  }, {\n    key: 'isColumnHidden',\n    value: function isColumnHidden(index) {\n      var _props = this.props,\n          store = _props.store,\n          layout = _props.layout,\n          props = (0, _objectWithoutProperties3.default)(_props, ['store', 'layout']);\n\n      if (props.fixed === true || props.fixed === 'left') {\n        return index >= this.leftFixedCount;\n      } else if (props.fixed === 'right') {\n        return index < this.columnsCount - this.rightFixedCount;\n      } else {\n        return index < this.leftFixedCount || index >= this.columnsCount - this.rightFixedCount;\n      }\n    }\n  }, {\n    key: 'getRowStyle',\n    value: function getRowStyle(row, index) {\n      var rowStyle = this.props.rowStyle;\n\n      if (typeof rowStyle === 'function') {\n        return rowStyle.call(null, row, index);\n      }\n\n      return rowStyle;\n    }\n  }, {\n    key: 'getKeyOfRow',\n    value: function getKeyOfRow(row, index) {\n      var rowKey = this.props.rowKey;\n\n      if (rowKey) {\n        return (0, _utils.getRowIdentity)(row, rowKey);\n      }\n\n      return index;\n    } // getRowClass(row, index) {\n    //   const { rowClassName, stripe } = this.props;\n    //\n    // }\n\n  }, {\n    key: 'handleExpandClick',\n    value: function handleExpandClick(row, rowKey) {\n      this.context.store.toggleRowExpanded(row, rowKey);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(row) {\n      this.context.store.setCurrentRow(row);\n    }\n  }, {\n    key: 'renderCell',\n    value: function renderCell(row, column, index, rowKey) {\n      var _this2 = this;\n\n      var type = column.type,\n          selectable = column.selectable;\n\n      if (type === 'expand') {\n        return React.createElement('div', {\n          className: this.classNames('el-table__expand-icon ', {\n            'el-table__expand-icon--expanded': this.context.store.isRowExpanding(row, rowKey)\n          }),\n          onClick: this.handleExpandClick.bind(this, row, rowKey)\n        }, React.createElement('i', {\n          className: 'el-icon el-icon-arrow-right'\n        }));\n      }\n\n      if (type === 'index') {\n        return React.createElement('div', null, index + 1);\n      }\n\n      if (type === 'selection') {\n        var isSelected = this.context.store.isRowSelected(row, rowKey);\n        return React.createElement(_checkbox2.default, {\n          checked: isSelected,\n          disabled: selectable && !selectable(row, index),\n          onChange: function onChange() {\n            _this2.context.store.toggleRowSelection(row, !isSelected);\n          }\n        });\n      }\n\n      return column.render(row, column, index);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          store = _props2.store,\n          layout = _props2.layout,\n          props = (0, _objectWithoutProperties3.default)(_props2, ['store', 'layout']);\n      var columnsHidden = store.columns.map(function (column, index) {\n        return _this3.isColumnHidden(index);\n      });\n      return React.createElement('table', {\n        className: 'el-table__body',\n        cellPadding: 0,\n        cellSpacing: 0,\n        style: this.style({\n          borderSpacing: 0,\n          border: 0\n        })\n      }, React.createElement('colgroup', null, store.columns.map(function (column, index) {\n        return React.createElement('col', {\n          width: column.realWidth,\n          style: {\n            width: column.realWidth\n          },\n          key: index\n        });\n      })), React.createElement('tbody', null, store.data.map(function (row, rowIndex) {\n        var rowKey = _this3.getKeyOfRow(row, rowIndex);\n\n        return [React.createElement('tr', {\n          key: rowKey,\n          style: _this3.getRowStyle(row, rowIndex),\n          className: _this3.className('el-table__row', {\n            'el-table__row--striped': props.stripe && rowIndex % 2 === 1,\n            'hover-row': store.hoverRow === rowIndex,\n            'current-row': props.highlightCurrentRow && (props.currentRowKey === rowKey || store.currentRow === row)\n          }, typeof props.rowClassName === 'string' ? props.rowClassName : typeof props.rowClassName === 'function' && props.rowClassName(row, rowIndex)),\n          onMouseEnter: _this3.handleMouseEnter.bind(_this3, rowIndex),\n          onMouseLeave: _this3.handleMouseLeave,\n          onClick: _this3.handleClick.bind(_this3, row),\n          onContextMenu: _this3.handleRowContextMenu.bind(_this3, row)\n        }, store.columns.map(function (column, cellIndex) {\n          return React.createElement('td', {\n            key: cellIndex,\n            className: _this3.classNames(column.className, column.align, column.columnKey, {\n              'is-hidden': columnsHidden[cellIndex]\n            }),\n            onMouseEnter: _this3.handleCellMouseEnter.bind(_this3, row, column),\n            onMouseLeave: _this3.handleCellMouseLeave.bind(_this3, row, column),\n            onClick: _this3.handleCellClick.bind(_this3, row, column),\n            onDoubleClick: _this3.handleCellDbClick.bind(_this3, row, column)\n          }, React.createElement('div', {\n            className: 'cell'\n          }, _this3.renderCell(row, column, rowIndex, rowKey)));\n        }), !props.fixed && layout.scrollY && !!layout.gutterWidth && React.createElement('td', {\n          className: 'gutter'\n        })), _this3.context.store.isRowExpanding(row, rowKey) && React.createElement('tr', {\n          key: rowKey + 'Expanded'\n        }, React.createElement('td', {\n          colSpan: store.columns.length,\n          className: 'el-table__expanded-cell'\n        }, typeof props.renderExpanded === 'function' && props.renderExpanded(row, rowIndex)))];\n      })));\n    }\n  }, {\n    key: 'columnsCount',\n    get: function get() {\n      return this.props.store.columns.length;\n    }\n  }, {\n    key: 'leftFixedCount',\n    get: function get() {\n      return this.props.store.fixedColumns.length;\n    }\n  }, {\n    key: 'rightFixedCount',\n    get: function get() {\n      return this.props.store.rightFixedColumns.length;\n    }\n  }]);\n  return TableBody;\n}(_libs.Component);\n\nTableBody.contextTypes = {\n  store: _libs.PropTypes.any,\n  layout: _libs.PropTypes.any\n};\nvar _default = TableBody;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(TableBody, 'TableBody', 'src/table/TableBody.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/table/TableBody.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}