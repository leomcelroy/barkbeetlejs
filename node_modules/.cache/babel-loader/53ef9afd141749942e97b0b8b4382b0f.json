{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX, Intent } from \"../../common\";\nimport { Icon } from \"../../index\";\nimport { H4 } from \"../html/html\";\n\nvar Callout =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Callout, _super);\n\n  function Callout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Callout.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        icon = _a.icon,\n        intent = _a.intent,\n        title = _a.title,\n        htmlProps = tslib_1.__rest(_a, [\"className\", \"children\", \"icon\", \"intent\", \"title\"]);\n\n    var iconName = this.getIconName(icon, intent);\n    var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), (_b = {}, _b[Classes.CALLOUT_ICON] = iconName != null, _b), className);\n    return React.createElement(\"div\", tslib_1.__assign({\n      className: classes\n    }, htmlProps), iconName && React.createElement(Icon, {\n      icon: iconName,\n      iconSize: Icon.SIZE_LARGE\n    }), title && React.createElement(H4, null, title), children);\n\n    var _b;\n  };\n\n  Callout.prototype.getIconName = function (icon, intent) {\n    // 1. no icon\n    if (icon === null) {\n      return undefined;\n    } // 2. defined iconName prop\n\n\n    if (icon !== undefined) {\n      return icon;\n    } // 3. default intent icon\n\n\n    switch (intent) {\n      case Intent.DANGER:\n        return \"error\";\n\n      case Intent.PRIMARY:\n        return \"info-sign\";\n\n      case Intent.WARNING:\n        return \"warning-sign\";\n\n      case Intent.SUCCESS:\n        return \"tick\";\n\n      default:\n        return undefined;\n    }\n  };\n\n  Callout.displayName = DISPLAYNAME_PREFIX + \".Callout\";\n  return Callout;\n}(React.PureComponent);\n\nexport { Callout };","map":null,"metadata":{},"sourceType":"module"}