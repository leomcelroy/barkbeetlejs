{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Progress = function (_Component) {\n  (0, _inherits3.default)(Progress, _Component);\n\n  function Progress(props) {\n    (0, _classCallCheck3.default)(this, Progress);\n    return (0, _possibleConstructorReturn3.default)(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).call(this, props));\n  }\n\n  (0, _createClass3.default)(Progress, [{\n    key: 'relativeStrokeWidth',\n    value: function relativeStrokeWidth() {\n      var _props = this.props,\n          strokeWidth = _props.strokeWidth,\n          width = _props.width;\n      return (strokeWidth / width * 100).toFixed(1);\n    }\n  }, {\n    key: 'trackPath',\n    value: function trackPath() {\n      var radius = parseInt(50 - parseFloat(this.relativeStrokeWidth()) / 2, 10);\n      return 'M 50 50 m 0 -' + radius + ' a ' + radius + ' ' + radius + ' 0 1 1 0 ' + radius * 2 + ' a ' + radius + ' ' + radius + ' 0 1 1 0 -' + radius * 2;\n    }\n  }, {\n    key: 'perimeter',\n    value: function perimeter() {\n      var radius = 50 - parseFloat(this.relativeStrokeWidth()) / 2;\n      return 2 * Math.PI * radius;\n    }\n  }, {\n    key: 'circlePathStyle',\n    value: function circlePathStyle() {\n      var perimeter = this.perimeter();\n      return {\n        strokeDasharray: perimeter + 'px,' + perimeter + 'px',\n        strokeDashoffset: (1 - this.props.percentage / 100) * perimeter + 'px',\n        transition: 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'\n      };\n    }\n  }, {\n    key: 'stroke',\n    value: function stroke() {\n      var ret = void 0;\n\n      switch (this.props.status) {\n        case 'success':\n          ret = '#13ce66';\n          break;\n\n        case 'exception':\n          ret = '#ff4949';\n          break;\n\n        default:\n          ret = '#20a0ff';\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'iconClass',\n    value: function iconClass() {\n      var _props2 = this.props,\n          type = _props2.type,\n          status = _props2.status;\n      return type === 'line' ? status === 'success' ? 'el-icon-circle-check' : 'el-icon-circle-cross' : status === 'success' ? 'el-icon-check' : 'el-icon-close';\n    }\n  }, {\n    key: 'progressTextSize',\n    value: function progressTextSize() {\n      var _props3 = this.props,\n          type = _props3.type,\n          strokeWidth = _props3.strokeWidth,\n          width = _props3.width;\n      return type === 'line' ? 12 + strokeWidth * 0.4 : width * 0.111111 + 2;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _className;\n\n      var _props4 = this.props,\n          type = _props4.type,\n          percentage = _props4.percentage,\n          status = _props4.status,\n          strokeWidth = _props4.strokeWidth,\n          textInside = _props4.textInside,\n          width = _props4.width,\n          showText = _props4.showText;\n      var progress = void 0;\n\n      if (type === 'line') {\n        progress = _react2.default.createElement('div', {\n          className: 'el-progress-bar'\n        }, _react2.default.createElement('div', {\n          className: 'el-progress-bar__outer',\n          style: {\n            height: strokeWidth + 'px'\n          }\n        }, _react2.default.createElement('div', {\n          className: 'el-progress-bar__inner',\n          style: {\n            width: percentage + '%'\n          }\n        }, showText && textInside && _react2.default.createElement('div', {\n          className: 'el-progress-bar__innerText'\n        }, percentage + '%'))));\n      } else {\n        progress = _react2.default.createElement('div', {\n          className: 'el-progress-circle',\n          style: {\n            height: width + 'px',\n            width: width + 'px'\n          }\n        }, _react2.default.createElement('svg', {\n          viewBox: '0 0 100 100'\n        }, _react2.default.createElement('path', {\n          className: 'el-progress-circle__track',\n          d: this.trackPath(),\n          stroke: '#e5e9f2',\n          strokeWidth: this.relativeStrokeWidth(),\n          fill: 'none'\n        }), _react2.default.createElement('path', {\n          className: 'el-progress-circle__path',\n          d: this.trackPath(),\n          strokeLinecap: 'round',\n          stroke: this.stroke(),\n          strokeWidth: this.relativeStrokeWidth(),\n          fill: 'none',\n          style: this.circlePathStyle()\n        })));\n      }\n\n      var progressInfo = showText && !textInside && _react2.default.createElement('div', {\n        className: 'el-progress__text',\n        style: {\n          fontSize: this.progressTextSize() + 'px'\n        }\n      }, status ? _react2.default.createElement('i', {\n        className: this.iconClass()\n      }) : percentage + '%');\n\n      return _react2.default.createElement('div', {\n        style: this.style(),\n        className: this.className('el-progress', 'el-progress--' + type, (_className = {}, (0, _defineProperty3.default)(_className, 'is-' + status, !!status), (0, _defineProperty3.default)(_className, 'el-progress--without-text', !showText), (0, _defineProperty3.default)(_className, 'el-progress--text-inside', textInside), _className))\n      }, progress, progressInfo);\n    }\n  }]);\n  return Progress;\n}(_libs.Component);\n\nProgress.defaultProps = {\n  type: 'line',\n  percentage: 0,\n  strokeWidth: 6,\n  width: 126,\n  showText: true,\n  textInside: false\n};\nvar _default = Progress;\nexports.default = _default;\nProgress.propTypes = {\n  type: _libs.PropTypes.oneOf(['line', 'circle']),\n  percentage: _libs.PropTypes.range(0, 100).isRequired,\n  status: _libs.PropTypes.string,\n  strokeWidth: _libs.PropTypes.number,\n  width: _libs.PropTypes.number,\n  textInside: _libs.PropTypes.bool,\n  showText: _libs.PropTypes.bool\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Progress, 'Progress', 'src/progress/Progress.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/progress/Progress.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}