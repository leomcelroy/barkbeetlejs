{"ast":null,"code":"import _objectSpread from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { Workplane } from './Workplane.js';\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components\n\nimport { test, Parent } from './testDec21_2018.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      thicknessSubmit: false,\n      materialSubmit: false,\n      originSubmit: false,\n      initialized: false\n    };\n\n    _this.firstSubmit = function (name) {\n      var old = _this.state;\n      old[name] = true;\n\n      _this.setState({\n        old: old\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initialized\",\n    value: function initialized() {\n      if (!this.state.initialized && this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit) {\n        this.setState({\n          initialized: true\n        });\n      }\n    }\n  }, {\n    key: \"uploadSVG\",\n    value: function uploadSVG(e) {\n      //helper function\n      var replaceWithPath = function replaceWithPath(child) {\n        //why cant I put this in a different file\n        console.log(\"child\", child);\n\n        if (child.name === \"g\") {\n          return child.children.map(function (grandchild) {\n            return replaceWithPath(grandchild);\n          });\n        }\n\n        if (child.name === \"rectangle\") {\n          var x;\n          var y;\n          var width;\n          var height;\n          var rx;\n          var ry;\n          var temp = s2p.rect({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rx: rx,\n            ry: ry\n          });\n          return mjs.importer.fromSVGPathData(temp);\n        }\n\n        if (child.name === \"circle\") {\n          var cx;\n          var cy;\n          var r;\n\n          var _temp = s2p.rect({\n            cx: cx,\n            cy: cy,\n            r: r\n          });\n\n          return mjs.importer.fromSVGPathData(_temp);\n        }\n\n        if (child.name === \"ellipse\") {\n          var _cx;\n\n          var _cy;\n\n          var _rx;\n\n          var _ry;\n\n          var _temp2 = s2p.ellipse({\n            cx: _cx,\n            cy: _cy,\n            rx: _rx,\n            ry: _ry\n          });\n\n          return mjs.importer.fromSVGPathData(_temp2);\n        }\n\n        if (child.name === \"polygon\") {\n          var points;\n\n          var _temp3 = s2p.polygon({\n            points: points\n          });\n\n          return mjs.importer.fromSVGPathData(_temp3);\n        }\n\n        if (child.name === \"polyline\") {\n          var _points;\n\n          var _temp4 = s2p.polyline({\n            points: _points\n          });\n\n          return mjs.importer.fromSVGPathData(_temp4);\n        }\n\n        if (child.name === \"line\") {\n          var x1;\n          var x2;\n          var y1;\n          var y2;\n\n          var _temp5 = s2p.line({\n            x1: x1,\n            x2: x2,\n            y1: y1,\n            y2: y2\n          });\n\n          return mjs.importer.fromSVGPathData(_temp5);\n        }\n\n        if (child.name === \"path\") {\n          var makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n          return makerjsPath;\n        }\n      }; //main event\n\n\n      var files = e.target.files;\n      var file = files[0];\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        var text = event.target.result;\n        svgson.parse(text).then(function (json) {\n          var svg = json.children.map(function (child) {\n            return replaceWithPath(child);\n          });\n          svg = svg.flat(1); //TODO: what does the argument do again?\n          //TODO: update state to have makerjs models\n\n          console.log(\"svg\", svg);\n          var models = {};\n          svg.forEach(function (shape) {\n            models[utils.makeID()] = shape;\n          });\n          console.log(\"models\", models); //ultimately I will set state of app\n        });\n      };\n\n      reader.readAsText(file);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      this.initialized();\n      var cuts = {};\n      store.getState().toolpaths.forEach(function (path) {\n        if (path.selected) {\n          cuts[path.id] = path.geometry.drawing;\n        }\n      });\n      var model = {\n        models: {\n          shapes: {\n            models: _objectSpread({}, store.getState().shapes)\n          },\n          cuts: {\n            models: _objectSpread({}, cuts)\n          }\n        }\n      };\n      model.models.cuts.layer = \"red\"; // model = mjs.model.originate(model);\n      // model = mjs.model.zero(model);\n\n      model['paths'] = {\n        origin: new mjs.paths.Circle(store.getState().defaultParameters.compensatedRadius)\n      };\n      var modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n      var viewModel = mjs.exporter.toSVG(modelToView, {\n        useSvgPathOnly: false,\n        strokeWidth: \".25mm\" // layerOptions:{\n        //   cuts: {\n        //     stroke: \"red\"\n        //   }\n        // },\n\n      });\n      viewModel = [viewModel];\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onMouseDown: function onMouseDown(e) {\n          return console.log(\"div target\", e.target.getAttribute(\"data-route\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mainEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref) {\n          return _this2.upload = _ref;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: function onChange(e) {\n          return _this2.uploadSVG(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(Button, {\n        marginRight: 4,\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"save\"))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialType, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialThickness, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \" \", React.createElement(Units, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \" \", React.createElement(Origin, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"select settings before editting options\") : \"\", React.createElement(Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \" \", React.createElement(AdvancedOptions, {\n        disabled: !this.state.initialized,\n        default: true,\n        params: store.getState().defaultParameters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Create Toolpaths\"), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"select settings before creating toolpaths\") : \"\", React.createElement(\"div\", {\n        className: \"toolpaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Profile\"), React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(PocketButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginLeft: 8,\n        marginTop: 4,\n        onClick: function onClick() {\n          return console.log(store.getState());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Drill\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Toolpaths\"), React.createElement(ToolpathList, {\n        marginTop: 4,\n        state: store.getState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js"],"names":["React","Component","PureComponent","Button","Heading","Pane","Paragraph","utils","mjs","params","s2p","svgson","Workplane","MaterialType","MaterialThickness","Origin","Units","PocketButton","AdvancedOptions","ToolpathList","store","test","Parent","App","state","thicknessSubmit","materialSubmit","originSubmit","initialized","firstSubmit","name","old","setState","e","replaceWithPath","child","console","log","children","map","grandchild","x","y","width","height","rx","ry","temp","rect","importer","fromSVGPathData","cx","cy","r","ellipse","points","polygon","polyline","x1","x2","y1","y2","line","makerjsPath","attributes","d","files","target","file","reader","FileReader","onload","event","text","result","parse","then","json","svg","flat","models","forEach","shape","makeID","readAsText","cuts","getState","toolpaths","path","selected","id","geometry","drawing","model","shapes","layer","origin","paths","Circle","defaultParameters","compensatedRadius","modelToView","scale","deepcopy","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","getAttribute","ref","upload","display","uploadSVG","click"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {Button, Heading, Pane, Paragraph} from 'evergreen-ui';\nimport './App.css';\n\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\n\nimport {Workplane} from './Workplane.js'\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components\n\nimport {test, Parent} from './testDec21_2018.js';\n\nclass App extends Component {\n\n  state = {\n    thicknessSubmit : false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: false,\n  }\n\n  firstSubmit = (name) => {\n    let old = this.state;\n    old[name] = true;\n\n    this.setState({old});\n  }\n\n  initialized() {\n    if (!this.state.initialized && (this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit)) {\n      this.setState({initialized:true});\n    }\n  }\n\n  uploadSVG(e) {\n    //helper function\n    const replaceWithPath = (child) => { //why cant I put this in a different file\n      console.log(\"child\", child);\n\n      if (child.name === \"g\") {\n        return child.children.map(grandchild => replaceWithPath(grandchild));\n      }\n\n      if (child.name === \"rectangle\") {\n        let x;\n        let y;\n        let width;\n        let height;\n        let rx;\n        let ry;\n\n        let temp = s2p.rect({x, y, width, height, rx, ry});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"circle\") {\n        let cx;\n        let cy;\n        let r;\n\n        let temp = s2p.rect({cx, cy, r});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"ellipse\") {\n        let cx;\n        let cy;\n        let rx;\n        let ry;\n\n        let temp = s2p.ellipse({cx, cy, rx, ry});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"polygon\") {\n        let points\n\n        let temp = s2p.polygon({points});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"polyline\") {\n        let points\n\n        let temp = s2p.polyline({points});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"line\") {\n        let x1;\n        let x2;\n        let y1;\n        let y2;\n\n        let temp = s2p.line({x1, x2, y1, y2});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"path\") {\n        let makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n        return makerjsPath;\n      }\n    }\n\n    //main event\n    let files = e.target.files;\n    let file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n      let text = event.target.result;\n\n      svgson.parse(text).then((json) => {\n        let svg = json.children.map(child => {\n          return replaceWithPath(child);\n        });\n\n        svg = svg.flat(1); //TODO: what does the argument do again?\n\n        //TODO: update state to have makerjs models\n        console.log(\"svg\", svg);\n        let models = {};\n\n        svg.forEach(shape => {\n          models[utils.makeID()] = shape;\n        })\n\n        console.log(\"models\", models);\n\n        //ultimately I will set state of app\n      });\n    };\n\n    reader.readAsText(file);\n  }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    this.initialized();\n\n    let cuts = {};\n\n    store.getState().toolpaths.forEach(path => {\n      if (path.selected) {\n        cuts[path.id] = path.geometry.drawing;\n      }\n    })\n\n    let model = {\n      models: {\n        shapes: {\n          models: {\n            ...store.getState().shapes\n          }\n        },\n        cuts: {\n          models: {\n            ...cuts\n          }\n        }\n      }\n    }\n\n    model.models.cuts.layer = \"red\";\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n\n    model['paths'] = {\n      origin: new mjs.paths.Circle(store.getState().defaultParameters.compensatedRadius)\n    }\n\n    let modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n    let viewModel = mjs.exporter.toSVG(modelToView, {\n      useSvgPathOnly:false,\n      strokeWidth:\".25mm\",\n      // layerOptions:{\n      //   cuts: {\n      //     stroke: \"red\"\n      //   }\n      // },\n    });\n\n    viewModel = [viewModel];\n\n    return (\n      <div\n        className=\"wrapper\"\n        onMouseDown={(e) => console.log(\"div target\", e.target.getAttribute(\"data-route\"))}>\n\n        <div className=\"mainEvent\">\n          <Workplane groups={viewModel}/>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => this.upload = ref}\n              style={{ display: 'none' }}\n              onChange={(e) => this.uploadSVG(e)}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => this.upload.click()}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button>\n              save\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <MaterialThickness firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin firstSubmit={this.firstSubmit}/></Pane>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before editting options</Paragraph> : \"\"}\n            <Pane> <AdvancedOptions disabled={!this.state.initialized} default={true} params={store.getState().defaultParameters}/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before creating toolpaths</Paragraph> : \"\"}\n            <div className=\"toolpaths\">\n              <Button disabled={!this.state.initialized} marginTop={4}>Profile</Button>\n              <Pane marginLeft={8} marginTop={4}><PocketButton disabled={!this.state.initialized}/></Pane>\n              <Button disabled={!this.state.initialized} marginLeft={8} marginTop={4} onClick={() => console.log(store.getState())}>Drill</Button>\n            </div>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <ToolpathList marginTop={4} state={store.getState()}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}