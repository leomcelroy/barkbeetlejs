{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\nimport clipperOffset from './clipperOffset.js';\nimport { clipOffset } from '../unmakerjs/clipper.js';\n\nvar len = function len(toolpath) {\n  return Object.keys(toolpath.models).length;\n};\n\nvar isToolpath = function isToolpath(toolpath) {\n  // console.log(\"toolpath\", toolpath);\n  if (len(toolpath) >= 1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar intToolpaths = function intToolpaths(geo, params) {\n  var contours = {};\n  var count = 0;\n  var pass = clipOffset(geo, -params.compensatedRadius);\n\n  if (isToolpath(pass) !== true) {\n    return contours;\n  }\n\n  while (isToolpath(pass)) {\n    contours[count] = pass;\n    count++;\n    pass = clipOffset(contours[count - 1], -params.compensatedRadius * params.stepoverPercentage / 100);\n  }\n\n  return contours;\n};\n\nvar pocket = function pocket(contour, params) {\n  var outlines = intToolpaths(contour, params);\n  console.log(outlines); // console.log(keyPoints);\n\n  var gcodePoints = keyPoints.map(function (c) {\n    var raise = c.length > 1;\n    return c.map(function (c2) {\n      var firstPoint = c2[0];\n      firstPoint = \"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(params.feedRate);\n\n      if (raise) {\n        return [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate), firstPoint, //want to jog to this one\n        \"plunge\"].concat(_toConsumableArray(c2.map(function (c3) {\n          return \"G1 X\".concat(c3[0], \" Y\").concat(c3[1], \" F\").concat(params.feedRate);\n        })), [firstPoint, \"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]);\n      } else {\n        return [firstPoint, \"plunge\"].concat(_toConsumableArray(c2.map(function (c3) {\n          return \"G1 X\".concat(c3[0], \" Y\").concat(c3[1], \" F\").concat(params.feedRate);\n        })), [firstPoint]);\n      }\n    });\n  });\n  var paths = gcodePoints.flat(1); // let firstPoint = keyPoints[0][0][0];\n\n  var paths2 = params.depthOfPasses.map(function (p, i) {\n    return _toConsumableArray(paths.flat(1).map(function (x) {\n      return x === \"plunge\" ? \"G1 Z\".concat(params.depthOfPasses[i], \" F12.0\") : x;\n    }));\n  }); // console.log(paths2)\n\n  paths2 = paths2.flat(1);\n  var preamble = [params.units, \"G90\"];\n  var gcode = [].concat(preamble, [\"(end of preamble)\", \"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)], _toConsumableArray(paths2), [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]); // write to a new file named\n\n  var filename = 'testGcodePocket.gcode';\n  var text = gcode.join('\\n');\n  return {\n    drawing: outlines,\n    gcode: text,\n    filename: filename\n  };\n};\n\nexport { pocket };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/toolpaths/pocket.js"],"names":["mjs","clipperOffset","clipOffset","len","toolpath","Object","keys","models","length","isToolpath","intToolpaths","geo","params","contours","count","pass","compensatedRadius","stepoverPercentage","pocket","contour","outlines","console","log","gcodePoints","keyPoints","map","c","raise","c2","firstPoint","feedRate","jogHeight","jogRate","c3","paths","flat","paths2","depthOfPasses","p","i","x","preamble","units","gcode","filename","text","join","drawing"],"mappings":"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","sourcesContent":["// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\nimport clipperOffset from './clipperOffset.js';\nimport {clipOffset} from '../unmakerjs/clipper.js'\n\n\nconst len = (toolpath) => Object.keys(toolpath.models).length;\n\nconst isToolpath = (toolpath) => {\n  // console.log(\"toolpath\", toolpath);\n\n  if (len(toolpath) >= 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst intToolpaths = (geo, params) => {\n  let contours = {};\n  let count = 0;\n\n  let pass = clipOffset(geo, -params.compensatedRadius);\n\n  if (isToolpath(pass) !== true) {\n    return contours;\n  }\n\n  while ( isToolpath(pass)) {\n    contours[count] = pass;\n    count++;\n    pass = clipOffset(contours[count - 1], -params.compensatedRadius * params.stepoverPercentage/100);\n  }\n\n  return contours;\n}\n\nconst pocket = (contour, params) => {\n\n  let outlines = intToolpaths(contour, params);\n\n  console.log(outlines)\n\n  // console.log(keyPoints);\n\n  let gcodePoints = keyPoints.map(c => {\n    let raise = c.length > 1;\n\n    return c.map(c2 => {\n      let firstPoint = c2[0];\n      firstPoint = `G1 X${firstPoint[0]} Y${firstPoint[1]} F${params.feedRate}`;\n\n      if (raise) {\n        return [\n          `G1 Z${params.jogHeight} F${params.jogRate}`,\n          firstPoint, //want to jog to this one\n          \"plunge\",\n          ...c2.map(c3 => `G1 X${c3[0]} Y${c3[1]} F${params.feedRate}`),\n          firstPoint,\n          `G1 Z${params.jogHeight} F${params.jogRate}`,\n        ]\n      } else {\n        return [\n          firstPoint,\n          \"plunge\",\n          ...c2.map(c3 => `G1 X${c3[0]} Y${c3[1]} F${params.feedRate}`),\n          firstPoint\n        ]\n      }\n    });\n  });\n\n  let paths = gcodePoints.flat(1);\n\n  // let firstPoint = keyPoints[0][0][0];\n\n  let paths2 = params.depthOfPasses.map((p,i) => [\n    ...paths.flat(1).map(x => (x === \"plunge\") ? `G1 Z${params.depthOfPasses[i]} F12.0` : x),\n  ])\n\n  // console.log(paths2)\n\n  paths2 = paths2.flat(1);\n\n  let preamble = [params.units, \"G90\"];\n\n  let gcode = [\n    ...preamble,\n    \"(end of preamble)\",\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n    // `G0 X${firstPoint[0]} Y${firstPoint[1]}`,\n    ...paths2,\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n  ]\n\n  // write to a new file named\n  let filename = 'testGcodePocket.gcode';\n\n  let text = gcode.join('\\n');\n\n  return {drawing: outlines, gcode: text, filename};\n};\n\n\nexport {pocket};\n"]},"metadata":{},"sourceType":"module"}