{"ast":null,"code":"import _objectSpread from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { uploadSVG } from './uploadSVG.js';\nimport { Workplane } from './Workplane.js';\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      thicknessSubmit: false,\n      materialSubmit: false,\n      originSubmit: false,\n      initialized: true,\n      //will be false\n      hovered: null,\n      selected: []\n    };\n\n    _this.firstSubmit = function (name) {\n      var old = _this.state;\n      old[name] = true;\n\n      _this.setState({\n        old: old\n      });\n    };\n\n    _this.hovered = function (dataRoute) {\n      _this.setState({\n        hovered: dataRoute\n      });\n\n      console.log(dataRoute);\n    };\n\n    _this.selected = function (dataRoute) {\n      var newSelected;\n\n      if (dataRoute === null) {\n        newSelected = [];\n      } else {\n        console.log(typeof dataRoute);\n        dataRoute.join();\n        newSelected = _toConsumableArray(_this.state.selected).concat([dataRoute]);\n      }\n\n      _this.setState({\n        selected: newSelected\n      });\n\n      console.log(newSelected);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initialized\",\n    value: function initialized() {\n      if (!this.state.initialized && this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit) {\n        this.setState({\n          initialized: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      this.initialized();\n      var cuts = {};\n      store.getState().toolpaths.forEach(function (path) {\n        if (path.selected) {\n          cuts[path.id] = path.geometry.drawing;\n        }\n      });\n      var model = {\n        models: {\n          shapes: {\n            models: _objectSpread({}, store.getState().shapes)\n          },\n          cuts: {\n            models: _objectSpread({}, cuts)\n          }\n        }\n      };\n      model.models.cuts.layer = \"red\"; // model = mjs.model.originate(model);\n      // model = mjs.model.zero(model);\n\n      model['paths'] = {\n        origin: new mjs.paths.Circle(store.getState().defaultParameters.compensatedRadius)\n      };\n      var modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n      var viewModel = mjs.exporter.toSVG(modelToView, {\n        useSvgPathOnly: false,\n        strokeWidth: \".25mm\" // layerOptions:{\n        //   cuts: {\n        //     stroke: \"red\"\n        //   }\n        // },\n\n      });\n      viewModel = [viewModel];\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onMouseDown: function onMouseDown(e) {\n          return _this2.selected(e.target.getAttribute(\"data-route\"));\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this2.hovered(e.target.getAttribute(\"data-route\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mainEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref) {\n          return _this2.upload = _ref;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: uploadSVG,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(Button, {\n        marginRight: 4,\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"save\"))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialType, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialThickness, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" \", React.createElement(Units, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \" \", React.createElement(Origin, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"select settings before editting options\") : \"\", React.createElement(Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" \", React.createElement(AdvancedOptions, {\n        disabled: !this.state.initialized,\n        default: true,\n        params: store.getState().defaultParameters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Create Toolpaths\"), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"select settings before creating toolpaths\") : \"\", React.createElement(\"div\", {\n        className: \"toolpaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Profile\"), React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(PocketButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginLeft: 8,\n        marginTop: 4,\n        onClick: function onClick() {\n          return console.log(store.getState());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Drill\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Toolpaths\"), React.createElement(ToolpathList, {\n        marginTop: 4,\n        state: store.getState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js"],"names":["React","Component","PureComponent","Button","Heading","Pane","Paragraph","utils","mjs","params","s2p","svgson","uploadSVG","Workplane","MaterialType","MaterialThickness","Origin","Units","PocketButton","AdvancedOptions","ToolpathList","store","App","state","thicknessSubmit","materialSubmit","originSubmit","initialized","hovered","selected","firstSubmit","name","old","setState","dataRoute","console","log","newSelected","join","cuts","getState","toolpaths","forEach","path","id","geometry","drawing","model","models","shapes","layer","origin","paths","Circle","defaultParameters","compensatedRadius","modelToView","scale","deepcopy","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","e","target","getAttribute","ref","upload","display","click"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {Button, Heading, Pane, Paragraph} from 'evergreen-ui';\nimport './App.css';\n\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\n\nimport {uploadSVG} from './uploadSVG.js';\n\nimport {Workplane} from './Workplane.js'\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nclass App extends Component {\n\n  state = {\n    thicknessSubmit : false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: true, //will be false\n\n    hovered: null,\n    selected: [],\n  }\n\n  firstSubmit = (name) => {\n    let old = this.state;\n    old[name] = true;\n\n    this.setState({old});\n  }\n\n  initialized() {\n    if (!this.state.initialized && (this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit)) {\n      this.setState({initialized:true});\n    }\n  }\n\n  hovered = (dataRoute) => {\n    this.setState({\n      hovered:dataRoute\n    })\n\n    console.log(dataRoute);\n  }\n\n  selected = (dataRoute) => {\n\n    let newSelected;\n\n    if (dataRoute === null) {\n      newSelected = []\n    } else {\n      console.log(typeof dataRoute);\n      dataRoute.join();\n      newSelected = [...this.state.selected, dataRoute]\n    }\n\n    this.setState({\n      selected: newSelected,\n    })\n\n    console.log(newSelected);\n  }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    this.initialized();\n\n    let cuts = {};\n\n    store.getState().toolpaths.forEach(path => {\n      if (path.selected) {\n        cuts[path.id] = path.geometry.drawing;\n      }\n    })\n\n    let model = {\n      models: {\n        shapes: {\n          models: {\n            ...store.getState().shapes\n          }\n        },\n        cuts: {\n          models: {\n            ...cuts\n          }\n        }\n      }\n    }\n\n    model.models.cuts.layer = \"red\";\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n\n    model['paths'] = {\n      origin: new mjs.paths.Circle(store.getState().defaultParameters.compensatedRadius)\n    }\n\n    let modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n    let viewModel = mjs.exporter.toSVG(modelToView, {\n      useSvgPathOnly:false,\n      strokeWidth:\".25mm\",\n      // layerOptions:{\n      //   cuts: {\n      //     stroke: \"red\"\n      //   }\n      // },\n    });\n\n    viewModel = [viewModel];\n\n    return (\n      <div\n        className=\"wrapper\"\n        onMouseDown={(e) => this.selected(e.target.getAttribute(\"data-route\"))}\n        onMouseMove={(e) => this.hovered(e.target.getAttribute(\"data-route\"))}>\n\n\n        <div className=\"mainEvent\">\n          <Workplane groups={viewModel}/>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => this.upload = ref}\n              style={{ display: 'none' }}\n              onChange={uploadSVG}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => this.upload.click()}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button>\n              save\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <MaterialThickness firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin firstSubmit={this.firstSubmit}/></Pane>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before editting options</Paragraph> : \"\"}\n            <Pane> <AdvancedOptions disabled={!this.state.initialized} default={true} params={store.getState().defaultParameters}/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before creating toolpaths</Paragraph> : \"\"}\n            <div className=\"toolpaths\">\n              <Button disabled={!this.state.initialized} marginTop={4}>Profile</Button>\n              <Pane marginLeft={8} marginTop={4}><PocketButton disabled={!this.state.initialized}/></Pane>\n              <Button disabled={!this.state.initialized} marginLeft={8} marginTop={4} onClick={() => console.log(store.getState())}>Drill</Button>\n            </div>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <ToolpathList marginTop={4} state={store.getState()}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}