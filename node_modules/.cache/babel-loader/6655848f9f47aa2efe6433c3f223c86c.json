{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent } from \"../../common/abstractPureComponent\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon } from \"../icon/icon\";\n\nvar Toast =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Toast, _super);\n\n  function Toast() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleActionClick = function (e) {\n      safeInvoke(_this.props.action.onClick, e);\n\n      _this.triggerDismiss(false);\n    };\n\n    _this.handleCloseClick = function () {\n      return _this.triggerDismiss(false);\n    };\n\n    _this.startTimeout = function () {\n      if (_this.props.timeout > 0) {\n        _this.setTimeout(function () {\n          return _this.triggerDismiss(true);\n        }, _this.props.timeout);\n      }\n    };\n\n    return _this;\n  }\n\n  Toast.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        icon = _a.icon,\n        intent = _a.intent,\n        message = _a.message;\n    return React.createElement(\"div\", {\n      className: classNames(Classes.TOAST, Classes.intentClass(intent), className),\n      onBlur: this.startTimeout,\n      onFocus: this.clearTimeouts,\n      onMouseEnter: this.clearTimeouts,\n      onMouseLeave: this.startTimeout,\n      tabIndex: 0\n    }, React.createElement(Icon, {\n      icon: icon\n    }), React.createElement(\"span\", {\n      className: Classes.TOAST_MESSAGE\n    }, message), React.createElement(ButtonGroup, {\n      minimal: true\n    }, this.maybeRenderActionButton(), React.createElement(Button, {\n      icon: \"cross\",\n      onClick: this.handleCloseClick\n    })));\n  };\n\n  Toast.prototype.componentDidMount = function () {\n    this.startTimeout();\n  };\n\n  Toast.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.timeout !== this.props.timeout && this.props.timeout > 0) {\n      this.startTimeout();\n    } else if (prevProps.timeout <= 0 && this.props.timeout > 0) {\n      this.startTimeout();\n    } else if (prevProps.timeout > 0 && this.props.timeout <= 0) {\n      this.clearTimeouts();\n    }\n  };\n\n  Toast.prototype.componentWillUnmount = function () {\n    this.clearTimeouts();\n  };\n\n  Toast.prototype.maybeRenderActionButton = function () {\n    var action = this.props.action;\n\n    if (action == null) {\n      return undefined;\n    } else {\n      return React.createElement(AnchorButton, tslib_1.__assign({}, action, {\n        intent: undefined,\n        onClick: this.handleActionClick\n      }));\n    }\n  };\n\n  Toast.prototype.triggerDismiss = function (didTimeoutExpire) {\n    safeInvoke(this.props.onDismiss, didTimeoutExpire);\n    this.clearTimeouts();\n  };\n\n  Toast.defaultProps = {\n    className: \"\",\n    message: \"\",\n    timeout: 5000\n  };\n  Toast.displayName = DISPLAYNAME_PREFIX + \".Toast\";\n  return Toast;\n}(AbstractPureComponent);\n\nexport { Toast };","map":null,"metadata":{},"sourceType":"module"}