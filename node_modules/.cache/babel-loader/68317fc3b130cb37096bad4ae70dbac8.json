{"ast":null,"code":"import * as utils from './utils.js'; //sampling rate of gcode points, not used when taking keyPoints\n\nvar minimumSpacing = 2; //units\n\nvar units = \"in\"; //or \"mm\"\n\nif (units === \"in\") {\n  units = \"G20\";\n}\n\nif (units === \"mm\") {\n  units = \"G21\";\n} //generate gcode data\n\n\nvar cutDepth = 34 / 2;\nvar passDepth = cutDepth / 2;\nvar toolDiameter = 2; //let numberOfOffsets = 3;\n//let stepover = 2;\n\nvar stepoverPercentage = 60;\nstepoverPercentage = stepoverPercentage / 100;\nvar tolerance = 0; //let climbDirection = false;\n\nvar insideCutting = false; //let millOuterFirst = false;\n\nvar jogHeight = 3;\nvar jogRate = 40;\nvar feedRate = 20; //derived parameters\n\nvar toolRadius = toolDiameter / 2; //let nSeries = toolDiameter * stepover;\n\nvar compensatedRadius = toolRadius + tolerance;\nvar tempFloor = Math.ceil(cutDepth / passDepth); //should this be ceiling or floor, I think ceil\n\nvar actualPassDepth = cutDepth / tempFloor;\nvar depthOfPasses = utils.makeSeries(actualPassDepth, actualPassDepth, tempFloor).map(function (n) {\n  return -n;\n});\nexport { compensatedRadius, feedRate, depthOfPasses, jogHeight, minimumSpacing, units, insideCutting, stepoverPercentage, jogRate };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/parameters.js"],"names":["utils","minimumSpacing","units","cutDepth","passDepth","toolDiameter","stepoverPercentage","tolerance","insideCutting","jogHeight","jogRate","feedRate","toolRadius","compensatedRadius","tempFloor","Math","ceil","actualPassDepth","depthOfPasses","makeSeries","map","n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,YAAvB,C,CAEA;;AACA,IAAIC,cAAc,GAAG,CAArB,C,CAEA;;AACA,IAAIC,KAAK,GAAG,IAAZ,C,CAAiB;;AACjB,IAAIA,KAAK,KAAK,IAAd,EAAoB;AAAEA,EAAAA,KAAK,GAAG,KAAR;AAAc;;AACpC,IAAIA,KAAK,KAAK,IAAd,EAAoB;AAAEA,EAAAA,KAAK,GAAG,KAAR;AAAc,C,CAEpC;;;AACA,IAAIC,QAAQ,GAAG,KAAG,CAAlB;AACA,IAAIC,SAAS,GAAGD,QAAQ,GAAC,CAAzB;AAEA,IAAIE,YAAY,GAAG,CAAnB,C,CAEA;AACA;;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACAA,kBAAkB,GAAGA,kBAAkB,GAAC,GAAxC;AAEA,IAAIC,SAAS,GAAG,CAAhB,C,CAEA;;AACA,IAAIC,aAAa,GAAG,KAApB,C,CACA;;AAEA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,QAAQ,GAAG,EAAf,C,CAEA;;AACA,IAAIC,UAAU,GAAGP,YAAY,GAAC,CAA9B,C,CACA;;AACA,IAAIQ,iBAAiB,GAAGD,UAAU,GAAGL,SAArC;AAEA,IAAIO,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUb,QAAQ,GAACC,SAAnB,CAAhB,C,CAA+C;;AAC/C,IAAIa,eAAe,GAAGd,QAAQ,GAACW,SAA/B;AAEA,IAAII,aAAa,GAAGlB,KAAK,CAACmB,UAAN,CAAiBF,eAAjB,EAAkCA,eAAlC,EAAmDH,SAAnD,EAA8DM,GAA9D,CAAkE,UAAAC,CAAC;AAAA,SAAI,CAACA,CAAL;AAAA,CAAnE,CAApB;AAEA,SACER,iBADF,EAEEF,QAFF,EAGEO,aAHF,EAIET,SAJF,EAKER,cALF,EAMEC,KANF,EAOEM,aAPF,EAQEF,kBARF,EASEI,OATF","sourcesContent":["import * as utils from './utils.js';\n\n//sampling rate of gcode points, not used when taking keyPoints\nlet minimumSpacing = 2;\n\n//units\nlet units = \"in\" //or \"mm\"\nif (units === \"in\") { units = \"G20\"}\nif (units === \"mm\") { units = \"G21\"}\n\n//generate gcode data\nlet cutDepth = 34/2;\nlet passDepth = cutDepth/2;\n\nlet toolDiameter = 2;\n\n//let numberOfOffsets = 3;\n//let stepover = 2;\nlet stepoverPercentage = 60;\nstepoverPercentage = stepoverPercentage/100;\n\nlet tolerance = 0;\n\n//let climbDirection = false;\nlet insideCutting = false;\n//let millOuterFirst = false;\n\nlet jogHeight = 3;\nlet jogRate = 40;\nlet feedRate = 20;\n\n//derived parameters\nlet toolRadius = toolDiameter/2;\n//let nSeries = toolDiameter * stepover;\nlet compensatedRadius = toolRadius + tolerance;\n\nlet tempFloor = Math.ceil(cutDepth/passDepth); //should this be ceiling or floor, I think ceil\nlet actualPassDepth = cutDepth/tempFloor;\n\nlet depthOfPasses = utils.makeSeries(actualPassDepth, actualPassDepth, tempFloor).map(n => -n);\n\nexport {\n  compensatedRadius,\n  feedRate,\n  depthOfPasses,\n  jogHeight,\n  minimumSpacing,\n  units,\n  insideCutting,\n  stepoverPercentage,\n  jogRate\n}\n"]},"metadata":{},"sourceType":"module"}