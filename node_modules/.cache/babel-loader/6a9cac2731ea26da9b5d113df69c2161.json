{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { withTheme } from '../../theme';\n\nvar Text =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Text, _PureComponent);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Text).apply(this, arguments));\n  }\n\n  _createClass(Text, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          size = _this$props.size,\n          color = _this$props.color,\n          fontFamily = _this$props.fontFamily,\n          marginTop = _this$props.marginTop,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"size\", \"color\", \"fontFamily\", \"marginTop\"]);\n\n      var _theme$getTextStyle = theme.getTextStyle(size),\n          defaultMarginTop = _theme$getTextStyle.marginTop,\n          textStyle = _objectWithoutProperties(_theme$getTextStyle, [\"marginTop\"]);\n\n      var finalMarginTop = marginTop === 'default' ? defaultMarginTop : marginTop;\n      return React.createElement(Box, _extends({\n        is: \"span\",\n        color: theme.getTextColor(color),\n        fontFamily: theme.getFontFamily(fontFamily),\n        marginTop: finalMarginTop\n      }, textStyle, props));\n    }\n  }]);\n\n  return Text;\n}(PureComponent);\n\nText.displayName = \"Text\";\n\n_defineProperty(Text, \"propTypes\", _objectSpread({}, Box.propTypes, {\n  /**\n   * Size of the text style.\n   * Can be: 300, 400, 500, 600.\n   */\n  size: PropTypes.oneOf([300, 400, 500, 600]).isRequired,\n\n  /**\n   * Font family.\n   * Can be: `ui`, `display` or `mono` or a custom font family.\n   */\n  fontFamily: PropTypes.string.isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Text, \"defaultProps\", {\n  size: 400,\n  color: 'default',\n  fontFamily: 'ui'\n});\n\nexport default withTheme(Text);","map":null,"metadata":{},"sourceType":"module"}