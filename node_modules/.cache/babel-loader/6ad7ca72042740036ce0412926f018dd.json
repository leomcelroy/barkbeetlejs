{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_MODES = exports.limitRange = exports.getRangeHours = exports.nextMonth = exports.prevMonth = exports.getWeekNumber = exports.getStartDateOfMonth = exports.DAY_DURATION = exports.getFirstDayOfMonth = exports.getDayCountOfMonth = exports.parseDate = exports.formatDate = exports.isDate = exports.toDate = exports.equalDate = undefined;\nexports.getOffsetToWeekOrigin = getOffsetToWeekOrigin;\nexports.getDateOfISOWeek = getDateOfISOWeek;\nexports.hasClass = hasClass;\nexports.deconstructDate = deconstructDate;\n\nvar _utils = require('../../../libs/utils');\n\nvar _locale = require('../../locale');\n\nvar _locale2 = _interopRequireDefault(_locale);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar t = _locale2.default.t;\nvar weeks = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nvar months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n_utils.DateUtils.i18n = {\n  dayNamesShort: weeks.map(function (week) {\n    return t('el.datepicker.weeks.' + week);\n  }),\n  dayNames: weeks.map(function (week) {\n    return t('el.datepicker.weeks.' + week);\n  }),\n  monthNamesShort: months.map(function (month) {\n    return t('el.datepicker.months.' + month);\n  }),\n  monthNames: months.map(function (month, index) {\n    return t('el.datepicker.month' + (index + 1));\n  })\n};\n\nvar newArray = function newArray(start, end) {\n  var result = [];\n\n  for (var i = start; i <= end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar equalDate = exports.equalDate = function equalDate(dateA, dateB) {\n  return dateA === dateB || new Date(dateA).getTime() === new Date(dateB).getTime();\n};\n\nvar toDate = exports.toDate = function toDate(date) {\n  return isDate(date) ? new Date(date) : null;\n};\n\nvar isDate = exports.isDate = function isDate(date) {\n  if (date === null || date === undefined) return false;\n  if (isNaN(new Date(date).getTime())) return false;\n  return true;\n};\n\nvar formatDate = exports.formatDate = function formatDate(date, format) {\n  date = toDate(date);\n  if (!date) return '';\n  return _utils.DateUtils.format(date, format || 'yyyy-MM-dd');\n};\n\nvar parseDate = exports.parseDate = function parseDate(string, format) {\n  return _utils.DateUtils.parse(string, format || 'yyyy-MM-dd');\n};\n\nvar getDayCountOfMonth = exports.getDayCountOfMonth = function getDayCountOfMonth(year, month) {\n  if (month === 3 || month === 5 || month === 8 || month === 10) {\n    return 30;\n  }\n\n  if (month === 1) {\n    if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {\n      return 29;\n    } else {\n      return 28;\n    }\n  }\n\n  return 31;\n};\n\nvar getFirstDayOfMonth = exports.getFirstDayOfMonth = function getFirstDayOfMonth(date) {\n  var temp = new Date(date.getTime());\n  temp.setDate(1);\n  return temp.getDay();\n};\n\nvar DAY_DURATION = exports.DAY_DURATION = 86400000; // return date corresponding to the first cell on datetable \n\nvar getStartDateOfMonth = exports.getStartDateOfMonth = function getStartDateOfMonth(year, month) {\n  var offsetWeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var result = new Date(year, month, 1);\n  var day = result.getDay();\n\n  if (day === offsetWeek) {\n    result.setTime(result.getTime() - DAY_DURATION * 7);\n  } else {\n    var offset = getOffsetToWeekOrigin(day, offsetWeek);\n    result.setTime(result.getTime() - DAY_DURATION * offset);\n  }\n\n  return result;\n};\n/**\n * \n * @export\n * @param {any} day , first day of current month, 0 - 6\n * @param {number} [offsetWeek=0, 0-6, 0 sunday, 6 saturday] \n * @returns \n */\n\n\nfunction getOffsetToWeekOrigin(day) {\n  var offsetWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offset = day >= offsetWeek ? day - offsetWeek : 7 + day - offsetWeek;\n  offset = offset === 0 ? 7 : offset; // if the two days collide, we force 7 days padding\n\n  return offset;\n}\n\nvar getWeekNumber = exports.getWeekNumber = function getWeekNumber(src) {\n  var date = new Date(src.getTime());\n  date.setHours(0, 0, 0, 0); // Thursday in current week decides the year.\n\n  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7); // January 4 is always in week 1.\n\n  var week1 = new Date(date.getFullYear(), 0, 4); // Adjust to Thursday in week 1 and count number of weeks from date to week 1.\n\n  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n}; // http://stackoverflow.com/questions/16590500/javascript-calculate-date-from-week-number\n\n\nfunction getDateOfISOWeek(w, y) {\n  var simple = new Date(y, 0, 1 + (w - 1) * 7);\n  var dow = simple.getDay();\n  var ISOweekStart = simple;\n  if (dow <= 4) ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);else ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n  return ISOweekStart;\n}\n\nvar prevMonth = exports.prevMonth = function prevMonth(src) {\n  var year = src.getFullYear();\n  var month = src.getMonth();\n  var date = src.getDate();\n  var newYear = month === 0 ? year - 1 : year;\n  var newMonth = month === 0 ? 11 : month - 1;\n  var newMonthDayCount = getDayCountOfMonth(newYear, newMonth);\n\n  if (newMonthDayCount < date) {\n    src.setDate(newMonthDayCount);\n  }\n\n  src.setMonth(newMonth);\n  src.setFullYear(newYear);\n  return new Date(src.getTime());\n};\n\nvar nextMonth = exports.nextMonth = function nextMonth(src) {\n  var clone = new Date(src.getTime());\n  var year = clone.getFullYear();\n  var month = clone.getMonth();\n  var date = clone.getDate();\n  var newYear = month === 11 ? year + 1 : year;\n  var newMonth = month === 11 ? 0 : month + 1;\n  var newMonthDayCount = getDayCountOfMonth(newYear, newMonth);\n\n  if (newMonthDayCount < date) {\n    clone.setDate(newMonthDayCount);\n  }\n\n  clone.setMonth(newMonth);\n  clone.setFullYear(newYear);\n  return clone;\n};\n\nvar getRangeHours = exports.getRangeHours = function getRangeHours(ranges) {\n  var hours = [];\n  var disabledHours = [];\n  (ranges || []).forEach(function (range) {\n    var value = range.map(function (date) {\n      return date.getHours();\n    });\n    disabledHours = disabledHours.concat(newArray(value[0], value[1]));\n  });\n\n  if (disabledHours.length) {\n    for (var i = 0; i < 24; i++) {\n      hours[i] = disabledHours.indexOf(i) === -1;\n    }\n  } else {\n    for (var _i = 0; _i < 24; _i++) {\n      hours[_i] = false;\n    }\n  }\n\n  return hours;\n};\n\nvar limitRange = exports.limitRange = function limitRange(date, ranges) {\n  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'yyyy-MM-dd HH:mm:ss';\n  if (!ranges || !ranges.length) return date;\n  var len = ranges.length;\n  date = _utils.DateUtils.parse(_utils.DateUtils.format(date, format), format);\n\n  for (var i = 0; i < len; i++) {\n    var range = ranges[i];\n\n    if (date >= range[0] && date <= range[1]) {\n      return date;\n    }\n  }\n\n  var maxDate = ranges[0][0];\n  var minDate = ranges[0][0];\n  ranges.forEach(function (range) {\n    minDate = new Date(Math.min(range[0], minDate));\n    maxDate = new Date(Math.max(range[1], maxDate));\n  });\n  return date < minDate ? minDate : maxDate;\n};\n\nfunction hasClass(target, classname) {\n  return target.classList.contains(classname);\n}\n\nvar SELECTION_MODES = exports.SELECTION_MODES = {\n  YEAR: 'year',\n  MONTH: 'month',\n  WEEK: 'week',\n  DAY: 'day',\n  RANGE: 'range'\n};\n\nfunction deconstructDate(date) {\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth(),\n    week: getWeekNumber(date)\n  };\n}\n\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(t, 't', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(weeks, 'weeks', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(months, 'months', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(newArray, 'newArray', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(equalDate, 'equalDate', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(toDate, 'toDate', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(isDate, 'isDate', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(formatDate, 'formatDate', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(parseDate, 'parseDate', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getDayCountOfMonth, 'getDayCountOfMonth', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getFirstDayOfMonth, 'getFirstDayOfMonth', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(DAY_DURATION, 'DAY_DURATION', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getStartDateOfMonth, 'getStartDateOfMonth', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getOffsetToWeekOrigin, 'getOffsetToWeekOrigin', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getWeekNumber, 'getWeekNumber', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getDateOfISOWeek, 'getDateOfISOWeek', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(prevMonth, 'prevMonth', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(nextMonth, 'nextMonth', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(getRangeHours, 'getRangeHours', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(limitRange, 'limitRange', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(hasClass, 'hasClass', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(SELECTION_MODES, 'SELECTION_MODES', 'src/date-picker/utils/index.js');\n\n  __REACT_HOT_LOADER__.register(deconstructDate, 'deconstructDate', 'src/date-picker/utils/index.js');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}