{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../typography';\nimport { Icon } from '../../icon';\nimport TableHeaderCell from './TableHeaderCell';\nvar invisibleInput = {\n  border: 'none',\n  backgroundColor: 'transparent',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  WebkitFontSmoothing: 'antialiased',\n  '&:focus': {\n    outline: 'none'\n  },\n  '&::placeholder': {\n    color: \"rgba(67, 90, 111, 0.7)\"\n  }\n};\n\nvar SearchTableHeaderCell =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SearchTableHeaderCell, _PureComponent);\n\n  function SearchTableHeaderCell() {\n    _classCallCheck(this, SearchTableHeaderCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchTableHeaderCell).apply(this, arguments));\n  }\n\n  _createClass(SearchTableHeaderCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          children = _this$props.children,\n          _onChange = _this$props.onChange,\n          autoFocus = _this$props.autoFocus,\n          spellCheck = _this$props.spellCheck,\n          placeholder = _this$props.placeholder,\n          props = _objectWithoutProperties(_this$props, [\"value\", \"children\", \"onChange\", \"autoFocus\", \"spellCheck\", \"placeholder\"]);\n\n      return React.createElement(TableHeaderCell, props, React.createElement(Icon, {\n        icon: \"search\",\n        color: \"muted\",\n        marginLeft: 2,\n        marginRight: 10,\n        size: 12\n      }), React.createElement(Text, {\n        is: \"input\",\n        size: 300,\n        flex: \"1\",\n        css: invisibleInput,\n        value: value,\n        onChange: function onChange(e) {\n          return _onChange(e.target.value);\n        },\n        autoFocus: autoFocus,\n        spellCheck: spellCheck,\n        fontWeight: 500,\n        marginLeft: -2,\n        paddingLeft: 0,\n        placeholder: placeholder\n      }));\n    }\n  }]);\n\n  return SearchTableHeaderCell;\n}(PureComponent);\n\nSearchTableHeaderCell.displayName = \"SearchTableHeaderCell\";\n\n_defineProperty(SearchTableHeaderCell, \"propTypes\", _objectSpread({}, TableHeaderCell.propTypes, {\n  /**\n   * The value of the input.\n   */\n  value: PropTypes.string,\n\n  /**\n   * Handler to be called when the input changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Sets whether the component should be automatically focused on component render.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Sets whether to apply spell checking to the content.\n   */\n  spellCheck: PropTypes.bool,\n\n  /**\n   * Text to display in the input if the input is empty.\n   */\n  placeholder: PropTypes.string\n}));\n\n_defineProperty(SearchTableHeaderCell, \"defaultProps\", {\n  onChange: function onChange() {},\n  spellCheck: true,\n  placeholder: 'Filter...'\n});\n\nexport { SearchTableHeaderCell as default };","map":null,"metadata":{},"sourceType":"module"}