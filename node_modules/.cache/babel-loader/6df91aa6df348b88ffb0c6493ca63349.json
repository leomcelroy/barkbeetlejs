{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _throttle = require('throttle-debounce/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nvar _libs = require('../../libs');\n\nvar _checkbox = require('../checkbox');\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _FilterPannel = require('./FilterPannel');\n\nvar _FilterPannel2 = _interopRequireDefault(_FilterPannel);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _document = document;\n\nvar TableHeader = function (_Component) {\n  (0, _inherits3.default)(TableHeader, _Component);\n\n  function TableHeader(props) {\n    (0, _classCallCheck3.default)(this, TableHeader);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (TableHeader.__proto__ || Object.getPrototypeOf(TableHeader)).call(this, props));\n\n    ['handleHeaderClick', 'handleFilterClick', 'handleSortClick'].forEach(function (fn) {\n      _this[fn] = (0, _throttle2.default)(300, true, _this[fn]);\n    });\n    return _this;\n  }\n\n  (0, _createClass3.default)(TableHeader, [{\n    key: 'handleMouseMove',\n    value: function handleMouseMove(column, event) {\n      if (!column.resizable) return;\n      if (column.subColumns && column.subColumns.length) return;\n\n      if (!this.dragging && this.props.border) {\n        var target = event.target;\n\n        while (target && target.tagName !== 'TH') {\n          target = target.parentNode;\n        }\n\n        var rect = target.getBoundingClientRect();\n        var bodyStyle = _document.body.style;\n\n        if (rect.width > 12 && rect.right - event.pageX < 8) {\n          bodyStyle.cursor = 'col-resize';\n          this.draggingColumn = column;\n        } else {\n          bodyStyle.cursor = '';\n          this.draggingColumn = null;\n        }\n      }\n    }\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(column, event) {\n      var _this2 = this;\n\n      if (this.draggingColumn) {\n        this.dragging = true;\n        var table = this.context.table;\n        var tableEl = table.el,\n            resizeProxy = table.resizeProxy;\n        var tableLeft = tableEl.getBoundingClientRect().left;\n        var columnEl = event.target;\n\n        while (columnEl && columnEl.tagName !== 'TH') {\n          columnEl = columnEl.parentNode;\n        }\n\n        var columnRect = columnEl.getBoundingClientRect();\n        var minLeft = columnRect.left - tableLeft + 30;\n        columnEl.classList.add('noclick');\n        var startMouseLeft = event.clientX;\n        var startLeft = columnRect.right - tableLeft;\n        var startColumnLeft = columnRect.left - tableLeft;\n        resizeProxy.style.visibility = 'visible';\n        resizeProxy.style.left = startLeft + 'px';\n\n        _document.onselectstart = function () {\n          return false;\n        };\n\n        _document.ondragstart = function () {\n          return false;\n        };\n\n        var handleMouseMove = function handleMouseMove(event) {\n          var deltaLeft = event.clientX - startMouseLeft;\n          var proxyLeft = startLeft + deltaLeft;\n          resizeProxy.style.left = Math.max(minLeft, proxyLeft) + 'px';\n        };\n\n        var handleMouseUp = function handleMouseUp(event) {\n          if (_this2.dragging) {\n            var finalLeft = parseInt(resizeProxy.style.left, 10);\n            var columnWidth = finalLeft - startColumnLeft;\n            var oldWidth = column.realWidth;\n            column.width = column.realWidth = columnWidth;\n            _this2.dragging = false;\n            _this2.draggingColumn = null;\n            _document.body.style.cursor = '';\n            resizeProxy.style.visibility = 'hidden';\n\n            _document.removeEventListener('mousemove', handleMouseMove);\n\n            _document.removeEventListener('mouseup', handleMouseUp);\n\n            _document.onselectstart = null;\n            _document.ondragstart = null;\n            setTimeout(function () {\n              columnEl.classList.remove('noclick');\n            });\n\n            _this2.context.layout.scheduleLayout();\n\n            _this2.dispatchEvent('onHeaderDragEnd', columnWidth, oldWidth, column, event);\n          }\n        };\n\n        _document.addEventListener('mousemove', handleMouseMove);\n\n        _document.addEventListener('mouseup', handleMouseUp);\n      }\n    }\n  }, {\n    key: 'handleMouseOut',\n    value: function handleMouseOut() {\n      _document.body.style.cursor = \"\";\n    }\n  }, {\n    key: 'handleHeaderClick',\n    value: function handleHeaderClick(column, event) {\n      if (column.sortable && !column.filters) {\n        this.handleSortClick(column, null, event);\n      } else if (column.filters && !column.sortable) {\n        this.handleFilterClick(column, event);\n      } else {\n        this.dispatchEvent('onHeaderClick', column, event);\n      }\n    }\n  }, {\n    key: 'handleSortClick',\n    value: function handleSortClick(column, givenOrder, event) {\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n      var target = event.target;\n\n      while (target && target.tagName !== 'TH') {\n        target = target.parentNode;\n      }\n\n      if (target.classList.contains('noclick')) return;\n      var order = void 0;\n\n      if (givenOrder) {\n        order = givenOrder;\n      } else {\n        var _props$store = this.props.store,\n            sortColumn = _props$store.sortColumn,\n            sortOrder = _props$store.sortOrder;\n\n        if (column === sortColumn) {\n          if (!sortOrder) {\n            order = 'ascending';\n          } else {\n            order = sortOrder === 'ascending' ? 'descending' : null;\n          }\n        } else {\n          order = 'ascending';\n        }\n      }\n\n      this.context.store.changeSortCondition(column, order);\n      this.dispatchEvent('onHeaderClick', column, event);\n    }\n  }, {\n    key: 'handleFilterClick',\n    value: function handleFilterClick(column, event) {\n      if (event) {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n      }\n\n      this.context.store.toggleFilterOpened(column);\n      event && this.dispatchEvent('onHeaderClick', column, event);\n    }\n  }, {\n    key: 'dispatchEvent',\n    value: function dispatchEvent(name) {\n      var fn = this.props[name];\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      fn && fn.apply(undefined, args);\n    }\n  }, {\n    key: 'changeFilteredValue',\n    value: function changeFilteredValue(column, value) {\n      this.context.store.changeFilteredValue(column, value);\n    }\n  }, {\n    key: 'isCellHidden',\n    value: function isCellHidden(index, columns) {\n      var fixed = this.props.fixed;\n\n      if (fixed === true || fixed === 'left') {\n        return index >= this.leftFixedCount;\n      } else if (fixed === 'right') {\n        var before = 0;\n\n        for (var i = 0; i < index; i++) {\n          before += columns[i].colSpan;\n        }\n\n        return before < this.columnsCount - this.rightFixedCount;\n      } else {\n        return index < this.leftFixedCount || index >= this.columnsCount - this.rightFixedCount;\n      }\n    }\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader(column) {\n      var type = column.type;\n\n      if (type === 'expand') {\n        return column.label || '';\n      }\n\n      if (type === 'index') {\n        return column.label || '#';\n      }\n\n      if (type === 'selection') {\n        return React.createElement(_checkbox2.default, {\n          checked: this.context.store.isAllSelected,\n          onChange: this.context.store.toggleAllSelection\n        });\n      }\n\n      return column.renderHeader ? column.renderHeader(column) : column.label;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          store = _props.store,\n          layout = _props.layout,\n          fixed = _props.fixed;\n      return React.createElement('table', {\n        className: 'el-table__header',\n        cellPadding: 0,\n        cellSpacing: 0,\n        style: this.style({\n          borderSpacing: 0,\n          border: 0\n        })\n      }, React.createElement('colgroup', null, store.columns.map(function (column, index) {\n        return React.createElement('col', {\n          width: column.realWidth,\n          style: {\n            width: column.realWidth\n          },\n          key: index\n        });\n      }), !fixed && React.createElement('col', {\n        width: layout.scrollY ? layout.gutterWidth : 0,\n        style: {\n          width: layout.scrollY ? layout.gutterWidth : 0\n        }\n      })), React.createElement('thead', null, store.columnRows.map(function (columns, rowIndex) {\n        return React.createElement('tr', {\n          key: rowIndex\n        }, columns.map(function (column, cellIndex) {\n          return React.createElement('th', {\n            colSpan: column.colSpan,\n            rowSpan: column.rowSpan,\n            className: _this3.className(store.sortColumn === column && store.sortOrder, column.headerAlign, column.className, column.labelClassName, column.columnKey, {\n              'is-hidden': rowIndex === 0 && _this3.isCellHidden(cellIndex, columns),\n              'is-leaf': !column.subColumns,\n              'is-sortable': column.sortable\n            }),\n            onMouseMove: _this3.handleMouseMove.bind(_this3, column),\n            onMouseDown: _this3.handleMouseDown.bind(_this3, column),\n            onMouseOut: _this3.handleMouseOut,\n            onClick: _this3.handleHeaderClick.bind(_this3, column),\n            key: cellIndex\n          }, React.createElement('div', {\n            className: 'cell'\n          }, _this3.renderHeader(column), column.sortable && React.createElement('span', {\n            className: 'caret-wrapper',\n            onClick: _this3.handleSortClick.bind(_this3, column, null)\n          }, React.createElement('i', {\n            className: 'sort-caret ascending',\n            onClick: _this3.handleSortClick.bind(_this3, column, 'ascending')\n          }), React.createElement('i', {\n            className: 'sort-caret descending',\n            onClick: _this3.handleSortClick.bind(_this3, column, 'descending')\n          })), column.filterable && React.createElement(_FilterPannel2.default, {\n            visible: column.filterOpened,\n            multiple: column.filterMultiple,\n            filters: column.filters,\n            filteredValue: column.filteredValue,\n            placement: column.filterPlacement,\n            onFilterChange: _this3.changeFilteredValue.bind(_this3, column),\n            toggleFilter: _this3.handleFilterClick.bind(_this3, column)\n          }, React.createElement('span', {\n            className: 'el-table__column-filter-trigger',\n            onClick: _this3.handleFilterClick.bind(_this3, column)\n          }, React.createElement('i', {\n            className: _this3.classNames('el-icon-arrow-down', {\n              'el-icon-arrow-up': column.filterOpened\n            })\n          })))));\n        }), !fixed && React.createElement('th', {\n          className: 'gutter',\n          style: {\n            width: layout.scrollY ? layout.gutterWidth : 0\n          }\n        }));\n      })));\n    }\n  }, {\n    key: 'columnsCount',\n    get: function get() {\n      return this.props.store.columns.length;\n    }\n  }, {\n    key: 'leftFixedCount',\n    get: function get() {\n      return this.props.store.fixedColumns.length;\n    }\n  }, {\n    key: 'rightFixedCount',\n    get: function get() {\n      return this.props.store.rightFixedColumns.length;\n    }\n  }]);\n  return TableHeader;\n}(_libs.Component);\n\nTableHeader.contextTypes = {\n  store: _libs.PropTypes.any,\n  layout: _libs.PropTypes.any,\n  table: _libs.PropTypes.any\n};\nvar _default = TableHeader;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_document, '_document', 'src/table/TableHeader.jsx');\n\n  __REACT_HOT_LOADER__.register(TableHeader, 'TableHeader', 'src/table/TableHeader.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/table/TableHeader.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}