{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { openMiniature, closeMiniature } from '../features/miniature';\nimport IconArrow from './icon-arrow';\nimport { POSITION_RIGHT, POSITION_LEFT } from '../constants';\nexport default function MiniatureToggleButton(_ref) {\n  var _style;\n\n  var value = _ref.value,\n      onChangeValue = _ref.onChangeValue,\n      position = _ref.position;\n  var style = (_style = {\n    width: \"24px\",\n    height: \"24px\",\n    display: \"block\",\n    position: \"absolute\",\n    bottom: 0\n  }, _defineProperty(_style, position === POSITION_LEFT ? 'left' : 'right', '0px'), _defineProperty(_style, \"background\", \"rgba(19, 20, 22, 0.901961)\"), _defineProperty(_style, \"border\", 0), _defineProperty(_style, \"padding\", 0), _defineProperty(_style, \"outline\", 0), _defineProperty(_style, \"color\", \"#fff\"), _style);\n  var action = value.miniatureOpen ? closeMiniature : openMiniature;\n  return React.createElement(\"button\", {\n    role: \"button\",\n    type: \"button\",\n    style: style,\n    onClick: function onClick(event) {\n      return onChangeValue(action(value));\n    }\n  }, React.createElement(IconArrow, {\n    open: value.miniatureOpen,\n    position: position\n  }));\n}\nMiniatureToggleButton.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n  position: PropTypes.oneOf([POSITION_RIGHT, POSITION_LEFT]).isRequired\n};","map":null,"metadata":{},"sourceType":"module"}