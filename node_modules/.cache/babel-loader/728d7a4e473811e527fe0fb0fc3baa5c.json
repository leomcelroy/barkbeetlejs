{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Scrollbar = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _libs = require('../../libs');\n\nvar _resizeEvent = require('../../libs/utils/resize-event');\n\nvar _scrollbarWidth = require('./scrollbar-width');\n\nvar _Bar = require('./Bar');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Scrollbar = exports.Scrollbar = function (_Component) {\n  (0, _inherits3.default)(Scrollbar, _Component);\n\n  function Scrollbar(props) {\n    (0, _classCallCheck3.default)(this, Scrollbar);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Scrollbar.__proto__ || Object.getPrototypeOf(Scrollbar)).call(this, props));\n\n    _this.state = {\n      sizeWidth: '0',\n      sizeHeight: '0',\n      moveX: 0,\n      moveY: 0\n    };\n    _this.update = _this._update.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Scrollbar, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.native) return;\n      var rafId = requestAnimationFrame(this.update);\n\n      this.cleanRAF = function () {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      this.resizeDom = _reactDom2.default.findDOMNode(this.refs.resize);\n\n      if (!this.props.noresize) {\n        (0, _resizeEvent.addResizeListener)(this.resizeDom, this.update);\n\n        this.cleanResize = function () {\n          (0, _resizeEvent.removeResizeListener)(_this2.resizeDom, _this2.update);\n        };\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.cleanRAF();\n      this.cleanResize && this.cleanResize();\n    }\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll() {\n      var wrap = this.wrap;\n      this.setState({\n        moveY: wrap.scrollTop * 100 / wrap.clientHeight,\n        moveX: wrap.scrollLeft * 100 / wrap.clientWidth\n      });\n    }\n  }, {\n    key: '_update',\n    value: function _update() {\n      var heightPercentage = void 0,\n          widthPercentage = void 0;\n      var wrap = this.wrap;\n      if (!wrap) return;\n      heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;\n      widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;\n      var sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';\n      var sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';\n      this.setState({\n        sizeHeight: sizeHeight,\n        sizeWidth: sizeWidth\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n      /* eslint-disable */\n\n\n      var _props = this.props,\n          native = _props.native,\n          viewStyle = _props.viewStyle,\n          wrapStyle = _props.wrapStyle,\n          viewClass = _props.viewClass,\n          children = _props.children,\n          viewComponent = _props.viewComponent,\n          wrapClass = _props.wrapClass,\n          noresize = _props.noresize,\n          className = _props.className,\n          others = (0, _objectWithoutProperties3.default)(_props, ['native', 'viewStyle', 'wrapStyle', 'viewClass', 'children', 'viewComponent', 'wrapClass', 'noresize', 'className']);\n      var _state = this.state,\n          moveX = _state.moveX,\n          moveY = _state.moveY,\n          sizeWidth = _state.sizeWidth,\n          sizeHeight = _state.sizeHeight;\n      /* eslint-enable */\n\n      var style = wrapStyle;\n      var gutter = (0, _scrollbarWidth.getScrollBarWidth)();\n\n      if (gutter) {\n        var gutterWith = '-' + gutter + 'px';\n\n        if (Array.isArray(wrapStyle)) {\n          style = Object.assign.apply(null, [].concat((0, _toConsumableArray3.default)(wrapStyle), [{\n            marginRight: gutterWith,\n            marginBottom: gutterWith\n          }]));\n        } else {\n          style = Object.assign({}, wrapStyle, {\n            marginRight: gutterWith,\n            marginBottom: gutterWith\n          });\n        }\n      }\n\n      var view = _react2.default.createElement(viewComponent, {\n        className: this.classNames('el-scrollbar__view', viewClass),\n        style: viewStyle,\n        ref: 'resize'\n      }, children);\n\n      var nodes = void 0;\n\n      if (!native) {\n        var wrap = _react2.default.createElement('div', (0, _extends3.default)({}, others, {\n          ref: 'wrap',\n          key: 0,\n          style: style,\n          onScroll: this.handleScroll.bind(this),\n          className: this.classNames(wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default')\n        }), view);\n\n        nodes = [wrap, _react2.default.createElement(_Bar.Bar, {\n          key: 1,\n          move: moveX,\n          size: sizeWidth,\n          getParentWrap: function getParentWrap() {\n            return _this3.wrap;\n          }\n        }), _react2.default.createElement(_Bar.Bar, {\n          key: 2,\n          move: moveY,\n          size: sizeHeight,\n          getParentWrap: function getParentWrap() {\n            return _this3.wrap;\n          },\n          vertical: true\n        })];\n      } else {\n        nodes = [_react2.default.createElement('div', (0, _extends3.default)({}, others, {\n          key: 0,\n          ref: 'wrap',\n          className: this.classNames(wrapClass, 'el-scrollbar__wrap'),\n          style: style\n        }), view)];\n      }\n\n      return _react2.default.createElement('div', {\n        className: this.classNames('el-scrollbar', className)\n      }, nodes);\n    }\n  }, {\n    key: 'wrap',\n    get: function get() {\n      return this.refs.wrap;\n    }\n  }]);\n  return Scrollbar;\n}(_libs.Component);\n\nScrollbar.propTypes = {\n  native: _libs.PropTypes.bool,\n  wrapStyle: _libs.PropTypes.object,\n  wrapClass: _libs.PropTypes.oneOfType([_libs.PropTypes.string, _libs.PropTypes.object]),\n  viewClass: _libs.PropTypes.oneOfType([_libs.PropTypes.string, _libs.PropTypes.object]),\n  viewStyle: _libs.PropTypes.object,\n  className: _libs.PropTypes.string,\n  viewComponent: _libs.PropTypes.oneOfType([_libs.PropTypes.string, _libs.PropTypes.element]),\n  noresize: _libs.PropTypes.bool\n};\nScrollbar.defaultProps = {\n  viewComponent: 'div'\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Scrollbar, 'Scrollbar', 'src/scrollbar/Scrollbar.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}