{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderStatic = renderStatic;\nexports.renderStaticOptimized = renderStaticOptimized;\n\nvar _index = require('./index.js');\n/**** serverside stuff ****/\n// the api's copied from aphrodite, with 1 key difference\n// we include *all* the css generated by the app\n// to optimize to only include generated styles on the pages\n// use renderStaticOptimized\n\n\nfunction renderStatic(fn) {\n  var html = fn();\n\n  if (html === undefined) {\n    throw new Error('did you forget to return from renderToString?');\n  }\n\n  var rules = _index.styleSheet.rules(),\n      css = rules.map(function (r) {\n    return r.cssText;\n  }).join('');\n\n  return {\n    html: html,\n    ids: Object.keys(_index.styleSheet.inserted),\n    css: css,\n    rules: rules\n  };\n}\n\nfunction renderStaticOptimized(fn) {\n  // parse out ids from html\n  // reconstruct css/rules/cache to pass\n  var html = fn();\n\n  if (html === undefined) {\n    throw new Error('did you forget to return from renderToString?');\n  }\n\n  var o = {\n    html: html,\n    ids: [],\n    css: '',\n    rules: []\n  };\n  var regex = /css\\-([a-zA-Z0-9\\-_]+)/gm;\n  var match = void 0,\n      ids = {};\n\n  while ((match = regex.exec(html)) !== null) {\n    if (!ids[match[1] + '']) {\n      ids[match[1] + ''] = true;\n    }\n  }\n\n  o.rules = _index.styleSheet.rules().filter(function (x) {\n    var regex = /css\\-([a-zA-Z0-9\\-_]+)/gm;\n    var match = regex.exec(x.cssText);\n\n    if (match && ids[match[1] + '']) {\n      return true;\n    }\n\n    if (!match) {\n      return true;\n    }\n\n    return false;\n  });\n  o.ids = Object.keys(_index.styleSheet.inserted).filter(function (id) {\n    return !!ids[id + ''] || _index.styleSheet.registered[id].type === 'raw' || _index.styleSheet.registered[id].type === 'keyframes' || _index.styleSheet.registered[id].type === 'font-face';\n  });\n  o.css = o.rules.map(function (x) {\n    return x.cssText;\n  }).join('');\n  return o;\n}","map":null,"metadata":{},"sourceType":"script"}