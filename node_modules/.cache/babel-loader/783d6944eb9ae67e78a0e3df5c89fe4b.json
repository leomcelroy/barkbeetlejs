{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\n\nvar UnorderedList =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(UnorderedList, _PureComponent);\n\n  function UnorderedList() {\n    _classCallCheck(this, UnorderedList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UnorderedList).apply(this, arguments));\n  }\n\n  _createClass(UnorderedList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          size = _this$props.size,\n          icon = _this$props.icon,\n          iconColor = _this$props.iconColor,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"size\", \"icon\", \"iconColor\"]); // Only pass down icon-related props if specified\n\n\n      var inheritedProps = icon ? {\n        size: size,\n        icon: icon,\n        iconColor: iconColor\n      } : {\n        size: size\n      };\n      var finalChildren = React.Children.map(children, function (child) {\n        if (!React.isValidElement(child)) {\n          return child;\n        }\n\n        return React.cloneElement(child, _objectSpread({}, inheritedProps, child.props));\n      });\n      return React.createElement(Box, _extends({}, UnorderedList.styles, props), finalChildren);\n    }\n  }]);\n\n  return UnorderedList;\n}(PureComponent);\n\nUnorderedList.displayName = \"UnorderedList\";\n\n_defineProperty(UnorderedList, \"propTypes\", _objectSpread({}, Box.propTypes, {\n  /**\n   * Size of the text used in a list item.\n   * Can be: 300, 400, 500, 600.\n   */\n  size: PropTypes.oneOf([300, 400, 500, 600]).isRequired,\n\n  /**\n   * When passed, adds a icon before each list item in the list\n   * You can override this on a individual list item.\n   */\n  icon: PropTypes.string,\n\n  /**\n   * The color of the icon in each list item in the list.\n   */\n  iconColor: PropTypes.string\n}));\n\n_defineProperty(UnorderedList, \"defaultProps\", {\n  size: 400\n});\n\n_defineProperty(UnorderedList, \"styles\", {\n  is: 'ul',\n  margin: 0,\n  marginLeft: '1.1em',\n  padding: 0,\n  listStylePosition: 'inside',\n  listStyle: 'disc'\n});\n\nexport { UnorderedList as default };","map":null,"metadata":{},"sourceType":"module"}