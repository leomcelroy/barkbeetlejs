{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Rate = function (_Component) {\n  (0, _inherits3.default)(Rate, _Component);\n\n  function Rate(props) {\n    (0, _classCallCheck3.default)(this, Rate);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Rate.__proto__ || Object.getPrototypeOf(Rate)).call(this, props));\n\n    _this.state = {\n      pointerAtLeftHalf: false,\n      currentValue: _this.props.value - 1,\n      hoverIndex: -1,\n      value: -1\n    };\n    var _this$props = _this.props,\n        iconClasses = _this$props.iconClasses,\n        voidIconClass = _this$props.voidIconClass,\n        disabledVoidIconClass = _this$props.disabledVoidIconClass,\n        colors = _this$props.colors,\n        voidColor = _this$props.voidColor,\n        disabledVoidColor = _this$props.disabledVoidColor;\n    _this.classMap = {\n      lowClass: iconClasses[0],\n      mediumClass: iconClasses[1],\n      highClass: iconClasses[2],\n      voidClass: voidIconClass,\n      disabledVoidClass: disabledVoidIconClass\n    };\n    _this.colorMap = {\n      lowColor: colors[0],\n      mediumColor: colors[1],\n      highColor: colors[2],\n      voidColor: voidColor,\n      disabledVoidColor: disabledVoidColor\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Rate, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.value && nextProps.value !== this.props.value) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: 'hasClass',\n    value: function hasClass(target, classname) {\n      return target.classList.contains(classname);\n    }\n  }, {\n    key: 'setCurrentValue',\n    value: function setCurrentValue(e, value) {\n      var _props = this.props,\n          disabled = _props.disabled,\n          allowHalf = _props.allowHalf;\n      var _state = this.state,\n          pointerAtLeftHalf = _state.pointerAtLeftHalf,\n          currentValue = _state.currentValue,\n          hoverIndex = _state.hoverIndex;\n\n      if (disabled) {\n        return;\n      }\n      /* istanbul ignore if */\n\n\n      if (allowHalf) {\n        e.persist();\n        var target = e.target;\n\n        if (this.hasClass(target, 'el-rate__item')) {\n          target = target.querySelector('.el-rate__icon');\n        }\n\n        if (this.hasClass(target, 'el-rate__decimal')) {\n          target = target.parentNode;\n        }\n\n        this.setState({\n          pointerAtLeftHalf: (e.clientX - target.getBoundingClientRect().left) * 2 <= target.clientWidth,\n          currentValue: (e.clientX - target.getBoundingClientRect().left) * 2 <= target.clientWidth ? value - 0.5 : value\n        });\n      } else {\n        this.setState({\n          currentValue: value\n        });\n      }\n\n      this.setState({\n        hoverIndex: value\n      });\n    }\n  }, {\n    key: 'getValueFromMap',\n    value: function getValueFromMap(value, map) {\n      var _props2 = this.props,\n          lowThreshold = _props2.lowThreshold,\n          highThreshold = _props2.highThreshold;\n      var result = '';\n\n      if (value <= lowThreshold - 1) {\n        result = map.lowColor || map.lowClass;\n      } else if (value >= highThreshold - 1) {\n        result = map.highColor || map.highClass;\n      } else {\n        result = map.mediumColor || map.mediumClass;\n      }\n\n      return result;\n    }\n  }, {\n    key: 'getIconStyle',\n    value: function getIconStyle(item) {\n      var disabled = this.props.disabled;\n      var currentValue = this.state.currentValue;\n      var voidColor = disabled ? this.colorMap.disabledVoidColor : this.colorMap.voidColor;\n      return {\n        color: item <= currentValue ? this.activeColor() : voidColor\n      };\n    }\n  }, {\n    key: 'showDecimalIcon',\n    value: function showDecimalIcon(item) {\n      var _props3 = this.props,\n          disabled = _props3.disabled,\n          allowHalf = _props3.allowHalf,\n          value = _props3.value;\n      var _state2 = this.state,\n          pointerAtLeftHalf = _state2.pointerAtLeftHalf,\n          currentValue = _state2.currentValue;\n      var showWhenDisabled = disabled && this.valueDecimal() > 0 && item - 1 < value - 1 && item > value - 1;\n      /* istanbul ignore next */\n\n      var showWhenAllowHalf = allowHalf && pointerAtLeftHalf && (item - 0.5).toFixed(1) === currentValue.toFixed(1);\n      return showWhenDisabled || showWhenAllowHalf;\n    }\n  }, {\n    key: 'classes',\n    value: function classes() {\n      var currentValue = this.state.currentValue;\n      var _props4 = this.props,\n          allowHalf = _props4.allowHalf,\n          max = _props4.max;\n      var result = [];\n      var i = 0;\n      var threshold = currentValue;\n\n      if (allowHalf && currentValue !== Math.floor(currentValue)) {\n        threshold;\n      }\n\n      for (; i <= threshold; i++) {\n        result.push(this.activeClass());\n      }\n\n      for (; i < max; i++) {\n        result.push(this.voidClass());\n      }\n\n      return result;\n    }\n  }, {\n    key: 'valueDecimal',\n    value: function valueDecimal() {\n      var value = this.props.value;\n      return value * 100 - Math.floor(value) * 100;\n    }\n  }, {\n    key: 'decimalIconClass',\n    value: function decimalIconClass() {\n      return this.getValueFromMap(this.props.value, this.classMap);\n    }\n  }, {\n    key: 'voidClass',\n    value: function voidClass() {\n      return this.props.disabled ? this.classMap.disabledVoidClass : this.classMap.voidClass;\n    }\n  }, {\n    key: 'activeClass',\n    value: function activeClass() {\n      return this.getValueFromMap(this.state.currentValue, this.classMap);\n    }\n  }, {\n    key: 'activeColor',\n    value: function activeColor() {\n      return this.getValueFromMap(this.state.currentValue, this.colorMap);\n    }\n  }, {\n    key: 'selectValue',\n    value: function selectValue(value) {\n      var _props5 = this.props,\n          disabled = _props5.disabled,\n          allowHalf = _props5.allowHalf,\n          onChange = _props5.onChange;\n      var _state3 = this.state,\n          pointerAtLeftHalf = _state3.pointerAtLeftHalf,\n          currentValue = _state3.currentValue;\n\n      if (disabled) {\n        return;\n      }\n\n      if (allowHalf && pointerAtLeftHalf) {\n        // this.$emit('input', this.currentValue);\n        this.setState({\n          value: currentValue\n        }, function () {\n          onChange && onChange(currentValue + 1);\n        });\n      } else {\n        this.setState({\n          currentValue: value,\n          value: value\n        }, function () {\n          onChange && onChange(value + 1);\n        });\n      }\n    }\n  }, {\n    key: 'decimalStyle',\n    value: function decimalStyle() {\n      var _props6 = this.props,\n          disabled = _props6.disabled,\n          allowHalf = _props6.allowHalf;\n      var width = '';\n\n      if (disabled) {\n        width = (this.valueDecimal() < 50 ? 0 : 50) + '%';\n      }\n\n      if (allowHalf) {\n        width = '50%';\n      }\n\n      return {\n        color: this.activeColor(),\n        width: width\n      };\n    }\n  }, {\n    key: 'showText',\n    value: function showText() {\n      var _props7 = this.props,\n          disabled = _props7.disabled,\n          texts = _props7.texts,\n          textTemplate = _props7.textTemplate,\n          value = _props7.value;\n      var currentValue = this.state.currentValue;\n      var result = '';\n\n      if (disabled) {\n        result = textTemplate.replace(/\\{\\s*value\\s*\\}/, value);\n      } else {\n        result = texts[Math.ceil(currentValue)];\n      }\n\n      return result;\n    }\n  }, {\n    key: 'resetCurrentValue',\n    value: function resetCurrentValue() {\n      var _props8 = this.props,\n          disabled = _props8.disabled,\n          allowHalf = _props8.allowHalf;\n      var value = this.state.value;\n\n      if (disabled) {\n        return;\n      }\n\n      if (allowHalf) {\n        this.setState({\n          pointerAtLeftHalf: value !== Math.floor(value)\n        });\n      }\n\n      this.setState({\n        currentValue: value,\n        hoverIndex: -1\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props9 = this.props,\n          showText = _props9.showText,\n          textColor = _props9.textColor,\n          disabled = _props9.disabled,\n          max = _props9.max;\n      var hoverIndex = this.state.hoverIndex;\n      return _react2.default.createElement('div', {\n        style: this.style(),\n        className: this.className('el-rate')\n      }, [].concat((0, _toConsumableArray3.default)(Array(max))).map(function (v, k) {\n        return _react2.default.createElement('span', {\n          className: 'el-rate__item',\n          style: {\n            cursor: disabled ? 'auto' : 'pointer'\n          },\n          onClick: function onClick() {\n            return _this2.selectValue(k);\n          },\n          onMouseMove: function onMouseMove(e) {\n            return _this2.setCurrentValue(e, k);\n          },\n          onMouseLeave: function onMouseLeave() {\n            return _this2.resetCurrentValue();\n          },\n          key: k\n        }, _react2.default.createElement('i', {\n          style: _this2.getIconStyle(k),\n          className: hoverIndex === k ? 'hover el-rate__icon ' + _this2.classes()[k] : 'el-rate__icon ' + _this2.classes()[k]\n        }, _this2.showDecimalIcon(k) ? _react2.default.createElement('i', {\n          style: _this2.decimalStyle(),\n          className: 'el-rate__decimal ' + _this2.decimalIconClass()\n        }) : null));\n      }), showText ? _react2.default.createElement('span', {\n        className: 'el-rate__text',\n        style: {\n          color: textColor\n        }\n      }, this.showText()) : null);\n    }\n  }]);\n  return Rate;\n}(_libs.Component);\n\nvar _default = Rate;\nexports.default = _default;\nRate.propTypes = {\n  colors: _libs.PropTypes.array,\n  texts: _libs.PropTypes.array,\n  showText: _libs.PropTypes.bool,\n  textColor: _libs.PropTypes.string,\n  disabled: _libs.PropTypes.bool,\n  value: _libs.PropTypes.number,\n  onChange: _libs.PropTypes.func,\n  textTemplate: _libs.PropTypes.string,\n  lowThreshold: _libs.PropTypes.number,\n  highThreshold: _libs.PropTypes.number,\n  max: _libs.PropTypes.number,\n  voidColor: _libs.PropTypes.string,\n  disabledVoidColor: _libs.PropTypes.string,\n  iconClasses: _libs.PropTypes.array,\n  voidIconClass: _libs.PropTypes.string,\n  disabledVoidIconClass: _libs.PropTypes.string,\n  allowHalf: _libs.PropTypes.bool\n};\nRate.defaultProps = {\n  colors: ['#F7BA2A', '#F7BA2A', '#F7BA2A'],\n  // icon 的颜色数组，共有 3 个元素，为 3 个分段所对应的颜色\n  texts: ['极差', '失望', '一般', '满意', '惊喜'],\n  // 辅助文字数组\n  showText: false,\n  // 是否显示辅助文字\n  textColor: '#1F2D3D',\n  //   辅助文字的颜色\n  disabled: false,\n  // 是否为只读\n  value: 0,\n  // 星级\n  lowThreshold: 2,\n  // 低分和中等分数的界限值，值本身被划分在低分中\n  highThreshold: 4,\n  // 高分和中等分数的界限值，值本身被划分在高分中\n  max: 5,\n  voidColor: '#C6D1DE',\n  disabledVoidColor: '#EFF2F7',\n  iconClasses: ['el-icon-star-on', 'el-icon-star-on', 'el-icon-star-on'],\n  voidIconClass: 'el-icon-star-off',\n  disabledVoidIconClass: 'el-icon-star-on',\n  allowHalf: false,\n  textTemplate: '{value}'\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Rate, 'Rate', 'src/rate/Rate.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/rate/Rate.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}