{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { HOTKEYS_HOTKEY_CHILDREN } from \"../../common/errors\";\nimport { isElementOfType } from \"../../common/utils\";\nimport { H4 } from \"../html/html\";\nimport { Hotkey } from \"./hotkey\";\nexport { Hotkey } from \"./hotkey\";\nexport { KeyCombo } from \"./keyCombo\";\nexport { HotkeysTarget } from \"./hotkeysTarget\";\nexport { comboMatches, getKeyCombo, getKeyComboString, parseKeyCombo } from \"./hotkeyParser\";\nexport { hideHotkeysDialog, setHotkeysDialogProps } from \"./hotkeysDialog\";\n\nvar Hotkeys =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Hotkeys, _super);\n\n  function Hotkeys() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Hotkeys.prototype.render = function () {\n    var hotkeys = React.Children.map(this.props.children, function (child) {\n      return child.props;\n    }); // sort by group label alphabetically, prioritize globals\n\n    hotkeys.sort(function (a, b) {\n      if (a.global === b.global) {\n        return a.group.localeCompare(b.group);\n      }\n\n      return a.global ? -1 : 1;\n    });\n    var lastGroup = null;\n    var elems = [];\n\n    for (var _i = 0, hotkeys_1 = hotkeys; _i < hotkeys_1.length; _i++) {\n      var hotkey = hotkeys_1[_i];\n      var groupLabel = hotkey.group;\n\n      if (groupLabel !== lastGroup) {\n        elems.push(React.createElement(H4, {\n          key: \"group-\" + elems.length\n        }, groupLabel));\n        lastGroup = groupLabel;\n      }\n\n      elems.push(React.createElement(Hotkey, tslib_1.__assign({\n        key: elems.length\n      }, hotkey)));\n    }\n\n    var rootClasses = classNames(Classes.HOTKEY_COLUMN, this.props.className);\n    return React.createElement(\"div\", {\n      className: rootClasses\n    }, elems);\n  };\n\n  Hotkeys.prototype.validateProps = function (props) {\n    React.Children.forEach(props.children, function (child) {\n      if (!isElementOfType(child, Hotkey)) {\n        throw new Error(HOTKEYS_HOTKEY_CHILDREN);\n      }\n    });\n  };\n\n  Hotkeys.displayName = DISPLAYNAME_PREFIX + \".Hotkeys\";\n  Hotkeys.defaultProps = {\n    tabIndex: 0\n  };\n  return Hotkeys;\n}(AbstractPureComponent);\n\nexport { Hotkeys };","map":null,"metadata":{},"sourceType":"module"}