{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../typography';\nimport { withTheme } from '../../theme';\nimport warning from '../../lib/warning';\n\nvar Tab =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Tab, _PureComponent);\n\n  function Tab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      if (typeof _this.props.onClick === 'function') {\n        _this.props.onClick(e);\n      }\n\n      _this.props.onSelect();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyPress\", function (e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        _this.props.onSelect();\n\n        e.preventDefault();\n      }\n\n      _this.props.onKeyPress(e);\n    });\n\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          is = _this$props.is,\n          height = _this$props.height,\n          onSelect = _this$props.onSelect,\n          isSelected = _this$props.isSelected,\n          appearance = _this$props.appearance,\n          disabled = _this$props.disabled,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"is\", \"height\", \"onSelect\", \"isSelected\", \"appearance\", \"disabled\"]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(typeof this.props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.');\n      }\n\n      var textSize = theme.getTextSizeForControlHeight(height);\n      var elementBasedProps;\n\n      if (disabled) {\n        elementBasedProps = {\n          'aria-disabled': true\n        };\n      }\n\n      if (is === 'a') {\n        // Use aria-current when it's a link\n        // https://tink.uk/using-the-aria-current-attribute/\n        elementBasedProps = isSelected ? _objectSpread({}, elementBasedProps, {\n          'aria-current': 'page'\n        }) : {};\n      } else {\n        // Use a role=\"tablist\" around the tabs\n        // Also pass down a aria-controls=\"panelId\"\n        // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n        elementBasedProps = _objectSpread({}, elementBasedProps, {\n          'aria-selected': isSelected,\n          role: 'tab'\n        });\n      }\n\n      return React.createElement(Text, _extends({\n        className: theme.getTabClassName(appearance),\n        is: is,\n        size: textSize,\n        height: height\n      }, Tab.styles, props, {\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress\n      }, elementBasedProps));\n    }\n  }]);\n\n  return Tab;\n}(PureComponent);\n\nTab.displayName = \"Tab\";\n\n_defineProperty(Tab, \"propTypes\", _objectSpread({}, Text.propTypes, {\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Tab, \"defaultProps\", {\n  onSelect: function onSelect() {},\n  onKeyPress: function onKeyPress() {},\n  is: 'span',\n  height: 28,\n  disabled: false\n});\n\n_defineProperty(Tab, \"styles\", {\n  display: 'inline-flex',\n  fontWeight: 500,\n  paddingX: 8,\n  marginX: 4,\n  borderRadius: 3,\n  lineHeight: '28px',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  tabIndex: 0\n});\n\nexport default withTheme(Tab);","map":null,"metadata":{},"sourceType":"module"}