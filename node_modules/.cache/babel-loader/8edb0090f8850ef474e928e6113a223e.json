{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixer;\n\nvar _static = require('inline-style-prefixer/static');\n\nvar _static2 = _interopRequireDefault(_static);\n\nvar _decamelize = require('./utils/decamelize');\n\nvar _decamelize2 = _interopRequireDefault(_decamelize);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar prefixRegex = /^(Webkit|ms|Moz|O)/;\n/**\n * Adds vendor prefixes to properties and values.\n */\n\nfunction prefixer(property, value) {\n  var rules = (0, _static2.default)(_defineProperty({}, property, value));\n  var rulesArray = [];\n  var propertyNames = Object.keys(rules); // Convert rules object to an array\n\n  for (var i = 0; i < propertyNames.length; i++) {\n    var propertyName = propertyNames[i]; // Add a dash in front of the prefixes\n\n    var prefixedProp = propertyName.match(prefixRegex) ? '-' + propertyName : propertyName;\n    var prop = (0, _decamelize2.default)(prefixedProp);\n    var values = rules[propertyName]; // Handle prefixed values\n\n    if (Array.isArray(values)) {\n      for (var _i = 0; _i < values.length; _i++) {\n        rulesArray.push({\n          property: prop,\n          value: values[_i]\n        });\n      }\n    } else {\n      rulesArray.push({\n        property: prop,\n        value: values\n      });\n    }\n  }\n\n  return rulesArray;\n}","map":null,"metadata":{},"sourceType":"script"}