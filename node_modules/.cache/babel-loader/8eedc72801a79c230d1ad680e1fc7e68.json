{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { Workplane } from './Workplane.js';\nimport Button from '@material-ui/core/Button';\nimport { kk } from './joints/koshikake.js';\nimport { profile } from './toolpaths/profile.js';\nimport { pocket } from './toolpaths/pocket.js'; //import {replaceWithPath} from './svg_to_makerjs.js';\n\nvar replaceWithPath = function replaceWithPath(child) {\n  //why cant I put this in a different file\n  if (child.name === \"g\") {\n    return child.children.map(function (grandchild) {\n      return replaceWithPath(grandchild);\n    });\n  }\n\n  if (child.name === \"rectangle\") {\n    console.log(child);\n    var temp = s2p.rect({\n      x: 0,\n      y: 120,\n      width: 200,\n      height: 200,\n      rx: 20,\n      ry: 20\n    });\n    return mjs.importer.fromSVGPathData(temp);\n  }\n\n  if (child.name === \"path\") {\n    var makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n    return makerjsPath;\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      shapes: {},\n      toolpaths: [],\n      selected: [],\n      material: \"wood\",\n      thickness: 34,\n      units: \"mm\",\n      zero: \"bottomleft\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      var test = kk; //test = mjs.model.originate(test);\n\n      var testProfile = test.models.profile;\n      var testPocket = test.models.pocket;\n      var profileCut = profile(testProfile, params);\n      var pocketCut = pocket(testPocket, params); // let drawings = [test, profile(test)];\n      // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n      //testing if internal outlines will make acceptable pocket paths, appears so\n      //let p2 = pocket(testPocket, params).drawing;\n\n      var t1 = new mjs.models.Oval(20, 20);\n      var t2 = mjs.model.move(new mjs.models.Oval(20, 20), [15, 0]);\n      var test0 = mjs.model.combineUnion(t1, t2);\n      var test1 = mjs.model.outline(test0, 5, 1, true); // console.log(test0)\n      // test0 = mjs.model.move(test0, [50, 0]);\n\n      var model = {\n        models: {\n          shapes: {\n            models: {\n              profileSource: testProfile,\n              pocketSource: testPocket\n            }\n          },\n          cuts: {\n            models: {\n              profileCut: profileCut.drawing,\n              pocketCut: pocketCut.drawing\n            } //pocketCut2: pocket(p2, params).drawing,\n            // test0,\n            // test1,\n\n          }\n        }\n      };\n      model.models.cuts.layer = \"red\"; // model = mjs.model.originate(model);\n      // model = mjs.model.zero(model);\n\n      model['paths'] = {\n        origin: new mjs.paths.Circle(params.compensatedRadius)\n      };\n      var modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n      var viewModel = mjs.exporter.toSVG(modelToView, {\n        useSvgPathOnly: false,\n        strokeWidth: \".5mm\" // layerOptions:{\n        //   cuts: {\n        //     stroke: \"red\"\n        //   }\n        // },\n\n      }); //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n\n      viewModel = [viewModel];\n      return React.createElement(\"div\", {\n        onMouseDown: function onMouseDown(e) {\n          return console.log(\"div target\", e.target.getAttribute(\"data-route\"));\n        },\n        style: {\n          margin: 0,\n          height: \"100%\",\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref) {\n          return _this2.upload = _ref;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: function onChange(e) {\n          var files = e.target.files;\n          var file = files[0];\n          var reader = new FileReader();\n\n          reader.onload = function (event) {\n            var text = event.target.result;\n            svgson.parse(text).then(function (json) {\n              var svg = json.children.map(function (child) {\n                return replaceWithPath(child);\n              });\n              svg = svg.flat(1); //TODO: what does the argument do again?\n              //TODO: update state to have makerjs models\n              //console.log(svg);\n            });\n          };\n\n          reader.readAsText(file);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Upload SVG\"), \"\\xA0\", React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          utils.download(profileCut.filename, profileCut.gcode);\n          utils.download(pocketCut.filename, pocketCut.gcode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"download gcode\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js"],"names":["React","Component","utils","mjs","params","s2p","svgson","Workplane","Button","kk","profile","pocket","replaceWithPath","child","name","children","map","grandchild","console","log","temp","rect","x","y","width","height","rx","ry","importer","fromSVGPathData","makerjsPath","attributes","d","App","state","shapes","toolpaths","selected","material","thickness","units","zero","test","testProfile","models","testPocket","profileCut","pocketCut","t1","Oval","t2","model","move","test0","combineUnion","test1","outline","profileSource","pocketSource","cuts","drawing","layer","origin","paths","Circle","compensatedRadius","modelToView","scale","deepcopy","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","e","target","getAttribute","margin","overflow","ref","upload","display","files","file","reader","FileReader","onload","event","text","result","parse","then","json","svg","flat","readAsText","click","download","filename","gcode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport {Workplane} from './Workplane.js'\nimport Button from '@material-ui/core/Button';\nimport {kk} from './joints/koshikake.js';\nimport {profile} from './toolpaths/profile.js';\nimport {pocket} from './toolpaths/pocket.js';\n//import {replaceWithPath} from './svg_to_makerjs.js';\n\nconst replaceWithPath = (child) => { //why cant I put this in a different file\n  if (child.name === \"g\") {\n    return child.children.map(grandchild => replaceWithPath(grandchild));\n  }\n\n  if (child.name === \"rectangle\") {\n    console.log(child);\n    let temp = s2p.rect({x: 0, y: 120, width: 200, height: 200, rx: 20, ry: 20});\n    return mjs.importer.fromSVGPathData(temp);\n  }\n\n  if (child.name === \"path\") {\n    let makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n    return makerjsPath;\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      shapes: {},\n      toolpaths:[],\n      selected: [],\n      material: \"wood\",\n      thickness: 34,\n      units: \"mm\",\n      zero: \"bottomleft\"\n    }\n  };\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    let test = kk;\n    //test = mjs.model.originate(test);\n    let testProfile = test.models.profile;\n    let testPocket = test.models.pocket;\n    let profileCut = profile(testProfile, params);\n    let pocketCut = pocket(testPocket, params);\n\n    // let drawings = [test, profile(test)];\n    // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n\n    //testing if internal outlines will make acceptable pocket paths, appears so\n    //let p2 = pocket(testPocket, params).drawing;\n    let t1 = new mjs.models.Oval(20,20)\n    let t2 = mjs.model.move(new mjs.models.Oval(20,20), [15,0])\n    let test0 = mjs.model.combineUnion(t1, t2);\n    let test1 = mjs.model.outline(test0, 5, 1, true)\n    // console.log(test0)\n    // test0 = mjs.model.move(test0, [50, 0]);\n\n    let model = {\n      models: {\n        shapes: {\n          models: {\n            profileSource: testProfile,\n            pocketSource: testPocket,\n          }\n        },\n        cuts: {\n          models: {\n            profileCut: profileCut.drawing,\n            pocketCut: pocketCut.drawing,\n          }\n        }\n        //pocketCut2: pocket(p2, params).drawing,\n        // test0,\n        // test1,\n      }\n    }\n\n    model.models.cuts.layer = \"red\";\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n    model['paths'] = {\n      origin: new mjs.paths.Circle(params.compensatedRadius)\n    }\n\n    let modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n    let viewModel = mjs.exporter.toSVG(modelToView, {\n      useSvgPathOnly:false,\n      strokeWidth:\".5mm\",\n      // layerOptions:{\n      //   cuts: {\n      //     stroke: \"red\"\n      //   }\n      // },\n    });\n    //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n    viewModel = [viewModel];\n\n    return (\n      <div\n        onMouseDown={(e) => console.log(\"div target\", e.target.getAttribute(\"data-route\"))}\n        style={{\n          margin: 0,\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}>\n\n          <Workplane groups={viewModel}/>\n\n        <div>\n          <input\n            id=\"myInput\"\n            type=\"file\"\n            ref={(ref) => this.upload = ref}\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              let files = e.target.files;\n              let file = files[0];\n\n              var reader = new FileReader();\n\n              reader.onload = (event) => {\n                let text = event.target.result;\n\n                svgson.parse(text).then((json) => {\n                  let svg = json.children.map(child => {\n                    return replaceWithPath(child);\n                  });\n\n                  svg = svg.flat(1); //TODO: what does the argument do again?\n\n                  //TODO: update state to have makerjs models\n                  //console.log(svg);\n                });\n              };\n\n              reader.readAsText(file);\n            }}/>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => this.upload.click()}\n            >\n              Upload SVG\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              utils.download(profileCut.filename, profileCut.gcode);\n              utils.download(pocketCut.filename, pocketCut.gcode);\n            }}\n            >\n              download gcode\n          </Button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}