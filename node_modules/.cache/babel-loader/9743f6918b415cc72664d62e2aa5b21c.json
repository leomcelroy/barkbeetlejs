{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport { Icon } from '../../icon';\nimport { withTheme } from '../../theme';\nimport safeInvoke from '../../lib/safe-invoke';\nimport warning from '../../lib/warning';\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MenuItem, _React$PureComponent);\n\n  function MenuItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (event) {\n      _this.props.onSelect(event);\n      /* eslint-disable react/prop-types */\n\n\n      safeInvoke(_this.props.onClick, event);\n      /* eslint-enable react/prop-types */\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyPress\", function (event) {\n      if (event.key === 'Enter' || event.key === ' ') {\n        _this.props.onSelect(event);\n\n        event.preventDefault();\n      }\n      /* eslint-disable react/prop-types */\n\n\n      safeInvoke(_this.props.onKeyPress, event);\n      /* eslint-enable react/prop-types */\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          is = _this$props.is,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          appearance = _this$props.appearance,\n          secondaryText = _this$props.secondaryText,\n          intent = _this$props.intent,\n          icon = _this$props.icon,\n          passthroughProps = _objectWithoutProperties(_this$props, [\"is\", \"children\", \"theme\", \"appearance\", \"secondaryText\", \"intent\", \"icon\"]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(typeof this.props.onClick === 'function', '<Menu.Item> expects `onSelect` prop, but you passed `onClick`.');\n      }\n\n      var themedClassName = theme.getMenuItemClassName(appearance, 'none');\n      return React.createElement(Pane, _extends({\n        is: is,\n        role: \"menuitem\",\n        className: themedClassName,\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress,\n        height: icon ? 40 : 32,\n        tabIndex: 0,\n        \"data-isselectable\": \"true\",\n        display: \"flex\",\n        alignItems: \"center\"\n      }, passthroughProps), icon && React.createElement(Icon, {\n        color: intent === 'none' ? 'default' : intent,\n        icon: icon,\n        marginLeft: 16,\n        marginRight: -4,\n        size: 16,\n        flexShrink: 0\n      }), React.createElement(Text, {\n        color: intent,\n        marginLeft: 16,\n        marginRight: 16,\n        flex: 1\n      }, children), secondaryText && React.createElement(Text, {\n        marginRight: 16,\n        color: \"muted\"\n      }, secondaryText));\n    }\n  }]);\n\n  return MenuItem;\n}(React.PureComponent);\n\nMenuItem.displayName = \"MenuItem\";\n\n_defineProperty(MenuItem, \"propTypes\", {\n  /**\n   * Element type to use for the menu item.\n   * For example: `<MenuItem is={ReactRouterLink}>...</MenuItem>`\n   */\n  is: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * The icon before the label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Secondary text shown on the right.\n   */\n  secondaryText: PropTypes.node,\n\n  /**\n   * The default theme only supports one default appearance.\n   */\n  appearance: PropTypes.string.isRequired,\n\n  /**\n   * The intent of the menu item.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n});\n\n_defineProperty(MenuItem, \"defaultProps\", {\n  is: 'div',\n  intent: 'none',\n  appearance: 'default',\n  onSelect: function onSelect() {}\n});\n\nexport default withTheme(MenuItem);","map":null,"metadata":{},"sourceType":"module"}