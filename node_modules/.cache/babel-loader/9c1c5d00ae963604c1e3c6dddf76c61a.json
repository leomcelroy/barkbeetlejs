{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { Text } from '../../typography';\nimport { withTheme } from '../../theme';\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n  }));\n};\n\nCheckIcon.displayName = \"CheckIcon\";\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar MinusIcon = function MinusIcon(_ref2) {\n  var _ref2$fill = _ref2.fill,\n      fill = _ref2$fill === void 0 ? 'currentColor' : _ref2$fill,\n      props = _objectWithoutProperties(_ref2, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n  }));\n};\n\nMinusIcon.displayName = \"MinusIcon\";\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setIndeterminate\", function (el) {\n      if (!el) return;\n      el.indeterminate = _this.props.indeterminate;\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          id = _this$props.id,\n          name = _this$props.name,\n          label = _this$props.label,\n          appearance = _this$props.appearance,\n          disabled = _this$props.disabled,\n          isInvalid = _this$props.isInvalid,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange,\n          value = _this$props.value,\n          indeterminate = _this$props.indeterminate,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"id\", \"name\", \"label\", \"appearance\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"indeterminate\"]);\n\n      var themedClassName = theme.getCheckboxClassName(appearance);\n      return React.createElement(Box, _extends({\n        is: \"label\",\n        cursor: disabled ? 'not-allowed' : 'pointer',\n        position: \"relative\",\n        display: \"flex\",\n        marginY: 16\n      }, props), React.createElement(Box, {\n        className: themedClassName,\n        is: \"input\",\n        id: id,\n        type: \"checkbox\",\n        name: name,\n        value: value,\n        checked: checked || indeterminate,\n        onChange: onChange,\n        disabled: disabled,\n        \"aria-invalid\": isInvalid,\n        innerRef: this.setIndeterminate\n      }), React.createElement(Box, {\n        boxSizing: \"border-box\",\n        borderRadius: 3,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: 16,\n        height: 16\n      }, indeterminate ? React.createElement(MinusIcon, null) : React.createElement(CheckIcon, null)), label && React.createElement(Text, {\n        marginLeft: 8,\n        size: 300,\n        color: disabled ? 'muted' : 'default'\n      }, label));\n    }\n  }]);\n\n  return Checkbox;\n}(PureComponent);\n\nCheckbox.displayName = \"Checkbox\";\n\n_defineProperty(Checkbox, \"propTypes\", _objectSpread({}, spacing.propTypes, position.propTypes, layout.propTypes, dimensions.propTypes, {\n  /**\n   * The id attribute of the checkbox.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The id attribute of the radio.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the radio.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The checked attribute of the radio.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * State in addition to \"checked\" and \"unchecked\".\n   * When true, the radio displays a \"minus\" icon.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the radio is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  checked: false,\n  indeterminate: false,\n  onChange: function onChange() {},\n  appearance: 'default'\n});\n\nexport default withTheme(Checkbox);","map":null,"metadata":{},"sourceType":"module"}