{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/Workplane.js\";\nimport React, { Component } from 'react';\n\nvar Workplane =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Workplane, _Component);\n\n  function Workplane() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Workplane);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Workplane)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      width: 500,\n      height: 500,\n      v0: 0,\n      v1: 0,\n      v2: 500,\n      v3: 500\n    };\n    return _this;\n  }\n\n  _createClass(Workplane, [{\n    key: \"wheel\",\n    value: function wheel(e) {\n      e.preventDefault(); // let loc = utils.getSVGpoint(e, this.state.v0, this.state.v1, this.state.v2, this.state.v3 ,this.state.width, this.state.height);\n\n      if (e.ctrlKey) {\n        var zoomRate = 10; //zooms to center now\n\n        if (e.deltaY < 0) {\n          //console.log('zoom in');\n          var v2 = e.deltaY * zoomRate + this.state.v2 > 1 ? e.deltaY * zoomRate + this.state.v2 : this.state.v2;\n          var v3 = e.deltaY * zoomRate + this.state.v3 > 1 ? e.deltaY * zoomRate + this.state.v3 : this.state.v3;\n          var v0 = this.state.v0 - e.deltaY * zoomRate / 2;\n          var v1 = this.state.v1 - e.deltaY * zoomRate / 2; // console.log(\"e.deltaY * zoomRate\", e.deltaY * zoomRate)\n          // console.log(\"v0\", e.deltaY * zoomRate, v0)\n          // console.log(\"v1\", this.state.v1, v1)\n\n          this.setState({\n            v0: v0,\n            v1: v1,\n            v2: v2,\n            v3: v3\n          });\n        }\n\n        if (e.deltaY > 0) {\n          //console.log('zoom out');\n          var _v = e.deltaY * zoomRate + this.state.v2;\n\n          var _v2 = e.deltaY * zoomRate + this.state.v3;\n\n          var _v3 = this.state.v0 - e.deltaY * zoomRate / 2;\n\n          var _v4 = this.state.v1 - e.deltaY * zoomRate / 2;\n\n          this.setState({\n            v0: _v3,\n            v1: _v4,\n            v2: _v,\n            v3: _v2\n          });\n        }\n\n        return;\n      }\n\n      if (e.deltaY < 0) {\n        //console.log('scrolling up');\n        var _v5 = this.state.v1 + e.deltaY;\n\n        this.setState({\n          v1: _v5\n        });\n      }\n\n      if (e.deltaY > 0) {\n        //console.log('scrolling down');\n        var _v6 = this.state.v1 + e.deltaY;\n\n        this.setState({\n          v1: _v6\n        });\n      }\n\n      if (e.deltaX < 0) {\n        //console.log('scrolling left');\n        var _v7 = this.state.v0 + e.deltaX;\n\n        this.setState({\n          v0: _v7\n        });\n      }\n\n      if (e.deltaX > 0) {\n        //console.log('scrolling right');\n        var _v8 = this.state.v0 + e.deltaX;\n\n        this.setState({\n          v0: _v8\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"svg\", {\n        width: this.state.width,\n        height: this.state.height,\n        viewBox: \"\".concat(this.state.v0, \" \").concat(this.state.v1, \" \").concat(this.state.v2, \" \").concat(this.state.v3),\n        xmlns: \"http://www.w3.org/2000/svg\",\n        onWheel: function onWheel(e) {\n          return _this2.wheel(e);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this2.mouseDown(e);\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this2.mouseMove(e);\n        },\n        onMouseUp: function onMouseUp(e) {\n          return _this2.mouseUp(e);\n        },\n        style: {\n          border: \"1px solid #cccccc\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.props.groups);\n    }\n  }]);\n\n  return Workplane;\n}(Component);\n\nexport { Workplane }; // import React, { Component, useState} from 'react';\n// import * as utils from './utils.js';\n//\n//\n// const Workplane = ({groups}) => {\n//\n//   const [state, setState] = useState({\n//       width: 500,\n//       height: 500,\n//     });\n//\n//   const [v0, setV0] = useState(0);\n//   const [v1, setV1] = useState(0);\n//   const [v2, setV2] = useState(500);\n//   const [v3, setV3] = useState(500);\n//\n//   const wheel = (e) => {\n//     e.preventDefault();\n//     let loc = utils.getSVGpoint(e, v0, v1, v2, v3 ,state.width, state.height);\n//\n//     if (e.ctrlKey) {\n//\n//       let zoomRate = 10;\n//       //zooms to center now\n//\n//       if (e.deltaY < 0) {\n//         //console.log('zoom in');\n//\n//         let v2Temp = (e.deltaY * zoomRate + v2 > 1) ? e.deltaY * zoomRate + v2 : v2;\n//         let v3Temp = (e.deltaY * zoomRate + v3 > 1) ? e.deltaY * zoomRate + v3 : v3;\n//\n//         let v0Temp = v0 - e.deltaY * zoomRate/2;\n//         let v1Temp = v1 - e.deltaY * zoomRate/2;\n//         // console.log(\"e.deltaY * zoomRate\", e.deltaY * zoomRate)\n//         // console.log(\"v0\", e.deltaY * zoomRate, v0)\n//         // console.log(\"v1\", state.v1, v1)\n//\n//         setV0(v0Temp);\n//         setV1(v1Temp);\n//         setV2(v2Temp);\n//         setV3(v3Temp);\n//       }\n//\n//       if (e.deltaY > 0) {\n//         //console.log('zoom out');\n//\n//         let v2Temp = e.deltaY * zoomRate + v2;\n//         let v3Temp = e.deltaY * zoomRate + v3;\n//\n//         let v0Temp = v0 - e.deltaY * zoomRate/2;\n//         let v1Temp = v1 - e.deltaY * zoomRate/2;\n//\n//         setV0(v0Temp);\n//         setV1(v1Temp);\n//         setV2(v2Temp);\n//         setV3(v3Temp);\n//       }\n//\n//       return\n//     }\n//\n//     if (e.deltaY < 0) {\n//       console.log('scrolling up');\n//\n//       let v1Temp = v1 + e.deltaY;\n//       setV1(v1Temp);\n//     }\n//     if (e.deltaY > 0) {\n//       console.log('scrolling down');\n//\n//       let v1Temp = v1 + e.deltaY;\n//       setV1(v1Temp);\n//     }\n//     if (e.deltaX < 0) {\n//       console.log('scrolling left');\n//\n//       let v0Temp = v0 + e.deltaX;\n//       setV0(v0Temp);\n//     }\n//     if (e.deltaX > 0) {\n//       console.log('scrolling right');\n//\n//       let v0Temp = v0 + e.deltaX;\n//       setV0(v0Temp);\n//     }\n//   }\n//\n//   console.log(v0, v1)\n//\n//   return (\n//       <svg\n//         width={state.width}\n//         height={state.height}\n//         viewBox={`${v0} ${v1} ${v2} ${v3}`}\n//         xmlns={\"http://www.w3.org/2000/svg\"}\n//         onWheel={(e) => wheel(e)}\n//         style={{border: \"1px solid #cccccc\"}}>\n//\n//           {groups}\n//       </svg>\n//   );\n//\n// }\n//\n// export {Workplane}","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/Workplane.js"],"names":["React","Component","Workplane","state","width","height","v0","v1","v2","v3","e","preventDefault","ctrlKey","zoomRate","deltaY","setState","deltaX","wheel","mouseDown","mouseMove","mouseUp","border","props","groups"],"mappings":"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":["import React, { Component } from 'react';\n\nclass Workplane extends Component {\n\n  state = {\n      width: 500,\n      height: 500,\n      v0: 0,\n      v1: 0,\n      v2: 500,\n      v3: 500,\n    };\n\n  wheel(e) {\n    e.preventDefault();\n    // let loc = utils.getSVGpoint(e, this.state.v0, this.state.v1, this.state.v2, this.state.v3 ,this.state.width, this.state.height);\n\n    if (e.ctrlKey) {\n\n      let zoomRate = 10;\n      //zooms to center now\n\n      if (e.deltaY < 0) {\n        //console.log('zoom in');\n\n        let v2 = (e.deltaY * zoomRate + this.state.v2 > 1) ? e.deltaY * zoomRate + this.state.v2 : this.state.v2;\n        let v3 = (e.deltaY * zoomRate + this.state.v3 > 1) ? e.deltaY * zoomRate + this.state.v3 : this.state.v3;\n\n        let v0 = this.state.v0 - e.deltaY * zoomRate/2;\n        let v1 = this.state.v1 - e.deltaY * zoomRate/2;\n        // console.log(\"e.deltaY * zoomRate\", e.deltaY * zoomRate)\n        // console.log(\"v0\", e.deltaY * zoomRate, v0)\n        // console.log(\"v1\", this.state.v1, v1)\n\n        this.setState({v0, v1, v2, v3})\n      }\n\n      if (e.deltaY > 0) {\n        //console.log('zoom out');\n\n        let v2 = e.deltaY * zoomRate + this.state.v2;\n        let v3 = e.deltaY * zoomRate + this.state.v3;\n\n        let v0 = this.state.v0 - e.deltaY * zoomRate/2;\n        let v1 = this.state.v1 - e.deltaY * zoomRate/2;\n\n        this.setState({v0,v1, v2, v3})\n      }\n\n      return\n    }\n\n    if (e.deltaY < 0) {\n      //console.log('scrolling up');\n\n      let v1 = this.state.v1 + e.deltaY;\n      this.setState({v1});\n    }\n    if (e.deltaY > 0) {\n      //console.log('scrolling down');\n\n      let v1 = this.state.v1 + e.deltaY;\n      this.setState({v1});\n    }\n    if (e.deltaX < 0) {\n      //console.log('scrolling left');\n\n      let v0 = this.state.v0 + e.deltaX;\n      this.setState({v0});\n    }\n    if (e.deltaX > 0) {\n      //console.log('scrolling right');\n\n      let v0 = this.state.v0 + e.deltaX;\n      this.setState({v0});\n    }\n  }\n\n  render() {\n\n    return (\n      <svg\n        width={this.state.width}\n        height={this.state.height}\n        viewBox={`${this.state.v0} ${this.state.v1} ${this.state.v2} ${this.state.v3}`}\n        xmlns={\"http://www.w3.org/2000/svg\"}\n        onWheel={(e) => this.wheel(e)}\n        onMouseDown={(e) => this.mouseDown(e)}\n        onMouseMove={(e) => this.mouseMove(e)}\n        onMouseUp={(e) => this.mouseUp(e)}\n        style={{border: \"1px solid #cccccc\"}}>\n\n          {this.props.groups}\n      </svg>\n    );\n  }\n}\n\nexport {Workplane}\n\n// import React, { Component, useState} from 'react';\n// import * as utils from './utils.js';\n//\n//\n// const Workplane = ({groups}) => {\n//\n//   const [state, setState] = useState({\n//       width: 500,\n//       height: 500,\n//     });\n//\n//   const [v0, setV0] = useState(0);\n//   const [v1, setV1] = useState(0);\n//   const [v2, setV2] = useState(500);\n//   const [v3, setV3] = useState(500);\n//\n//   const wheel = (e) => {\n//     e.preventDefault();\n//     let loc = utils.getSVGpoint(e, v0, v1, v2, v3 ,state.width, state.height);\n//\n//     if (e.ctrlKey) {\n//\n//       let zoomRate = 10;\n//       //zooms to center now\n//\n//       if (e.deltaY < 0) {\n//         //console.log('zoom in');\n//\n//         let v2Temp = (e.deltaY * zoomRate + v2 > 1) ? e.deltaY * zoomRate + v2 : v2;\n//         let v3Temp = (e.deltaY * zoomRate + v3 > 1) ? e.deltaY * zoomRate + v3 : v3;\n//\n//         let v0Temp = v0 - e.deltaY * zoomRate/2;\n//         let v1Temp = v1 - e.deltaY * zoomRate/2;\n//         // console.log(\"e.deltaY * zoomRate\", e.deltaY * zoomRate)\n//         // console.log(\"v0\", e.deltaY * zoomRate, v0)\n//         // console.log(\"v1\", state.v1, v1)\n//\n//         setV0(v0Temp);\n//         setV1(v1Temp);\n//         setV2(v2Temp);\n//         setV3(v3Temp);\n//       }\n//\n//       if (e.deltaY > 0) {\n//         //console.log('zoom out');\n//\n//         let v2Temp = e.deltaY * zoomRate + v2;\n//         let v3Temp = e.deltaY * zoomRate + v3;\n//\n//         let v0Temp = v0 - e.deltaY * zoomRate/2;\n//         let v1Temp = v1 - e.deltaY * zoomRate/2;\n//\n//         setV0(v0Temp);\n//         setV1(v1Temp);\n//         setV2(v2Temp);\n//         setV3(v3Temp);\n//       }\n//\n//       return\n//     }\n//\n//     if (e.deltaY < 0) {\n//       console.log('scrolling up');\n//\n//       let v1Temp = v1 + e.deltaY;\n//       setV1(v1Temp);\n//     }\n//     if (e.deltaY > 0) {\n//       console.log('scrolling down');\n//\n//       let v1Temp = v1 + e.deltaY;\n//       setV1(v1Temp);\n//     }\n//     if (e.deltaX < 0) {\n//       console.log('scrolling left');\n//\n//       let v0Temp = v0 + e.deltaX;\n//       setV0(v0Temp);\n//     }\n//     if (e.deltaX > 0) {\n//       console.log('scrolling right');\n//\n//       let v0Temp = v0 + e.deltaX;\n//       setV0(v0Temp);\n//     }\n//   }\n//\n//   console.log(v0, v1)\n//\n//   return (\n//       <svg\n//         width={state.width}\n//         height={state.height}\n//         viewBox={`${v0} ${v1} ${v2} ${v3}`}\n//         xmlns={\"http://www.w3.org/2000/svg\"}\n//         onWheel={(e) => wheel(e)}\n//         style={{border: \"1px solid #cccccc\"}}>\n//\n//           {groups}\n//       </svg>\n//   );\n//\n// }\n//\n// export {Workplane}\n"]},"metadata":{},"sourceType":"module"}