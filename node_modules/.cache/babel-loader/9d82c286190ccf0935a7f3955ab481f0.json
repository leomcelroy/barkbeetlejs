{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClickOutside = require('react-click-outside');\n\nvar _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);\n\nvar _libs = require('../../libs');\n\nvar _PickerDropdown = require('./components/PickerDropdown');\n\nvar _PickerDropdown2 = _interopRequireDefault(_PickerDropdown);\n\nvar _color = require('./color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ColorPicker = function (_Component) {\n  (0, _inherits3.default)(ColorPicker, _Component);\n\n  function ColorPicker(props) {\n    (0, _classCallCheck3.default)(this, ColorPicker);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, props));\n\n    var color = new _color2.default({\n      enableAlpha: _this.props.showAlpha,\n      format: _this.props.colorFormat\n    });\n    _this.state = {\n      value: _this.props.value,\n      color: color,\n      showPicker: false,\n      showPanelColor: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(ColorPicker, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _state = this.state,\n          value = _state.value,\n          color = _state.color;\n\n      if (value) {\n        color.fromString(value);\n        this.setState({\n          color: color\n        });\n      }\n\n      this.popperElm = this.refs.dropdown;\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        onChange: this.handleChange.bind(this)\n      };\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(color) {\n      this.setState({\n        value: color.value,\n        color: color\n      });\n    }\n  }, {\n    key: 'confirmValue',\n    value: function confirmValue() {\n      var value = this.state.value;\n      var onChange = this.props.onChange;\n      this.setState({\n        showPicker: false\n      }, function () {\n        return onChange(value);\n      });\n    }\n  }, {\n    key: 'clearValue',\n    value: function clearValue() {\n      var _this2 = this;\n\n      this.setState({\n        showPicker: false,\n        showPanelColor: false,\n        value: null\n      }, function () {\n        _this2.props.onChange(null);\n\n        _this2.resetColor();\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      var _this3 = this;\n\n      this.setState({\n        showPicker: false\n      }, function () {\n        return _this3.resetColor();\n      });\n    }\n  }, {\n    key: 'resetColor',\n    value: function resetColor() {\n      var _state2 = this.state,\n          value = _state2.value,\n          color = _state2.color;\n\n      if (value) {\n        color.fromString(value);\n        this.setState({\n          color: color\n        });\n      }\n    }\n  }, {\n    key: 'handleClickOutside',\n    value: function handleClickOutside() {\n      this.setState({\n        showPicker: false\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var showAlpha = this.props.showAlpha;\n      var _state3 = this.state,\n          value = _state3.value,\n          color = _state3.color,\n          showPicker = _state3.showPicker,\n          showPanelColor = _state3.showPanelColor;\n      var displayedColor = void 0;\n\n      if (!value && !showPanelColor) {\n        displayedColor = 'transparent';\n      } else {\n        var _color$toRgb = color.toRgb(),\n            r = _color$toRgb.r,\n            g = _color$toRgb.g,\n            b = _color$toRgb.b;\n\n        var alpha = color.get('alpha');\n\n        if (typeof alpha === 'number') {\n          displayedColor = showAlpha ? 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha / 100 + ')' : 'rgb(' + r + ', ' + g + ', ' + b + ')';\n        }\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'el-color-picker'\n      }, _react2.default.createElement('div', {\n        className: 'el-color-picker__trigger',\n        onClick: function onClick() {\n          return _this4.setState({\n            showPicker: !showPicker\n          });\n        }\n      }, _react2.default.createElement('span', {\n        className: this.classNames({\n          'el-color-picker__color': true,\n          'is-alpha': showAlpha\n        })\n      }, _react2.default.createElement('span', {\n        className: 'el-color-picker__color-inner',\n        style: {\n          backgroundColor: displayedColor\n        }\n      }), !value && !showPanelColor && _react2.default.createElement('span', {\n        className: 'el-color-picker__empty el-icon-close'\n      })), _react2.default.createElement('span', {\n        className: 'el-color-picker__icon el-icon-caret-bottom'\n      })), _react2.default.createElement(_PickerDropdown2.default, {\n        ref: 'dropdown',\n        showPicker: showPicker,\n        color: color,\n        onPick: function onPick() {\n          return _this4.confirmValue();\n        },\n        onClear: function onClear() {\n          return _this4.clearValue();\n        },\n        showAlpha: showAlpha\n      }));\n    }\n  }]);\n  return ColorPicker;\n}(_libs.Component);\n\nColorPicker.defaultProps = {\n  onChange: function onChange() {}\n};\nColorPicker.childContextTypes = {\n  onChange: _libs.PropTypes.func\n};\nColorPicker.propTypes = {\n  value: _libs.PropTypes.string,\n  showAlpha: _libs.PropTypes.bool,\n  colorFormat: _libs.PropTypes.string,\n  onChange: _libs.PropTypes.func\n};\n\nvar _default = (0, _reactClickOutside2.default)(ColorPicker);\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(ColorPicker, 'ColorPicker', 'src/color-picker/ColorPicker.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/color-picker/ColorPicker.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}