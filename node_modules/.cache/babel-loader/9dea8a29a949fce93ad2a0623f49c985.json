{"ast":null,"code":"import objectAssign from 'object-assign';\nvar uid = Date.now();\nexport function nextUid() {\n  return (uid++).toString(36);\n}\nexport function format() {\n  var args = [].slice.call(arguments);\n  var str = args.shift();\n  return str.replace(/{(\\d+)}/g, function (match, number) {\n    return args[number] !== undefined ? args[number] : match;\n  });\n}\nexport function substitute(str, obj) {\n  if (typeof str === 'string') {\n    if (str.indexOf('{') < 0) {\n      return obj[str];\n    } else {\n      return str.replace(/\\\\?\\{([^{}]+)\\}/g, function (match, name) {\n        if (match.charAt(0) === '\\\\') {\n          return match.slice(1);\n        }\n\n        return obj[name] === null || obj[name] === undefined ? '' : obj[name];\n      });\n    }\n  } else if (typeof str === 'function') {\n    var val = str(obj);\n\n    if (val === obj && typeof val === 'object') {\n      val = objectAssign({}, obj);\n    }\n\n    return val;\n  }\n}\nexport function toArray(value, sep) {\n  if (value === null || value === undefined) {\n    value = [];\n  }\n\n  if (typeof value === 'string' && sep) {\n    value = value.split(sep);\n  } else if (!(value instanceof Array)) {\n    value = [sep ? value.toString() : value];\n  } else if (sep) {\n    // if use sep, convert every value to string\n    value = value.map(function (v) {\n      return v.toString();\n    });\n  }\n\n  return value;\n}\nexport function toStyleObject(str) {\n  if (!str) {\n    return undefined;\n  }\n\n  var style = {};\n  var kv;\n  str.split(';').forEach(function (s) {\n    s = s.trim();\n\n    if (!s) {\n      return;\n    }\n\n    kv = s.split(':');\n\n    if (kv.length < 2) {\n      console.warn('style is error');\n      return;\n    }\n\n    var key = kv[0].replace(/-./g, function (r) {\n      return r.replace('-', '').toUpperCase();\n    }).trim();\n    style[key] = kv[1].trim();\n  });\n  return style;\n}","map":null,"metadata":{},"sourceType":"module"}