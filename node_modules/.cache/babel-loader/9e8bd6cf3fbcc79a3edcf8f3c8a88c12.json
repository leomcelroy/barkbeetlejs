{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accSub = accSub;\nexports.accAdd = accAdd;\n\nfunction accSub(arg1, arg2) {\n  var r1, r2, m, n;\n\n  try {\n    r1 = arg1.toString().split('.')[1].length;\n  } catch (e) {\n    r1 = 0;\n  }\n\n  try {\n    r2 = arg2.toString().split('.')[1].length;\n  } catch (e) {\n    r2 = 0;\n  }\n\n  m = Math.pow(10, Math.max(r1, r2));\n  n = r1 >= r2 ? r1 : r2;\n  return parseFloat(((arg1 * m - arg2 * m) / m).toFixed(n));\n}\n\nfunction accAdd(arg1, arg2) {\n  var r1, r2, m, c;\n\n  try {\n    r1 = arg1.toString().split('.')[1].length;\n  } catch (e) {\n    r1 = 0;\n  }\n\n  try {\n    r2 = arg2.toString().split('.')[1].length;\n  } catch (e) {\n    r2 = 0;\n  }\n\n  c = Math.abs(r1 - r2);\n  m = Math.pow(10, Math.max(r1, r2));\n\n  if (c > 0) {\n    var cm = Math.pow(10, c);\n\n    if (r1 > r2) {\n      arg1 = Number(arg1.toString().replace('.', ''));\n      arg2 = Number(arg2.toString().replace('.', '')) * cm;\n    } else {\n      arg1 = Number(arg1.toString().replace('.', '')) * cm;\n      arg2 = Number(arg2.toString().replace('.', ''));\n    }\n  } else {\n    arg1 = Number(arg1.toString().replace('.', ''));\n    arg2 = Number(arg2.toString().replace('.', ''));\n  }\n\n  return (arg1 + arg2) / m;\n}\n\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(accSub, 'accSub', 'src/input-number/util.js');\n\n  __REACT_HOT_LOADER__.register(accAdd, 'accAdd', 'src/input-number/util.js');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}