{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _blacklist = require('blacklist');\n\nvar _blacklist2 = _interopRequireDefault(_blacklist);\n\nvar _constants = require('../constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nmodule.exports = _react2['default'].createClass({\n  displayName: 'Col',\n  propTypes: {\n    /* eslint-disable react/jsx-sort-prop-types */\n    basis: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, // allow pixels\n    _react2['default'].PropTypes.string]),\n    // allow percentage\n    children: _react2['default'].PropTypes.node,\n    gutter: _react2['default'].PropTypes.number,\n    style: _react2['default'].PropTypes.object,\n    lg: _react2['default'].PropTypes.string,\n    // width as a percentage or fraction\n    md: _react2['default'].PropTypes.string,\n    // width as a percentage or fraction\n    sm: _react2['default'].PropTypes.string,\n    // width as a percentage or fraction\n    xs: _react2['default'].PropTypes.string\n  },\n  // width as a percentage or fraction\n\n  /* eslint-enable */\n  getDefaultProps: function getDefaultProps() {\n    return {\n      gutter: _constants2['default'].width.gutter\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      windowWidth: typeof window !== 'undefined' ? window.innerWidth : 0\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    if (typeof window !== 'undefined') window.addEventListener('resize', this.handleResize);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (typeof window !== 'undefined') window.removeEventListener('resize', this.handleResize);\n  },\n  handleResize: function handleResize() {\n    this.setState({\n      windowWidth: typeof window !== 'undefined' ? window.innerWidth : 0\n    });\n  },\n  render: function render() {\n    var _props = this.props;\n    var basis = _props.basis;\n    var gutter = _props.gutter;\n    var xs = _props.xs;\n    var sm = _props.sm;\n    var md = _props.md;\n    var lg = _props.lg;\n    var windowWidth = this.state.windowWidth;\n    var columnStyle = {\n      minHeight: 1,\n      paddingLeft: gutter / 2,\n      paddingRight: gutter / 2\n    }; // if no width control is provided fill available space\n\n    if (!basis && !xs && !sm && !md && !lg) {\n      columnStyle.flex = '1 1 auto';\n      columnStyle.msFlex = '1 1 auto';\n      columnStyle.WebkitFlex = '1 1 auto';\n    } // set widths / flex-basis\n\n\n    if (basis) {\n      columnStyle.flex = '1 0 ' + basis;\n      columnStyle.msFlex = '1 0 ' + basis;\n      columnStyle.WebkitFlex = '1 0 ' + basis;\n    } else if (windowWidth < _constants2['default'].breakpoint.xs) {\n      columnStyle.width = xs;\n    } else if (windowWidth < _constants2['default'].breakpoint.sm) {\n      columnStyle.width = sm || xs;\n    } else if (windowWidth < _constants2['default'].breakpoint.md) {\n      columnStyle.width = md || sm || xs;\n    } else {\n      columnStyle.width = lg || md || sm || xs;\n    }\n\n    if (!columnStyle.width) {\n      columnStyle.width = '100%';\n    }\n\n    if (columnStyle.width in _constants2['default'].fractions) {\n      columnStyle.width = _constants2['default'].fractions[columnStyle.width];\n    }\n\n    var props = (0, _blacklist2['default'])(this.props, 'basis', 'gutter', 'style', 'xs', 'sm', 'md', 'lg');\n    return _react2['default'].createElement('div', _extends({\n      style: _extends(columnStyle, this.props.style)\n    }, props));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}