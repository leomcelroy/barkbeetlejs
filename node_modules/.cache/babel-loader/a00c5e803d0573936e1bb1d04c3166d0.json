{"ast":null,"code":"var presets6mm = {\n  foam_or_wax: {\n    chiploads: 0.3,\n    passdepths: 19,\n    rampAngle: 90\n  },\n  wood: {\n    chiploads: 0.2,\n    passdepths: 16,\n    rampAngle: 90\n  },\n  hardwood: {\n    chiploads: 0.133,\n    passdepths: 12,\n    rampAngle: 45\n  },\n  plastic_roughing: {\n    chiploads: 0.15,\n    passdepths: 8,\n    rampAngle: 18\n  },\n  plastic_finishing: {\n    chiploads: 0.073,\n    passdepths: 8,\n    rampAngle: 18\n  },\n  aluminum_roughing: {\n    chiploads: 0.12,\n    passdepths: 1.8,\n    rampAngle: 12\n  },\n  aluminum_finishing: {\n    chiploads: 0.06,\n    passdepths: 1.8,\n    rampAngle: 12\n  },\n  steel_roughing: {\n    chiploads: 0.08,\n    passdepths: 0.6,\n    rampAngle: 5\n  },\n  steel_finishing: {\n    chiploads: 0.04,\n    passdepths: 0.6,\n    rampAngle: 5\n  }\n};\n\nvar output = function output(input, presets6mm, rpm, presetDiameter, plungRateReductionFactor) {\n  var materialToCut = input.materialToCut,\n      millingBitDiameter = input.millingBitDiameter,\n      numberOfFlutes = input.numberOfFlutes;\n  var feedrate = presets6mm[materialToCut].chiploads * rpm * numberOfFlutes * millingBitDiameter / presetDiameter;\n  var plungerate = feedrate * plungRateReductionFactor;\n  var passDepth = presets6mm[materialToCut].passdepths / presetDiameter * millingBitDiameter;\n  var rampAngle = presets6mm[materialToCut].rampAngle;\n  return {\n    feedrate: feedrate,\n    plungerate: plungerate,\n    passDepth: passDepth,\n    rampAngle: rampAngle\n  };\n};\n\nexport var calculateSettings = function calculateSettings(material, bitDiameter, numberOfFlutes, rpm) {\n  var plungRateReductionFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.6;\n  var input = {\n    materialToCut: material,\n    millingBitDiameter: bitDiameter,\n    numberOfFlutes: numberOfFlutes\n  };\n  return output(input, rpm, presets6mm, 6, plungRateReductionFactor);\n};","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/jensSettings.js"],"names":["presets6mm","foam_or_wax","chiploads","passdepths","rampAngle","wood","hardwood","plastic_roughing","plastic_finishing","aluminum_roughing","aluminum_finishing","steel_roughing","steel_finishing","output","input","rpm","presetDiameter","plungRateReductionFactor","materialToCut","millingBitDiameter","numberOfFlutes","feedrate","plungerate","passDepth","calculateSettings","material","bitDiameter"],"mappings":"AAAA,IAAIA,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,GADA;AAEXC,IAAAA,UAAU,EAAE,EAFD;AAGXC,IAAAA,SAAS,EAAE;AAHA,GADE;AAMfC,EAAAA,IAAI,EAAE;AACJH,IAAAA,SAAS,EAAE,GADP;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,SAAS,EAAE;AAHP,GANS;AAWfE,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,SAAS,EAAE,KADH;AAERC,IAAAA,UAAU,EAAE,EAFJ;AAGRC,IAAAA,SAAS,EAAE;AAHH,GAXK;AAgBfG,EAAAA,gBAAgB,EAAE;AAChBL,IAAAA,SAAS,EAAE,IADK;AAEhBC,IAAAA,UAAU,EAAE,CAFI;AAGhBC,IAAAA,SAAS,EAAE;AAHK,GAhBH;AAqBfI,EAAAA,iBAAiB,EAAE;AACjBN,IAAAA,SAAS,EAAE,KADM;AAEjBC,IAAAA,UAAU,EAAE,CAFK;AAGjBC,IAAAA,SAAS,EAAE;AAHM,GArBJ;AA0BfK,EAAAA,iBAAiB,EAAE;AACjBP,IAAAA,SAAS,EAAE,IADM;AAEjBC,IAAAA,UAAU,EAAE,GAFK;AAGjBC,IAAAA,SAAS,EAAE;AAHM,GA1BJ;AA+BfM,EAAAA,kBAAkB,EAAE;AAClBR,IAAAA,SAAS,EAAE,IADO;AAElBC,IAAAA,UAAU,EAAE,GAFM;AAGlBC,IAAAA,SAAS,EAAE;AAHO,GA/BL;AAoCfO,EAAAA,cAAc,EAAE;AACdT,IAAAA,SAAS,EAAE,IADG;AAEdC,IAAAA,UAAU,EAAE,GAFE;AAGdC,IAAAA,SAAS,EAAE;AAHG,GApCD;AAyCfQ,EAAAA,eAAe,EAAE;AACfV,IAAAA,SAAS,EAAE,IADI;AAEfC,IAAAA,UAAU,EAAE,GAFG;AAGfC,IAAAA,SAAS,EAAE;AAHI;AAzCF,CAAjB;;AAgDA,IAAMS,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQd,UAAR,EAAoBe,GAApB,EAAyBC,cAAzB,EAAyCC,wBAAzC,EAAsE;AAAA,MAC9EC,aAD8E,GACzBJ,KADyB,CAC9EI,aAD8E;AAAA,MAC/DC,kBAD+D,GACzBL,KADyB,CAC/DK,kBAD+D;AAAA,MAC3CC,cAD2C,GACzBN,KADyB,CAC3CM,cAD2C;AAGnF,MAAIC,QAAQ,GAAIrB,UAAU,CAACkB,aAAD,CAAV,CAA0BhB,SAA1B,GAAsCa,GAAtC,GAA4CK,cAA5C,GAA6DD,kBAA9D,GAAkFH,cAAjG;AACA,MAAIM,UAAU,GAAGD,QAAQ,GAAGJ,wBAA5B;AAEA,MAAIM,SAAS,GAAGvB,UAAU,CAACkB,aAAD,CAAV,CAA0Bf,UAA1B,GAAqCa,cAArC,GAAoDG,kBAApE;AACA,MAAIf,SAAS,GAAGJ,UAAU,CAACkB,aAAD,CAAV,CAA0Bd,SAA1C;AAEA,SAAO;AACLiB,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,UAAU,EAAVA,UAFK;AAGLC,IAAAA,SAAS,EAATA,SAHK;AAILnB,IAAAA,SAAS,EAATA;AAJK,GAAP;AAMD,CAfD;;AAiBA,OAAO,IAAMoB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,WAAX,EAAwBN,cAAxB,EAAwCL,GAAxC,EAAgF;AAAA,MAAnCE,wBAAmC,uEAAR,GAAQ;AAC/G,MAAIH,KAAK,GAAG;AACVI,IAAAA,aAAa,EAAEO,QADL;AAEVN,IAAAA,kBAAkB,EAAEO,WAFV;AAGVN,IAAAA,cAAc,EAAEA;AAHN,GAAZ;AAMA,SAAOP,MAAM,CAACC,KAAD,EAAQC,GAAR,EAAaf,UAAb,EAAyB,CAAzB,EAA4BiB,wBAA5B,CAAb;AACD,CARM","sourcesContent":["let presets6mm = {\n  foam_or_wax: {\n    chiploads: 0.3,\n    passdepths: 19,\n    rampAngle: 90,\n  },\n  wood: {\n    chiploads: 0.2,\n    passdepths: 16,\n    rampAngle: 90,\n  },\n  hardwood: {\n    chiploads: 0.133,\n    passdepths: 12,\n    rampAngle: 45,\n  },\n  plastic_roughing: {\n    chiploads: 0.15,\n    passdepths: 8,\n    rampAngle: 18,\n  },\n  plastic_finishing: {\n    chiploads: 0.073,\n    passdepths: 8,\n    rampAngle: 18,\n  },\n  aluminum_roughing: {\n    chiploads: 0.12,\n    passdepths: 1.8,\n    rampAngle: 12,\n  },\n  aluminum_finishing: {\n    chiploads: 0.06,\n    passdepths: 1.8,\n    rampAngle: 12,\n  },\n  steel_roughing: {\n    chiploads: 0.08,\n    passdepths: 0.6,\n    rampAngle: 5,\n  },\n  steel_finishing: {\n    chiploads: 0.04,\n    passdepths: 0.6,\n    rampAngle: 5,\n  },\n}\n\nconst output = (input, presets6mm, rpm, presetDiameter, plungRateReductionFactor) => {\n  let {materialToCut, millingBitDiameter, numberOfFlutes} = input;\n\n  let feedrate = (presets6mm[materialToCut].chiploads * rpm * numberOfFlutes * millingBitDiameter)/presetDiameter;\n  let plungerate = feedrate * plungRateReductionFactor;\n\n  let passDepth = presets6mm[materialToCut].passdepths/presetDiameter*millingBitDiameter;\n  let rampAngle = presets6mm[materialToCut].rampAngle;\n\n  return {\n    feedrate,\n    plungerate,\n    passDepth,\n    rampAngle,\n  };\n}\n\nexport const calculateSettings = (material, bitDiameter, numberOfFlutes, rpm, plungRateReductionFactor = 0.6) => {\n  let input = {\n    materialToCut: material,\n    millingBitDiameter: bitDiameter,\n    numberOfFlutes: numberOfFlutes,\n  };\n\n  return output(input, rpm, presets6mm, 6, plungRateReductionFactor);\n}\n"]},"metadata":{},"sourceType":"module"}