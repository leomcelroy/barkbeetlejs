{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Switch = function (_Component) {\n  (0, _inherits3.default)(Switch, _Component);\n\n  function Switch(props) {\n    (0, _classCallCheck3.default)(this, Switch);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props));\n\n    _this.state = {\n      value: props.value,\n      coreWidth: props.width,\n      buttonStyle: {\n        transform: ''\n      }\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Switch, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.width === 0) {\n        this.state.coreWidth = this.hasText() ? 58 : 46;\n      }\n\n      this.updateSwitch();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      var _this2 = this;\n\n      this.setState({\n        value: props.value\n      }, function () {\n        _this2.updateSwitch();\n      });\n\n      if (props.width) {\n        this.setState({\n          coreWidth: props.width\n        });\n      }\n    }\n  }, {\n    key: 'updateSwitch',\n    value: function updateSwitch() {\n      this.handleButtonTransform();\n\n      if (this.props.onColor || this.props.offColor) {\n        this.setBackgroundColor();\n      }\n    }\n  }, {\n    key: 'hasText',\n    value: function hasText() {\n      return this.props.onText || this.props.offText;\n    }\n  }, {\n    key: 'setBackgroundColor',\n    value: function setBackgroundColor() {\n      var newColor = this.state.value === this.props.onValue ? this.props.onColor : this.props.offColor;\n      this.refs.core.style.borderColor = newColor;\n      this.refs.core.style.backgroundColor = newColor;\n    }\n  }, {\n    key: 'setFocus',\n    value: function setFocus() {\n      if (this.props.allowFocus) {\n        this.refs.input.focus();\n      }\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus(e) {\n      if (this.props.allowFocus) {\n        this.props.onFocus(e);\n      }\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur(e) {\n      if (this.props.allowFocus) {\n        this.props.onBlur(e);\n      }\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      var _this3 = this;\n\n      this.setState({\n        value: e.target.checked ? this.props.onValue : this.props.offValue\n      }, function () {\n        _this3.updateSwitch();\n\n        if (_this3.props.onChange) {\n          _this3.props.onChange(_this3.state.value);\n        }\n      });\n    }\n  }, {\n    key: 'handleButtonTransform',\n    value: function handleButtonTransform() {\n      var _state = this.state,\n          value = _state.value,\n          coreWidth = _state.coreWidth,\n          buttonStyle = _state.buttonStyle;\n      buttonStyle.transform = value === this.props.onValue ? 'translate(' + (coreWidth - 20) + 'px, 2px)' : 'translate(2px, 2px)';\n      this.setState({\n        buttonStyle: buttonStyle\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          disabled = _props.disabled,\n          onText = _props.onText,\n          offText = _props.offText,\n          onValue = _props.onValue,\n          onIconClass = _props.onIconClass,\n          offIconClass = _props.offIconClass,\n          allowFocus = _props.allowFocus;\n      var _state2 = this.state,\n          value = _state2.value,\n          coreWidth = _state2.coreWidth,\n          buttonStyle = _state2.buttonStyle;\n      return _react2.default.createElement('label', {\n        style: this.style(),\n        className: this.className('el-switch', {\n          'is-disabled': disabled,\n          'el-switch--wide': this.hasText(),\n          'is-checked': value === onValue\n        })\n      }, _react2.default.createElement(_libs.View, {\n        show: disabled\n      }, _react2.default.createElement('div', {\n        className: 'el-switch__mask'\n      })), _react2.default.createElement('input', {\n        className: this.className('el-switch__input', {\n          'allow-focus': allowFocus\n        }),\n        type: 'checkbox',\n        checked: value === onValue,\n        name: name,\n        ref: 'input',\n        disabled: disabled,\n        onChange: this.handleChange.bind(this),\n        onFocus: this.handleFocus.bind(this),\n        onBlur: this.handleBlur.bind(this)\n      }), _react2.default.createElement('span', {\n        className: 'el-switch__core',\n        ref: 'core',\n        style: {\n          'width': coreWidth + 'px'\n        }\n      }, _react2.default.createElement('span', {\n        className: 'el-switch__button',\n        style: Object.assign({}, buttonStyle),\n        onClick: this.setFocus.bind(this)\n      })), _react2.default.createElement(_libs.Transition, {\n        name: 'label-fade'\n      }, _react2.default.createElement(_libs.View, {\n        show: value === onValue\n      }, _react2.default.createElement('div', {\n        className: 'el-switch__label el-switch__label--left',\n        style: {\n          'width': coreWidth + 'px'\n        }\n      }, onIconClass && _react2.default.createElement('i', {\n        className: onIconClass\n      }), !onIconClass && onText && _react2.default.createElement('span', null, onText)))), _react2.default.createElement(_libs.Transition, {\n        name: 'label-fade'\n      }, _react2.default.createElement(_libs.View, {\n        show: value !== onValue\n      }, _react2.default.createElement('div', {\n        className: 'el-switch__label el-switch__label--right',\n        style: {\n          'width': coreWidth + 'px'\n        }\n      }, offIconClass && _react2.default.createElement('i', {\n        className: offIconClass\n      }), !offIconClass && offText && _react2.default.createElement('span', null, offText)))));\n    }\n  }]);\n  return Switch;\n}(_libs.Component);\n\nvar _default = Switch;\nexports.default = _default;\nSwitch.propTypes = {\n  value: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string, _libs.PropTypes.bool]),\n  disabled: _libs.PropTypes.bool,\n  width: _libs.PropTypes.number,\n  onIconClass: _libs.PropTypes.string,\n  offIconClass: _libs.PropTypes.string,\n  onText: _libs.PropTypes.string,\n  offText: _libs.PropTypes.string,\n  onColor: _libs.PropTypes.string,\n  offColor: _libs.PropTypes.string,\n  onValue: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string, _libs.PropTypes.bool]),\n  offValue: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string, _libs.PropTypes.bool]),\n  name: _libs.PropTypes.string,\n  onChange: _libs.PropTypes.func,\n  onBlur: _libs.PropTypes.func,\n  onFocus: _libs.PropTypes.func,\n  allowFocus: _libs.PropTypes.bool\n};\nSwitch.defaultProps = {\n  value: true,\n  disabled: false,\n  width: 0,\n  onIconClass: '',\n  offIconClass: '',\n  onText: 'ON',\n  offText: 'OFF',\n  onValue: true,\n  offValue: false,\n  onColor: '',\n  offColor: '',\n  name: '',\n  allowFocus: false\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Switch, 'Switch', 'src/switch/Switch.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/switch/Switch.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}