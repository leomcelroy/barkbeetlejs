{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT } from '../constants';\nimport RandomUID from \"../utils/RandomUID\";\nvar prefixID = 'react-svg-pan-zoom_border_gradient';\n\nfunction BorderGradient(_ref) {\n  var direction = _ref.direction,\n      width = _ref.width,\n      height = _ref.height,\n      _uid = _ref._uid;\n  var transform;\n\n  switch (direction) {\n    case POSITION_TOP:\n      transform = \"translate(\".concat(width, \", 0) rotate(90)\");\n      break;\n\n    case POSITION_RIGHT:\n      transform = \"translate(\".concat(width, \", \").concat(height, \") rotate(180)\");\n      break;\n\n    case POSITION_BOTTOM:\n      transform = \"translate(0, \".concat(height, \") rotate(270)\");\n      break;\n\n    case POSITION_LEFT:\n      transform = \" \";\n      break;\n  }\n\n  var gradientID = \"\".concat(prefixID, \"_gradient_\").concat(_uid);\n  var maskID = \"\".concat(prefixID, \"_mask_\").concat(_uid);\n  return React.createElement(\"g\", null, React.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n    id: gradientID,\n    x1: \"0%\",\n    y1: \"0%\",\n    x2: \"100%\",\n    y2: \"0%\",\n    spreadMethod: \"pad\"\n  }, React.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"#fff\",\n    stopOpacity: \"0.8\"\n  }), React.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#000\",\n    stopOpacity: \"0.5\"\n  })), React.createElement(\"mask\", {\n    id: maskID,\n    x: \"0\",\n    y: \"0\",\n    width: \"20\",\n    height: Math.max(width, height)\n  }, React.createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"20\",\n    height: Math.max(width, height),\n    style: {\n      stroke: \"none\",\n      fill: \"url(#\".concat(gradientID, \")\")\n    }\n  }))), React.createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"20\",\n    height: Math.max(width, height),\n    style: {\n      stroke: \"none\",\n      fill: \"#000\",\n      mask: \"url(#\".concat(maskID, \")\")\n    },\n    transform: transform\n  }));\n}\n\nBorderGradient.propTypes = {\n  direction: PropTypes.oneOf([POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT]).isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\nexport default RandomUID(BorderGradient);","map":null,"metadata":{},"sourceType":"module"}