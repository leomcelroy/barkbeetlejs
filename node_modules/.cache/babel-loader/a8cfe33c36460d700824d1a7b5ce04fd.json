{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { objectAssign } from './utils/objects';\n\nvar ArrayHolder =\n/*#__PURE__*/\nfunction () {\n  function ArrayHolder(values, options) {\n    _classCallCheck(this, ArrayHolder);\n\n    this.values = values || [];\n    this.options = objectAssign({}, options);\n  }\n\n  _createClass(ArrayHolder, [{\n    key: \"init\",\n    value: function init(values) {\n      this.values = values;\n    }\n  }, {\n    key: \"add\",\n    value: function add(items) {\n      var _this = this;\n\n      if (!Array.isArray(items)) items = [items];\n      var temp = [];\n      items.forEach(function (d) {\n        if (_this.values.indexOf(d) < 0) {\n          temp.push(d);\n        }\n      });\n      this.values = this.values.concat(temp);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(items) {\n      if (!Array.isArray(items)) items = [items];\n      this.values = this.values.filter(function (d) {\n        return items.indexOf(d) < 0;\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.values = [];\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(sep) {\n      return sep ? this.values.join(sep) : _toConsumableArray(this.values);\n    }\n  }]);\n\n  return ArrayHolder;\n}();\n\nexport { ArrayHolder as default };","map":null,"metadata":{},"sourceType":"module"}