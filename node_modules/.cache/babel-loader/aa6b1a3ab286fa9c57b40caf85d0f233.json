{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../../icon';\nimport Text from './Text';\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ListItem, _PureComponent);\n\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListItem).apply(this, arguments));\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          size = _this$props.size,\n          icon = _this$props.icon,\n          iconColor = _this$props.iconColor,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"size\", \"icon\", \"iconColor\"]);\n\n      var paddingLeft;\n      if (size === 300) paddingLeft = 4;\n      if (size === 400) paddingLeft = 8;\n      if (size === 500) paddingLeft = 8;\n      if (size === 600) paddingLeft = 12;\n      var iconTop;\n      if (size === 300) iconTop = 1;\n      if (size === 400) iconTop = 3;\n      if (size === 500) iconTop = 3;\n      if (size === 600) iconTop = 4;\n      var iconSize;\n      if (size === 300) iconSize = 12;\n      if (size === 400) iconSize = 14;\n      if (size === 500) iconSize = 14;\n      if (size === 600) iconSize = 16;\n      var iconLeft = -iconSize - 4;\n      if (size === 600) iconLeft = -iconSize;\n      return React.createElement(Text, _extends({\n        is: \"li\",\n        position: \"relative\",\n        marginY: \"0.5em\",\n        size: size,\n        listStyleType: icon ? 'none' : null,\n        paddingLeft: icon ? paddingLeft : null\n      }, props), icon && React.createElement(Icon, {\n        icon: icon,\n        color: iconColor,\n        position: \"absolute\",\n        size: iconSize,\n        left: iconLeft,\n        top: iconTop\n      }), children);\n    }\n  }]);\n\n  return ListItem;\n}(PureComponent);\n\nListItem.displayName = \"ListItem\";\n\n_defineProperty(ListItem, \"propTypes\", _objectSpread({}, Text.propTypes, {\n  /**\n   * When passed, adds a icon before the list item.\n   * See Evergreen `Icon` for documentation.\n   */\n  icon: PropTypes.string,\n\n  /**\n   * The color of the icon.\n   */\n  iconColor: PropTypes.string\n}));\n\nexport { ListItem as default };","map":null,"metadata":{},"sourceType":"module"}