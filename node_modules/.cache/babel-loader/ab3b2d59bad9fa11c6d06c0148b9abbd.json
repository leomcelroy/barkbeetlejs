{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { withTheme } from '../../theme';\nvar StringAndBoolPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.bool]);\n\nvar Pane =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Pane, _PureComponent);\n\n  function Pane() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Pane);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pane)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getHoverElevationStyle\", function (hoverElevation, css) {\n      var theme = _this.props.theme;\n      if (!Number.isInteger(hoverElevation)) return {};\n      return {\n        transitionDuration: '150ms',\n        transitionProperty: 'box-shadow, transform',\n        transitionTimingFunction: \"cubic-bezier(0.0, 0.0, 0.2, 1)\",\n        ':hover': _objectSpread({}, css[':hover'] || {}, {\n          transform: 'translateY(-2px)',\n          boxShadow: theme.getElevation(hoverElevation)\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getActiveElevationStyle\", function (activeElevation, css) {\n      var theme = _this.props.theme;\n      if (!Number.isInteger(activeElevation)) return {};\n      return {\n        ':active': _objectSpread({}, css[':active'] || {}, {\n          transform: 'translateY(-1px)',\n          boxShadow: theme.getElevation(activeElevation)\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getBorderSideProperty\", function (_ref) {\n      var borderSideProperty = _ref.borderSideProperty,\n          border = _ref.border;\n      var theme = _this.props.theme;\n\n      if (Object.prototype.hasOwnProperty.call(theme.colors.border, borderSideProperty)) {\n        return \"1px solid \".concat(theme.colors.border[borderSideProperty]);\n      }\n\n      if (borderSideProperty === true) {\n        return \"1px solid \".concat(theme.colors.border.default);\n      }\n\n      if (borderSideProperty === false) {\n        return null;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(theme.colors.border, border)) {\n        return \"1px solid \".concat(theme.colors.border[border]);\n      }\n\n      if (border === true) {\n        return \"1px solid \".concat(theme.colors.border.default);\n      }\n\n      return borderSideProperty;\n    });\n\n    return _this;\n  }\n\n  _createClass(Pane, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          background = _this$props.background,\n          elevation = _this$props.elevation,\n          hoverElevation = _this$props.hoverElevation,\n          activeElevation = _this$props.activeElevation,\n          border = _this$props.border,\n          borderTop = _this$props.borderTop,\n          borderRight = _this$props.borderRight,\n          borderBottom = _this$props.borderBottom,\n          borderLeft = _this$props.borderLeft,\n          _this$props$css = _this$props.css,\n          css = _this$props$css === void 0 ? {} : _this$props$css,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"background\", \"elevation\", \"hoverElevation\", \"activeElevation\", \"border\", \"borderTop\", \"borderRight\", \"borderBottom\", \"borderLeft\", \"css\"]);\n\n      var elevationStyle = theme.getElevation(elevation);\n      var hoverElevationStyle = this.getHoverElevationStyle(hoverElevation, css);\n      var activeElevationStyle = this.getActiveElevationStyle(activeElevation, css);\n\n      var _map = [borderTop, borderRight, borderBottom, borderLeft].map(function (borderSideProperty) {\n        return _this2.getBorderSideProperty({\n          borderSideProperty: borderSideProperty,\n          border: border\n        });\n      }),\n          _map2 = _slicedToArray(_map, 4),\n          _borderTop = _map2[0],\n          _borderRight = _map2[1],\n          _borderBottom = _map2[2],\n          _borderLeft = _map2[3];\n\n      return React.createElement(Box, _extends({\n        borderTop: _borderTop,\n        borderRight: _borderRight,\n        borderBottom: _borderBottom,\n        borderLeft: _borderLeft,\n        boxShadow: elevationStyle,\n        background: theme.getBackground(background),\n        css: _objectSpread({}, css, hoverElevationStyle, activeElevationStyle)\n      }, props));\n    }\n  }]);\n\n  return Pane;\n}(PureComponent);\n\nPane.displayName = \"Pane\";\n\n_defineProperty(Pane, \"propTypes\", _objectSpread({}, Box.propTypes, {\n  /**\n   * Background property.\n   * `tint1`, `tint2` etc. from `theme.colors.background` are available.\n   */\n  background: PropTypes.string,\n\n  /**\n   * Elevation of the Pane.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  elevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on hover. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  hoverElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on click. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  activeElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, muted, default.\n   */\n  border: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderTop: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderRight: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderBottom: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderLeft: StringAndBoolPropType,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\nexport default withTheme(Pane);","map":null,"metadata":{},"sourceType":"module"}