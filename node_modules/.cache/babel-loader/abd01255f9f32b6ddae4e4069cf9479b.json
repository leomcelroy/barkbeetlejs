{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MountBody = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MountBody = exports.MountBody = function (_Component) {\n  (0, _inherits3.default)(MountBody, _Component);\n\n  function MountBody() {\n    (0, _classCallCheck3.default)(this, MountBody);\n    return (0, _possibleConstructorReturn3.default)(this, (MountBody.__proto__ || Object.getPrototypeOf(MountBody)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(MountBody, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var c = _react2.default.cloneElement(this.props.children);\n\n      this.tnode = document.createElement('div');\n      document.body.appendChild(this.tnode);\n\n      _reactDom2.default.render(c, this.tnode);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      _reactDom2.default.unmountComponentAtNode(this.tnode);\n\n      document.body.removeChild(this.tnode);\n    }\n  }, {\n    key: 'contains',\n    value: function contains(evt) {\n      var parent = this.tnode.childNodes[0];\n      var rect = parent.getBoundingClientRect();\n      var isContain = evt.clientX >= rect.left && evt.clientX <= rect.right && evt.clientY >= rect.top && evt.clientY <= rect.bottom;\n      return isContain;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n  return MountBody;\n}(_react.Component);\n\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(MountBody, 'MountBody', 'src/date-picker/MountBody.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}