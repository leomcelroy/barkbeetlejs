{"ast":null,"code":"// these are the default settings\nimport * as utils from './utils.js'; //inputs\n\nvar cutDepth = 8.5;\nvar toolDiameter = 4;\nvar flutes = 1;\nvar units = \"mm\";\nvar name = \"anon\";\nvar stepoverPercentage = 60;\nvar tolerance = 0;\nvar offset = \"outside\";\nvar jogHeight = 10;\nvar jogRate = 6000;\nvar tabs = false;\nvar tabThickness = 0;\nvar dogbone = false; //let millOuterFirst = false;\n//let climbDirection = false;\n//calculate from material and bit\n\nvar feedRate = 2200;\nvar plungeRate = 1000;\nvar passDepth = .3; //let rampAngle\n\nexport var depthOfPasses = function depthOfPasses(cutDepthArg, passDepthArg) {\n  var tempFloor = Math.ceil(cutDepthArg / passDepthArg); //should this be ceiling or floor, I think ceil\n\n  var actualPassDepth = cutDepthArg / tempFloor;\n  return utils.makeSeries(actualPassDepth, actualPassDepth, tempFloor).map(function (n) {\n    return -n;\n  });\n};\nexport var params = {\n  name: name,\n  //used\n  // flutes,\n  dogbone: dogbone,\n  //used\n  tabThickness: tabThickness,\n  //used\n  tabs: tabs,\n  //used\n  compensatedRadius: toolDiameter / 2 + tolerance,\n  //used\n  cutDepth: cutDepth,\n  //used\n  passDepth: passDepth,\n  //used\n  jogHeight: jogHeight,\n  //used\n  stepoverPercentage: stepoverPercentage,\n  //used\n  feedRate: feedRate,\n  //used\n  jogRate: jogRate,\n  //used\n  units: units,\n  //used\n  plungeRate: plungeRate //used\n  // tolerance,\n  // toolDiameter,\n  // toolRadius: toolDiameter/2,\n\n};","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/parameters.js"],"names":["utils","cutDepth","toolDiameter","flutes","units","name","stepoverPercentage","tolerance","offset","jogHeight","jogRate","tabs","tabThickness","dogbone","feedRate","plungeRate","passDepth","depthOfPasses","cutDepthArg","passDepthArg","tempFloor","Math","ceil","actualPassDepth","makeSeries","map","n","params","compensatedRadius"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,YAAvB,C,CAEA;;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,MAAM,GAAG,CAAb;AAEA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,MAAM,GAAG,SAAb;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,OAAO,GAAG,IAAd;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,OAAO,GAAG,KAAd,C,CACA;AACA;AAEA;;AACA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAIC,SAAS,GAAG,EAAhB,C,CACA;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,WAAD,EAAcC,YAAd,EAA+B;AAC1D,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,WAAW,GAACC,YAAtB,CAAhB,CAD0D,CACL;;AACrD,MAAII,eAAe,GAAGL,WAAW,GAACE,SAAlC;AAEA,SAAOpB,KAAK,CAACwB,UAAN,CAAiBD,eAAjB,EAAkCA,eAAlC,EAAmDH,SAAnD,EAA8DK,GAA9D,CAAkE,UAAAC,CAAC;AAAA,WAAI,CAACA,CAAL;AAAA,GAAnE,CAAP;AACD,CALM;AAOP,OAAO,IAAMC,MAAM,GAAG;AACpBtB,EAAAA,IAAI,EAAJA,IADoB;AACd;AACN;AACAQ,EAAAA,OAAO,EAAPA,OAHoB;AAGX;AACTD,EAAAA,YAAY,EAAZA,YAJoB;AAIN;AACdD,EAAAA,IAAI,EAAJA,IALoB;AAKd;AACNiB,EAAAA,iBAAiB,EAAE1B,YAAY,GAAC,CAAb,GAAiBK,SANhB;AAM2B;AAC/CN,EAAAA,QAAQ,EAARA,QAPoB;AAOV;AACVe,EAAAA,SAAS,EAATA,SARoB;AAQT;AACXP,EAAAA,SAAS,EAATA,SAToB;AAST;AACXH,EAAAA,kBAAkB,EAAlBA,kBAVoB;AAUA;AACpBQ,EAAAA,QAAQ,EAARA,QAXoB;AAWV;AACVJ,EAAAA,OAAO,EAAPA,OAZoB;AAYX;AACTN,EAAAA,KAAK,EAALA,KAboB;AAab;AACPW,EAAAA,UAAU,EAAVA,UAdoB,CAcR;AACZ;AACA;AACA;;AAjBoB,CAAf","sourcesContent":["// these are the default settings\nimport * as utils from './utils.js';\n\n//inputs\nlet cutDepth = 8.5;\nlet toolDiameter = 4;\nlet flutes = 1;\n\nlet units = \"mm\"\nlet name = \"anon\"\nlet stepoverPercentage = 60;\nlet tolerance = 0;\nlet offset = \"outside\";\nlet jogHeight = 10;\nlet jogRate = 6000;\nlet tabs = false;\nlet tabThickness = 0;\nlet dogbone = false;\n//let millOuterFirst = false;\n//let climbDirection = false;\n\n//calculate from material and bit\nlet feedRate = 2200;\nlet plungeRate = 1000;\nlet passDepth = .3;\n//let rampAngle\n\nexport const depthOfPasses = (cutDepthArg, passDepthArg) => {\n  let tempFloor = Math.ceil(cutDepthArg/passDepthArg); //should this be ceiling or floor, I think ceil\n  let actualPassDepth = cutDepthArg/tempFloor;\n\n  return utils.makeSeries(actualPassDepth, actualPassDepth, tempFloor).map(n => -n);\n};\n\nexport const params = {\n  name, //used\n  // flutes,\n  dogbone, //used\n  tabThickness, //used\n  tabs, //used\n  compensatedRadius: toolDiameter/2 + tolerance, //used\n  cutDepth, //used\n  passDepth, //used\n  jogHeight, //used\n  stepoverPercentage, //used\n  feedRate, //used\n  jogRate, //used\n  units, //used\n  plungeRate, //used\n  // tolerance,\n  // toolDiameter,\n  // toolRadius: toolDiameter/2,\n}\n"]},"metadata":{},"sourceType":"module"}