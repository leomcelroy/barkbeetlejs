{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _throttle = require('throttle-debounce/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nvar _libs = require('../../libs');\n\nvar _resizeEvent = require('../../libs/utils/resize-event');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Carousel = function (_Component) {\n  (0, _inherits3.default)(Carousel, _Component);\n\n  function Carousel(props) {\n    (0, _classCallCheck3.default)(this, Carousel);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));\n\n    _this.state = {\n      items: [],\n      activeIndex: -1,\n      containerWidth: 0,\n      timer: null,\n      hover: false\n    };\n    _this.throttledArrowClick = (0, _throttle2.default)(300, true, function (index) {\n      _this.setActiveItem(index);\n    });\n    _this.throttledIndicatorHover = (0, _throttle2.default)(300, function (index) {\n      _this.handleIndicatorHover(index);\n    });\n    _this.resetItemPosition = _this._resetItemPosition.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Carousel, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        component: this\n      };\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.initialIndex < this.state.items.length && this.props.initialIndex >= 0) {\n        this.setState({\n          activeIndex: this.props.initialIndex\n        });\n      }\n\n      this.startTimer();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props, state) {\n      (0, _resizeEvent.addResizeListener)(this.refs.root, this.resetItemPosition);\n\n      if (state.activeIndex != this.state.activeIndex) {\n        this.resetItemPosition(state.activeIndex);\n\n        if (this.props.onChange) {\n          this.props.onChange(this.state.activeIndex, state.activeIndex);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _resizeEvent.removeResizeListener)(this.refs.root, this.resetItemPosition);\n      this.pauseTimer();\n    }\n  }, {\n    key: 'handleMouseEnter',\n    value: function handleMouseEnter() {\n      this.setState({\n        hover: true\n      });\n      this.pauseTimer();\n    }\n  }, {\n    key: 'handleMouseLeave',\n    value: function handleMouseLeave() {\n      this.setState({\n        hover: false\n      });\n      this.startTimer();\n    }\n  }, {\n    key: 'itemInStage',\n    value: function itemInStage(item, index) {\n      var length = this.state.items.length;\n\n      if (index === length - 1 && item.state.inStage && this.state.items[0].state.active || item.state.inStage && this.state.items[index + 1] && this.state.items[index + 1].state.active) {\n        return 'left';\n      } else if (index === 0 && item.state.inStage && this.state.items[length - 1].state.active || item.state.inStage && this.state.items[index - 1] && this.state.items[index - 1].state.active) {\n        return 'right';\n      }\n\n      return false;\n    }\n  }, {\n    key: 'handleButtonEnter',\n    value: function handleButtonEnter(arrow) {\n      var _this2 = this;\n\n      this.state.items.forEach(function (item, index) {\n        if (arrow === _this2.itemInStage(item, index)) {\n          item.setState({\n            hover: true\n          });\n        }\n      });\n    }\n  }, {\n    key: 'handleButtonLeave',\n    value: function handleButtonLeave() {\n      this.state.items.forEach(function (item) {\n        item.setState({\n          hover: false\n        });\n      });\n    }\n  }, {\n    key: '_resetItemPosition',\n    value: function _resetItemPosition(oldIndex) {\n      var _this3 = this;\n\n      this.state.items.forEach(function (item, index) {\n        item.translateItem(index, _this3.state.activeIndex, oldIndex);\n      });\n    }\n  }, {\n    key: 'playSlides',\n    value: function playSlides() {\n      var activeIndex = this.state.activeIndex;\n\n      if (activeIndex < this.state.items.length - 1) {\n        activeIndex++;\n      } else {\n        activeIndex = 0;\n      }\n\n      this.setState({\n        activeIndex: activeIndex\n      });\n    }\n  }, {\n    key: 'pauseTimer',\n    value: function pauseTimer() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: 'startTimer',\n    value: function startTimer() {\n      if (this.props.interval <= 0 || !this.props.autoplay) return;\n      this.timer = setInterval(this.playSlides.bind(this), Number(this.props.interval));\n    }\n  }, {\n    key: 'addItem',\n    value: function addItem(item) {\n      this.state.items.push(item);\n      this.setActiveItem(0);\n    }\n  }, {\n    key: 'removeItem',\n    value: function removeItem(item) {\n      this.state.items.splice(this.state.items.indexOf(item), 1);\n      this.setActiveItem(0);\n    }\n  }, {\n    key: 'setActiveItem',\n    value: function setActiveItem(index) {\n      var activeIndex = this.state.activeIndex;\n\n      if (typeof index === 'string') {\n        var filteredItems = this.state.items.filter(function (item) {\n          return item.props.name === index;\n        });\n\n        if (filteredItems.length > 0) {\n          index = this.state.items.indexOf(filteredItems[0]);\n        }\n      }\n\n      index = Number(index);\n\n      if (isNaN(index) || index !== Math.floor(index)) {\n        process.env.NODE_ENV !== 'production' && console.warn('[Element Warn][Carousel]index must be an integer.');\n        return;\n      }\n\n      var length = this.state.items.length;\n\n      if (index < 0) {\n        activeIndex = length - 1;\n      } else if (index >= length) {\n        activeIndex = 0;\n      } else {\n        activeIndex = index;\n      }\n\n      this.setState({\n        activeIndex: activeIndex\n      });\n    }\n  }, {\n    key: 'prev',\n    value: function prev() {\n      this.setActiveItem(this.state.activeIndex - 1);\n    }\n  }, {\n    key: 'next',\n    value: function next() {\n      this.setActiveItem(this.state.activeIndex + 1);\n    }\n  }, {\n    key: 'handleIndicatorClick',\n    value: function handleIndicatorClick(index) {\n      this.setState({\n        activeIndex: index\n      });\n    }\n  }, {\n    key: 'handleIndicatorHover',\n    value: function handleIndicatorHover(index) {\n      if (this.props.trigger === 'hover' && index !== this.state.activeIndex) {\n        this.setState({\n          activeIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          height = _props.height,\n          arrow = _props.arrow,\n          indicatorPosition = _props.indicatorPosition;\n      var _state = this.state,\n          hover = _state.hover,\n          activeIndex = _state.activeIndex,\n          items = _state.items;\n      return _react2.default.createElement('div', {\n        ref: 'root',\n        className: this.className('el-carousel', {\n          'el-carousel--card': this.iscard\n        }),\n        onMouseEnter: this.handleMouseEnter.bind(this),\n        onMouseLeave: this.handleMouseLeave.bind(this)\n      }, _react2.default.createElement('div', {\n        className: 'el-carousel__container',\n        style: {\n          height: height\n        }\n      }, _react2.default.createElement(_libs.Transition, {\n        name: 'carousel-arrow-left'\n      }, arrow !== 'never' && _react2.default.createElement(_libs.View, {\n        show: arrow === 'always' || hover\n      }, _react2.default.createElement('button', {\n        className: 'el-carousel__arrow el-carousel__arrow--left',\n        onMouseEnter: this.handleButtonEnter.bind(this, 'left'),\n        onMouseLeave: this.handleButtonLeave.bind(this),\n        onClick: this.throttledArrowClick.bind(this, activeIndex - 1)\n      }, _react2.default.createElement('i', {\n        className: 'el-icon-arrow-left'\n      })))), _react2.default.createElement(_libs.Transition, {\n        name: 'carousel-arrow-right'\n      }, arrow !== 'never' && _react2.default.createElement(_libs.View, {\n        show: arrow === 'always' || hover\n      }, _react2.default.createElement('button', {\n        className: 'el-carousel__arrow el-carousel__arrow--right',\n        onMouseEnter: this.handleButtonEnter.bind(this, 'right'),\n        onMouseLeave: this.handleButtonLeave.bind(this),\n        onClick: this.throttledArrowClick.bind(this, activeIndex + 1)\n      }, _react2.default.createElement('i', {\n        className: 'el-icon-arrow-right'\n      })))), this.props.children), indicatorPosition !== 'none' && _react2.default.createElement('ul', {\n        className: this.classNames('el-carousel__indicators', {\n          'el-carousel__indicators--outside': indicatorPosition === 'outside' || this.iscard\n        })\n      }, items.map(function (item, index) {\n        return _react2.default.createElement('li', {\n          key: index,\n          className: _this4.classNames('el-carousel__indicator', {\n            'is-active': index === activeIndex\n          }),\n          onMouseEnter: _this4.throttledIndicatorHover.bind(_this4, index),\n          onClick: _this4.handleIndicatorClick.bind(_this4, index)\n        }, _react2.default.createElement('button', {\n          className: 'el-carousel__button'\n        }));\n      })));\n    }\n  }, {\n    key: 'iscard',\n    get: function get() {\n      var type = this.props.type;\n\n      if (type) {\n        return type === 'card' || type === 'flatcard';\n      }\n\n      return false;\n    }\n  }]);\n  return Carousel;\n}(_libs.Component);\n\nvar _default = Carousel;\nexports.default = _default;\nCarousel.childContextTypes = {\n  component: _libs.PropTypes.any\n};\nCarousel.propTypes = {\n  initialIndex: _libs.PropTypes.number,\n  height: _libs.PropTypes.string,\n  trigger: _libs.PropTypes.string,\n  autoplay: _libs.PropTypes.bool,\n  interval: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  indicatorPosition: _libs.PropTypes.string,\n  indicator: _libs.PropTypes.bool,\n  arrow: _libs.PropTypes.string,\n  type: _libs.PropTypes.oneOf(['card', 'flatcard']),\n  onChange: _libs.PropTypes.func\n};\nCarousel.defaultProps = {\n  initialIndex: 0,\n  trigger: 'hover',\n  autoplay: true,\n  interval: 3000,\n  indicator: true,\n  arrow: 'hover'\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Carousel, 'Carousel', 'src/carousel/Carousel.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/carousel/Carousel.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}