{"ast":null,"code":"// https://github.com/HarryStevens/shape2path#readme Version 2.0.9. Copyright 2019 Harry Stevens.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.shape2path = {});\n})(this, function (exports) {\n  'use strict';\n\n  var NUM_DEFAULT = 0; // The true default is an empty string, but it results in invalid path, so use\n  // \"0 0\"\n\n  var POINTS_DEFAULT = \"0 0\";\n\n  function circle2Path(options) {\n    var cx = options.cx || NUM_DEFAULT,\n        cy = options.cy || NUM_DEFAULT,\n        r = options.r || NUM_DEFAULT;\n    return \"M\" + cx + \",\" + cy + \" m\" + -r + \",0 a\" + r + \",\" + r + \" 0 1,0 \" + r * 2 + \",0 a\" + r + \",\" + r + \" 0 1,0 \" + -r * 2 + \",0\";\n  }\n\n  function ellipse2path(options) {\n    var cx = options.cx || NUM_DEFAULT,\n        cy = options.cy || NUM_DEFAULT,\n        rx = options.rx || NUM_DEFAULT,\n        ry = options.ry || NUM_DEFAULT;\n    return \"M\" + (cx - rx) + \",\" + cy + \" a\" + rx + \",\" + ry + \" 0 1,0 \" + rx * 2 + \",0 a\" + rx + \",\" + ry + \" 0 1,0 -\" + rx * 2 + \",0\";\n  }\n\n  function line2path(options) {\n    var x1 = options.x1 || NUM_DEFAULT,\n        x2 = options.x2 || NUM_DEFAULT,\n        y1 = options.y1 || NUM_DEFAULT,\n        y2 = options.y2 || NUM_DEFAULT;\n    return \"M\" + x1 + \",\" + y1 + \" L\" + x2 + \",\" + y2;\n  }\n\n  function polygon2path(options) {\n    var points = options.points || POINTS_DEFAULT;\n    return points.split(\" \").map(function (point, i) {\n      return i == 0 ? \"M\" + point : \"L\" + point;\n    }).join(\" \") + \" Z\";\n  }\n\n  function polyline2path(options) {\n    var points = options.points || POINTS_DEFAULT;\n    return points.split(\" \").map(function (point, i) {\n      return i == 0 ? \"M\" + point : \"L\" + point;\n    }).join(\" \");\n  }\n\n  function rect2Path(options) {\n    var x = options.x || NUM_DEFAULT,\n        y = options.y || NUM_DEFAULT,\n        w = (options.width || NUM_DEFAULT) + x,\n        h = (options.height || NUM_DEFAULT) + y;\n\n    if (options.rx || options.ry) {\n      var rx = options.rx ? options.rx : options.ry,\n          ry = options.ry ? options.ry : options.rx;\n      return \"M\" + (x + rx) + \",\" + y + \" H\" + (w - rx) + \" C\" + (w - rx) + \",\" + y + \" \" + w + \",\" + y + \" \" + w + \",\" + (y + ry) + \" V\" + (h - ry) + \" C\" + w + \",\" + (h - ry) + \" \" + w + \",\" + h + \" \" + (w - rx) + \",\" + h + \" H\" + (x + rx) + \" C\" + (x + rx) + \",\" + h + \" \" + x + \",\" + h + \" \" + x + \",\" + (h - ry) + \" V\" + (y + ry) + \" C\" + x + \",\" + (y + ry) + \" \" + x + \",\" + y + \" \" + (x + rx) + \",\" + y;\n    } else {\n      return \"M\" + x + \",\" + y + \" H\" + w + \" V\" + h + \" H\" + x + \" Z\";\n    }\n  }\n\n  exports.circle = circle2Path;\n  exports.ellipse = ellipse2path;\n  exports.line = line2path;\n  exports.polygon = polygon2path;\n  exports.polyline = polyline2path;\n  exports.rect = rect2Path;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":null,"metadata":{},"sourceType":"script"}