{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar classNames = require('classnames');\n/*\n\tBased on: https://github.com/paramaggarwal/react-dropzone\n*/\n\n\nvar Dropzone = React.createClass({\n  displayName: 'Dropzone',\n  propTypes: {\n    className: React.PropTypes.string,\n    label: React.PropTypes.string,\n    labelActive: React.PropTypes.string,\n    onDrop: React.PropTypes.func.isRequired\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      label: 'Drag Files Here',\n      labelActive: 'Drop to Upload'\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isDragActive: false\n    };\n  },\n  onDragLeave: function onDragLeave() {\n    this.setState({\n      isDragActive: false\n    });\n  },\n  onDragOver: function onDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n    this.setState({\n      isDragActive: true\n    });\n  },\n  onDrop: function onDrop(e) {\n    e.preventDefault();\n    this.setState({\n      isDragActive: false\n    });\n    var files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n\n    if (this.props.onDrop) {\n      files = Array.prototype.slice.call(files);\n      this.props.onDrop(files);\n    }\n  },\n  onClick: function onClick() {\n    this.refs.fileInput.click();\n  },\n  render: function render() {\n    var className = classNames('FileDragAndDrop', {\n      'active': this.state.isDragActive\n    }, this.props.className);\n    return React.createElement('button', {\n      className: className,\n      type: 'button',\n      onClick: this.onClick,\n      onDragLeave: this.onDragLeave,\n      onDragOver: this.onDragOver,\n      onDrop: this.onDrop\n    }, React.createElement('input', {\n      style: {\n        display: 'none'\n      },\n      type: 'file',\n      multiple: true,\n      ref: 'fileInput',\n      onChange: this.onDrop\n    }), React.createElement('div', {\n      className: 'FileDragAndDrop__label'\n    }, this.state.isDragActive ? this.props.labelActive : this.props.label), this.props.children);\n  }\n});\nmodule.exports = Dropzone;","map":null,"metadata":{},"sourceType":"script"}