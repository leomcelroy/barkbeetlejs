{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport { Icon } from '../../icon';\nimport { withTheme } from '../../theme';\n\nvar MenuOption =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MenuOption, _React$PureComponent);\n\n  function MenuOption() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuOption);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuOption)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function () {\n      _this.props.onSelect();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyPress\", function (e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        _this.props.onSelect();\n\n        e.preventDefault();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuOption, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          appearance = _this$props.appearance,\n          secondaryText = _this$props.secondaryText,\n          isSelected = _this$props.isSelected;\n      var themedClassName = theme.getMenuItemClassName(appearance, 'none');\n      var textProps = isSelected ? {\n        color: 'selected',\n        fontWeight: 500,\n        marginLeft: 16\n      } : {\n        marginLeft: 44\n      };\n      return React.createElement(Pane, {\n        id: id,\n        role: \"menuitemradio\",\n        tabIndex: 0,\n        className: themedClassName,\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress,\n        \"data-isselectable\": \"true\",\n        \"aria-checked\": isSelected,\n        height: 40,\n        display: \"flex\",\n        alignItems: \"center\"\n      }, isSelected && React.createElement(Icon, {\n        \"aria-hidden\": true,\n        color: \"selected\",\n        icon: \"tick\",\n        marginLeft: 16,\n        marginRight: -4,\n        size: 16,\n        flexShrink: 0\n      }), React.createElement(Text, _extends({}, textProps, {\n        marginRight: 16,\n        flex: 1\n      }), children), secondaryText && React.createElement(Text, {\n        marginRight: 16,\n        color: \"muted\"\n      }, secondaryText));\n    }\n  }]);\n\n  return MenuOption;\n}(React.PureComponent);\n\nMenuOption.displayName = \"MenuOption\";\n\n_defineProperty(MenuOption, \"propTypes\", {\n  /**\n   * The id attribute of the menu option.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * The icon before the label.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Secondary text shown on the right.\n   */\n  secondaryText: PropTypes.node,\n\n  /**\n   * The default theme only supports one default appearance.\n   */\n  appearance: PropTypes.string.isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n});\n\n_defineProperty(MenuOption, \"defaultProps\", {\n  appearance: 'default',\n  isSelected: false,\n  onClick: function onClick() {},\n  onSelect: function onSelect() {},\n  onKeyPress: function onKeyPress() {}\n});\n\nexport default withTheme(MenuOption);","map":null,"metadata":{},"sourceType":"module"}