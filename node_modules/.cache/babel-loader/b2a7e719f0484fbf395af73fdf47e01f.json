{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nvar _button = require('../button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _locale = require('../locale');\n\nvar _locale2 = _interopRequireDefault(_locale);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar typeMap = {\n  success: 'circle-check',\n  info: 'information',\n  warning: 'warning',\n  error: 'circle-cross'\n};\n\nvar MessageBox = function (_Component) {\n  (0, _inherits3.default)(MessageBox, _Component);\n\n  function MessageBox(props) {\n    (0, _classCallCheck3.default)(this, MessageBox);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (MessageBox.__proto__ || Object.getPrototypeOf(MessageBox)).call(this, props));\n\n    _this.state = {\n      visible: false,\n      inputValue: props.inputValue\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(MessageBox, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setState({\n        visible: true\n      });\n      document.activeElement && document.activeElement.blur();\n    }\n  }, {\n    key: 'confirmButtonText',\n    value: function confirmButtonText() {\n      return this.props.confirmButtonText || _locale2.default.t('el.messagebox.confirm');\n    }\n  }, {\n    key: 'cancelButtonText',\n    value: function cancelButtonText() {\n      return this.props.cancelButtonText || _locale2.default.t('el.messagebox.cancel');\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(value) {\n      this.setState({\n        inputValue: value\n      });\n      this.validate(value);\n    }\n  }, {\n    key: 'typeClass',\n    value: function typeClass() {\n      return this.props.type && typeMap[this.props.type] && 'el-icon-' + typeMap[this.props.type];\n    }\n  }, {\n    key: 'validate',\n    value: function validate(value) {\n      var _props = this.props,\n          inputPattern = _props.inputPattern,\n          inputValidator = _props.inputValidator,\n          inputErrorMessage = _props.inputErrorMessage;\n      var editorErrorMessage = void 0;\n\n      if (inputPattern && !inputPattern.test(value)) {\n        editorErrorMessage = inputErrorMessage || _locale2.default.t('el.messagebox.error');\n      }\n\n      if (typeof inputValidator === 'function') {\n        var validateResult = inputValidator(value);\n\n        if (validateResult === false) {\n          editorErrorMessage = inputErrorMessage || _locale2.default.t('el.messagebox.error');\n        }\n\n        if (typeof validateResult === 'string') {\n          editorErrorMessage = validateResult;\n        }\n      }\n\n      this.setState({\n        editorErrorMessage: editorErrorMessage\n      });\n      return !editorErrorMessage;\n    }\n  }, {\n    key: 'handleAction',\n    value: function handleAction(action) {\n      var _props2 = this.props,\n          modal = _props2.modal,\n          promise = _props2.promise,\n          showInput = _props2.showInput;\n\n      if (modal) {\n        switch (action) {\n          case 'cancel':\n            promise.reject();\n            break;\n\n          case 'confirm':\n            if (modal === 'prompt') {\n              if (this.validate(this.state.inputValue || '')) {\n                if (showInput) {\n                  promise.resolve({\n                    value: this.state.inputValue,\n                    action: action\n                  });\n                } else {\n                  promise.resolve(action);\n                }\n              } else {\n                return;\n              }\n            } else {\n              promise.resolve();\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        promise.resolve(action);\n      }\n\n      this.close();\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          willUnmount = _props3.willUnmount,\n          title = _props3.title,\n          showClose = _props3.showClose,\n          message = _props3.message,\n          showInput = _props3.showInput,\n          inputPlaceholder = _props3.inputPlaceholder,\n          showCancelButton = _props3.showCancelButton,\n          cancelButtonClass = _props3.cancelButtonClass,\n          showConfirmButton = _props3.showConfirmButton,\n          confirmButtonClass = _props3.confirmButtonClass,\n          customClass = _props3.customClass,\n          inputType = _props3.inputType;\n      var _state = this.state,\n          visible = _state.visible,\n          editorErrorMessage = _state.editorErrorMessage;\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', {\n        style: {\n          position: 'absolute',\n          zIndex: 2001\n        }\n      }, _react2.default.createElement(_libs.Transition, {\n        name: 'msgbox-fade',\n        onAfterLeave: function onAfterLeave() {\n          willUnmount && willUnmount();\n        }\n      }, _react2.default.createElement(_libs.View, {\n        show: visible\n      }, _react2.default.createElement('div', {\n        className: this.classNames('el-message-box__wrapper', customClass)\n      }, _react2.default.createElement('div', {\n        className: 'el-message-box'\n      }, title && _react2.default.createElement('div', {\n        className: 'el-message-box__header'\n      }, _react2.default.createElement('div', {\n        className: 'el-message-box__title'\n      }, title), showClose && _react2.default.createElement('button', {\n        type: 'button',\n        className: 'el-message-box__headerbtn',\n        'aria-label': 'Close',\n        onClick: this.handleAction.bind(this, 'cancel')\n      }, _react2.default.createElement('i', {\n        className: 'el-message-box__close el-icon-close'\n      }))), message && _react2.default.createElement('div', {\n        className: 'el-message-box__content'\n      }, _react2.default.createElement('div', {\n        className: this.classNames('el-message-box__status', this.typeClass())\n      }), _react2.default.createElement('div', {\n        className: 'el-message-box__message',\n        style: {\n          marginLeft: this.typeClass() ? '50px' : '0'\n        }\n      }, _react2.default.createElement('div', null, message)), _react2.default.createElement(_libs.View, {\n        show: showInput\n      }, _react2.default.createElement('div', {\n        className: 'el-message-box__input'\n      }, _react2.default.createElement(_input2.default, {\n        className: this.classNames({\n          'invalid': editorErrorMessage\n        }),\n        type: inputType,\n        value: this.state.inputValue,\n        placeholder: inputPlaceholder,\n        onChange: this.onChange.bind(this)\n      }), _react2.default.createElement('div', {\n        className: 'el-message-box__errormsg',\n        style: {\n          visibility: editorErrorMessage ? 'visible' : 'hidden'\n        }\n      }, editorErrorMessage)))), _react2.default.createElement('div', {\n        className: 'el-message-box__btns'\n      }, _react2.default.createElement(_libs.View, {\n        show: showCancelButton\n      }, _react2.default.createElement(_button2.default, {\n        className: cancelButtonClass,\n        onClick: this.handleAction.bind(this, 'cancel')\n      }, this.cancelButtonText())), _react2.default.createElement(_libs.View, {\n        show: showConfirmButton\n      }, _react2.default.createElement(_button2.default, {\n        className: this.classNames('el-button--primary', confirmButtonClass),\n        onClick: this.handleAction.bind(this, 'confirm')\n      }, this.confirmButtonText())))))))), _react2.default.createElement(_libs.Transition, {\n        name: 'v-modal'\n      }, _react2.default.createElement(_libs.View, {\n        show: visible\n      }, _react2.default.createElement('div', {\n        className: 'v-modal',\n        style: {\n          zIndex: 1006\n        }\n      }))));\n    }\n  }]);\n  return MessageBox;\n}(_libs.Component);\n\nvar _default = MessageBox;\nexports.default = _default;\nMessageBox.propTypes = {\n  modal: _libs.PropTypes.oneOf(['alert', 'confirm', 'prompt']),\n  type: _libs.PropTypes.oneOf(['success', 'warning', 'info', 'error']),\n  title: _libs.PropTypes.string,\n  message: _libs.PropTypes.oneOfType([_libs.PropTypes.string, _libs.PropTypes.element]),\n  showInput: _libs.PropTypes.bool,\n  showClose: _libs.PropTypes.bool,\n  showCancelButton: _libs.PropTypes.bool,\n  showConfirmButton: _libs.PropTypes.bool,\n  confirmButtonText: _libs.PropTypes.string,\n  cancelButtonText: _libs.PropTypes.string,\n  cancelButtonClass: _libs.PropTypes.string,\n  confirmButtonClass: _libs.PropTypes.string,\n  customClass: _libs.PropTypes.string,\n  inputPlaceholder: _libs.PropTypes.string,\n  inputPattern: _libs.PropTypes.regex,\n  inputValidator: _libs.PropTypes.func,\n  inputErrorMessage: _libs.PropTypes.string,\n  inputValue: _libs.PropTypes.any,\n  inputType: _libs.PropTypes.string,\n  promise: _libs.PropTypes.object,\n  onClose: _libs.PropTypes.func\n};\nMessageBox.defaultProps = {\n  title: '提示',\n  showClose: true,\n  showConfirmButton: true\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(typeMap, 'typeMap', 'src/message-box/MessageBox.jsx');\n\n  __REACT_HOT_LOADER__.register(MessageBox, 'MessageBox', 'src/message-box/MessageBox.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/message-box/MessageBox.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}