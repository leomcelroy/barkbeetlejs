{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactClickOutside = require('react-click-outside');\n\nvar _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);\n\nvar _debounce = require('throttle-debounce/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _popper = require('popper.js');\n\nvar _popper2 = _interopRequireDefault(_popper);\n\nvar _libs = require('../../libs');\n\nvar _Menu = require('./Menu');\n\nvar _Menu2 = _interopRequireDefault(_Menu);\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _locale = require('../locale');\n\nvar _locale2 = _interopRequireDefault(_locale);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Cascader = function (_Component) {\n  (0, _inherits3.default)(Cascader, _Component);\n\n  function Cascader(props) {\n    (0, _classCallCheck3.default)(this, Cascader);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Cascader.__proto__ || Object.getPrototypeOf(Cascader)).call(this, props));\n\n    _this.state = {\n      currentValue: props.value,\n      menu: null,\n      menuVisible: false,\n      inputHover: false,\n      inputValue: '',\n      flatOptions: _this.flattenOptions(props.options)\n    };\n    _this.debouncedInputChange = (0, _debounce2.default)(props.debounce, function () {\n      var value = _this.state.inputValue;\n\n      var before = _this.props.beforeFilter(value);\n\n      if (before && before.then) {\n        _this.state.menu.setState({\n          options: [{\n            __IS__FLAT__OPTIONS: true,\n            label: _locale2.default.t('el.cascader.loading'),\n            value: '',\n            disabled: true\n          }]\n        });\n\n        before.then(function () {\n          _this.handleInputChange(value);\n        });\n      } else {\n        _this.handleInputChange(value);\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass3.default)(Cascader, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        component: this\n      };\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.input = _reactDom2.default.findDOMNode(this.refs.input);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        currentValue: props.value,\n        flatOptions: this.flattenOptions(props.options)\n      });\n      this.state.menu.setState({\n        options: props.options\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props, state) {\n      var menuVisible = this.state.menuVisible;\n\n      if (menuVisible !== state.menuVisible) {\n        if (menuVisible) {\n          this.showMenu();\n\n          if (this.popperJS) {\n            this.popperJS.update();\n          } else {\n            this.popperJS = new _popper2.default(this.input, _reactDom2.default.findDOMNode(this.refs.menu), {\n              placement: 'bottom-start',\n              modifiers: {\n                computeStyle: {\n                  gpuAcceleration: false\n                }\n              }\n            });\n          }\n        } else {\n          this.hideMenu();\n\n          if (this.popperJS) {\n            this.popperJS.destroy();\n          }\n\n          delete this.popperJS;\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.popperJS) {\n        this.popperJS.destroy();\n      }\n    }\n  }, {\n    key: 'placeholder',\n    value: function placeholder() {\n      return this.props.placeholder || _locale2.default.t('el.cascader.placeholder');\n    }\n  }, {\n    key: 'updatePopper',\n    value: function updatePopper() {\n      if (this.popperJS) {\n        this.popperJS.update();\n      }\n    }\n  }, {\n    key: 'initMenu',\n    value: function initMenu(menu) {\n      this.state.menu = menu;\n    }\n  }, {\n    key: 'showMenu',\n    value: function showMenu() {\n      this.state.menu.setState({\n        value: this.state.currentValue.slice(0),\n        visible: true,\n        options: this.props.options,\n        inputWidth: this.input.offsetWidth - 2\n      });\n    }\n  }, {\n    key: 'hideMenu',\n    value: function hideMenu() {\n      this.setState({\n        inputValue: ''\n      });\n\n      if (this.state.menu) {\n        this.state.menu.setState({\n          visible: false\n        });\n      }\n    }\n  }, {\n    key: 'handleActiveItemChange',\n    value: function handleActiveItemChange(value) {\n      this.updatePopper();\n\n      if (this.props.activeItemChange) {\n        this.props.activeItemChange(value);\n      }\n    }\n  }, {\n    key: 'handlePick',\n    value: function handlePick(value) {\n      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.setState({\n        currentValue: value\n      });\n\n      if (close) {\n        this.setState({\n          menuVisible: false\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(value);\n      }\n    }\n  }, {\n    key: 'handleInputChange',\n    value: function handleInputChange(value) {\n      var _this2 = this;\n\n      if (!this.state.menuVisible) return;\n      var flatOptions = this.state.flatOptions;\n\n      if (!value) {\n        this.state.menu.setState({\n          options: this.props.options\n        });\n        return;\n      }\n\n      var filteredFlatOptions = flatOptions.filter(function (optionsStack) {\n        return optionsStack.some(function (option) {\n          return new RegExp(value, 'i').test(option[_this2.labelKey()]);\n        });\n      });\n\n      if (filteredFlatOptions.length > 0) {\n        filteredFlatOptions = filteredFlatOptions.map(function (optionStack) {\n          return {\n            __IS__FLAT__OPTIONS: true,\n            value: optionStack.map(function (item) {\n              return item[_this2.valueKey()];\n            }),\n            label: _this2.renderFilteredOptionLabel(value, optionStack)\n          };\n        });\n      } else {\n        filteredFlatOptions = [{\n          __IS__FLAT__OPTIONS: true,\n          label: _locale2.default.t('el.cascader.noMatch'),\n          value: '',\n          disabled: true\n        }];\n      }\n\n      this.state.menu.setState({\n        options: filteredFlatOptions\n      });\n    }\n  }, {\n    key: 'renderFilteredOptionLabel',\n    value: function renderFilteredOptionLabel(inputValue, optionsStack) {\n      var _this3 = this;\n\n      return optionsStack.map(function (option, index) {\n        var label = option[_this3.labelKey()];\n\n        var keywordIndex = label.toLowerCase().indexOf(inputValue.toLowerCase());\n        var labelPart = label.slice(keywordIndex, inputValue.length + keywordIndex);\n        var node = keywordIndex > -1 ? _this3.highlightKeyword(label, labelPart) : label;\n        return index === 0 ? node : [' / ', node];\n      });\n    }\n  }, {\n    key: 'highlightKeyword',\n    value: function highlightKeyword(label, keyword) {\n      return label.split(keyword).map(function (node, index) {\n        return index === 0 ? node : [_react2.default.createElement('span', {\n          className: 'el-cascader-menu__item__keyword'\n        }, keyword), node];\n      });\n    }\n  }, {\n    key: 'flattenOptions',\n    value: function flattenOptions(options) {\n      var _this4 = this;\n\n      var ancestor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var flatOptions = [];\n      options.forEach(function (option) {\n        var optionsStack = ancestor.concat(option);\n\n        if (!option[_this4.childrenKey()]) {\n          flatOptions.push(optionsStack);\n        } else {\n          if (_this4.changeOnSelect) {\n            flatOptions.push(optionsStack);\n          }\n\n          flatOptions = flatOptions.concat(_this4.flattenOptions(option[_this4.childrenKey()], optionsStack));\n        }\n      });\n      return flatOptions;\n    }\n  }, {\n    key: 'clearValue',\n    value: function clearValue(e) {\n      e.stopPropagation();\n      this.handlePick([], true);\n    }\n  }, {\n    key: 'handleClickOutside',\n    value: function handleClickOutside() {\n      if (this.state.menuVisible) {\n        this.setState({\n          menuVisible: false\n        });\n      }\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      if (this.props.disabled) return;\n\n      if (this.filterable) {\n        this.setState({\n          menuVisible: true\n        });\n        return;\n      }\n\n      this.setState({\n        menuVisible: !this.state.menuVisible\n      });\n    }\n    /* Computed Methods */\n\n  }, {\n    key: 'labelKey',\n    value: function labelKey() {\n      return this.props.props.label || 'label';\n    }\n  }, {\n    key: 'valueKey',\n    value: function valueKey() {\n      return this.props.props.value || 'value';\n    }\n  }, {\n    key: 'childrenKey',\n    value: function childrenKey() {\n      return this.props.props.children || 'children';\n    }\n  }, {\n    key: 'currentLabels',\n    value: function currentLabels() {\n      var _this5 = this;\n\n      var options = this.props.options;\n      var labels = [];\n      this.state.currentValue.forEach(function (value) {\n        var targetOption = options && options.filter(function (option) {\n          return option[_this5.valueKey()] === value;\n        })[0];\n\n        if (targetOption) {\n          labels.push(targetOption[_this5.labelKey()]);\n          options = targetOption[_this5.childrenKey()];\n        }\n      });\n      return labels;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      var _props = this.props,\n          size = _props.size,\n          disabled = _props.disabled,\n          filterable = _props.filterable,\n          clearable = _props.clearable,\n          showAllLevels = _props.showAllLevels;\n      var _state = this.state,\n          menuVisible = _state.menuVisible,\n          inputHover = _state.inputHover,\n          inputValue = _state.inputValue;\n      var currentLabels = this.currentLabels();\n      return _react2.default.createElement('span', {\n        ref: 'reference',\n        className: this.className('el-cascader', size ? 'el-cascader--' + size : '', {\n          'is-opened': menuVisible,\n          'is-disabled': disabled\n        })\n      }, _react2.default.createElement('span', {\n        onClick: this.handleClick.bind(this),\n        onMouseEnter: function onMouseEnter() {\n          _this6.setState({\n            inputHover: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this6.setState({\n            inputHover: false\n          });\n        }\n      }, _react2.default.createElement(_input2.default, {\n        ref: 'input',\n        readOnly: !filterable,\n        placeholder: currentLabels.length ? undefined : this.placeholder(),\n        value: inputValue,\n        onChange: function onChange(value) {\n          _this6.setState({\n            inputValue: value\n          });\n        },\n        onKeyUp: this.debouncedInputChange.bind(this),\n        size: size,\n        disabled: disabled,\n        icon: clearable && inputHover && currentLabels.length ? _react2.default.createElement('i', {\n          className: 'el-input__icon el-icon-circle-close el-cascader__clearIcon',\n          onClick: this.clearValue.bind(this)\n        }) : _react2.default.createElement('i', {\n          className: this.classNames('el-input__icon el-icon-caret-bottom', {\n            'is-reverse': menuVisible\n          })\n        })\n      }), _react2.default.createElement(_libs.View, {\n        show: currentLabels.length\n      }, _react2.default.createElement('span', {\n        className: 'el-cascader__label'\n      }, showAllLevels ? currentLabels.map(function (label, index) {\n        return _react2.default.createElement('label', {\n          key: index\n        }, label, index < currentLabels.length - 1 && _react2.default.createElement('span', null, ' / '));\n      }) : currentLabels[currentLabels.length - 1]))), _react2.default.createElement(_Menu2.default, {\n        ref: 'menu'\n      }));\n    }\n  }]);\n  return Cascader;\n}(_libs.Component);\n\nCascader.childContextTypes = {\n  component: _libs.PropTypes.any\n};\nCascader.propTypes = {\n  options: _libs.PropTypes.arrayOf(_libs.PropTypes.shape({\n    value: _libs.PropTypes.string\n  })).isRequired,\n  props: _libs.PropTypes.object,\n  value: _libs.PropTypes.array,\n  placeholder: _libs.PropTypes.string,\n  disabled: _libs.PropTypes.bool,\n  clearable: _libs.PropTypes.bool,\n  changeOnSelect: _libs.PropTypes.bool,\n  popperClass: _libs.PropTypes.string,\n  expandTrigger: _libs.PropTypes.string,\n  filterable: _libs.PropTypes.bool,\n  size: _libs.PropTypes.string,\n  showAllLevels: _libs.PropTypes.bool,\n  debounce: _libs.PropTypes.number,\n  activeItemChange: _libs.PropTypes.func,\n  beforeFilter: _libs.PropTypes.func,\n  onChange: _libs.PropTypes.func\n};\nCascader.defaultProps = {\n  value: [],\n  clearable: false,\n  expandTrigger: 'click',\n  showAllLevels: true,\n  debounce: 300,\n  props: {\n    children: 'children',\n    label: 'label',\n    value: 'value',\n    disabled: 'disabled'\n  },\n  beforeFilter: function beforeFilter() {\n    return function () {};\n  }\n};\n\nvar _default = (0, _reactClickOutside2.default)(Cascader);\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Cascader, 'Cascader', 'src/cascader/Cascader.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/cascader/Cascader.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}