{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/components/PocketButton.js\";\nimport React, { Component } from 'react';\nimport { Button, Dialog, TextInputField, SegmentedControl, Heading, Link, Strong, Text } from 'evergreen-ui';\nimport * as utils from '../utils.js';\n\nvar PocketButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PocketButton, _Component);\n\n  function PocketButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PocketButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PocketButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isShown: false,\n      showAdvanced: false,\n      cutDepthValid: true,\n      toolDiameterValid: true,\n      stepoverPercentageValid: true,\n      toleranceValid: true,\n      jogHeightValid: true,\n      jogRateValid: true,\n      feedRateValid: true,\n      dogboneOptions: [{\n        label: 'true',\n        value: true\n      }, {\n        label: 'false',\n        value: false\n      }],\n      dogboneTemp: _this.props.params.dogbone\n    };\n    return _this;\n  }\n\n  _createClass(PocketButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        isShown: this.state.isShown,\n        title: \"Settings for this Pocket Cut\",\n        onCloseComplete: function onCloseComplete() {\n          return _this2.setState({\n            isShown: false,\n            showAdvanced: false,\n            dogboneTemp: _this2.props.params.dogbone\n          });\n        },\n        onConfirm: function onConfirm() {\n          var valid = _this2.state.cutDepthValid && _this2.state.toolDiameterValid && _this2.state.stepoverPercentageValid && _this2.state.toleranceValid && _this2.state.jogHeightValid && _this2.state.jogRateValid && _this2.state.feedRateValid;\n\n          if (valid) {\n            var cutDepth = Number(document.getElementsByName(\"cutDepth\")[0].value);\n            var toolDiameter = Number(document.getElementsByName(\"toolDiameter\")[0].value);\n            var stepoverPercentage = Number(document.getElementsByName(\"stepoverPercentage\")[0].value); //must be between 1 and 100%\n\n            var tolerance = Number(document.getElementsByName(\"tolerance\")[0].value);\n            var jogHeight = Number(document.getElementsByName(\"jogHeight\")[0].value);\n            var jogRate = Number(document.getElementsByName(\"jogRate\")[0].value);\n            var feedRate = Number(document.getElementsByName(\"feedRate\")[0].value); // if (isNaN(toolDiameter)) toolDiameter = this.props.params.toolDiameter;\n            // if (isNaN(stepoverPercentage)) stepoverPercentage = this.props.params.stepoverPercentage; //must be between 1 and 100%\n            // if (isNaN(tolerance)) tolerance = this.props.params.tolerance;\n            // if (isNaN(jogHeight)) jogHeight = this.props.params.jogHeight;\n            // if (isNaN(jogRate)) jogRate = this.props.params.jogRate;\n            // if (isNaN(feedRate)) feedRate = this.props.params.feedRate;\n\n            if (utils.helpExtract(\"cutDepth\") === \"\") cutDepth = _this2.props.params.cutDepth;\n            if (utils.helpExtract(\"toolDiameter\") === \"\") toolDiameter = _this2.props.params.toolDiameter;\n            if (utils.helpExtract(\"stepoverPercentage\") === \"\") stepoverPercentage = _this2.props.params.stepoverPercentage; //must be between 1 and 100%\n\n            if (utils.helpExtract(\"tolerance\") === \"\") tolerance = _this2.props.params.tolerance;\n            if (utils.helpExtract(\"jogHeight\") === \"\") jogHeight = _this2.props.params.jogHeight;\n            if (utils.helpExtract(\"jogRate\") === \"\") jogRate = _this2.props.params.jogRate;\n            if (utils.helpExtract(\"feedRate\") === \"\") feedRate = _this2.props.params.feedRate;\n            var dogbone = _this2.state.dogboneTemp; //derived parameters\n\n            var passDepth = cutDepth / 2;\n            var toolRadius = toolDiameter / 2;\n            var compensatedRadius = toolRadius + tolerance;\n            var tempFloor = Math.ceil(cutDepth / passDepth); //should this be ceiling or floor, I think ceil\n\n            var actualPassDepth = cutDepth / tempFloor;\n            var depthOfPasses = utils.makeSeries(actualPassDepth, actualPassDepth, tempFloor).map(function (n) {\n              return -n;\n            }); //settings will be compiled to a single object here\n\n            var parameters = utils.deepcopy(_this2.props.params);\n            parameters[\"dogbone\"] = dogbone;\n\n            if (!isNaN(tolerance)) {\n              parameters[\"tolerance\"] = tolerance;\n            }\n\n            if (!isNaN(toolDiameter)) {\n              parameters[\"toolDiameter\"] = toolDiameter;\n              parameters[\"compensatedRadius\"] = compensatedRadius;\n            }\n\n            if (!isNaN(cutDepth)) {\n              parameters[\"cutDepth\"] = cutDepth;\n              parameters[\"depthOfPasses\"] = depthOfPasses;\n            }\n\n            if (!isNaN(feedRate)) {\n              parameters[\"feedRate\"] = feedRate;\n            }\n\n            if (!isNaN(jogHeight)) {\n              parameters[\"jogHeight\"] = jogHeight;\n            }\n\n            if (!isNaN(jogRate)) {\n              parameters[\"jogRate\"] = jogRate;\n            }\n\n            if (!isNaN(stepoverPercentage)) {\n              stepoverPercentage = stepoverPercentage / 100;\n              parameters[\"stepoverPercentage\"] = stepoverPercentage;\n            }\n\n            console.log(\"parameters\", parameters);\n\n            _this2.setState({\n              isShown: false\n            }); //TODO: create toolpath with parameter settings here\n\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            cutDepthValid: valid\n          });\n        },\n        isInvalid: !this.state.cutDepthValid,\n        name: \"cutDepth\",\n        description: this.state.cutDepthValid ? \"\" : \"please enter a valid number\",\n        label: \"Depth of Cut for this Pocket\",\n        placeholder: String(this.props.params.cutDepth),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Link, {\n        onClick: function onClick() {\n          return _this2.setState({\n            showAdvanced: !_this2.state.showAdvanced\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.showAdvanced ? \"Hide\" : \"Show\", \" Advanced Options\"), this.state.showAdvanced && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TextInputField, {\n        marginTop: 20,\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            toolDiameterValid: valid\n          });\n        },\n        isInvalid: !this.state.toolDiameterValid,\n        name: \"toolDiameter\",\n        description: this.state.toolDiameterValid ? \"\" : \"please enter a valid number\",\n        label: \"Tool Diameter\",\n        placeholder: String(this.props.params.toolDiameter),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n          valid = 0 < Number(e.target.value) && Number(e.target.value) <= 100; //process value here\n\n          _this2.setState({\n            stepoverPercentageValid: valid\n          });\n        },\n        isInvalid: !this.state.stepoverPercentageValid,\n        name: \"stepoverPercentage\",\n        description: this.state.stepoverPercentageValid ? \"\" : \"please enter a valid number\",\n        label: \"Stepover Percentage\",\n        placeholder: String(this.props.params.stepoverPercentage * 100),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            feedRateValid: valid\n          });\n        },\n        isInvalid: !this.state.feedRateValid,\n        name: \"feedRate\",\n        description: this.state.feedRateValid ? \"\" : \"please enter a valid number\",\n        label: \"Feed Rate\",\n        placeholder: String(this.props.params.feedRate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            toleranceValid: valid\n          });\n        },\n        isInvalid: !this.state.toleranceValid,\n        name: \"tolerance\",\n        description: this.state.toleranceValid ? \"\" : \"please enter a valid number\",\n        label: \"Tolerance\",\n        placeholder: String(this.props.params.tolerance),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            jogRateValid: valid\n          });\n        },\n        isInvalid: !this.state.jogRateValid,\n        name: \"jogRate\",\n        description: this.state.jogRateValid ? \"\" : \"please enter a valid number\",\n        label: \"Jog Rate\",\n        placeholder: String(this.props.params.jogRate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(TextInputField, {\n        onChange: function onChange(e) {\n          var valid = utils.isNum(e.target.value);\n\n          _this2.setState({\n            jogHeightValid: valid\n          });\n        },\n        isInvalid: !this.state.jogHeightValid,\n        name: \"jogHeight\",\n        description: this.state.jogHeightValid ? \"\" : \"please enter a valid number\",\n        label: \"Jog Height\",\n        placeholder: String(this.props.params.jogHeight),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Heading, {\n        marginTop: 20,\n        size: 400,\n        color: \"rgba(67, 90, 111, .91)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Auto Dogbone\"), React.createElement(SegmentedControl, {\n        marginTop: 4,\n        options: this.state.dogboneOptions,\n        value: this.state.dogboneTemp,\n        onChange: function onChange(value) {\n          var dogboneTemp = value;\n\n          _this2.setState({\n            dogboneTemp: dogboneTemp\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.setState({\n            isShown: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Pocket\"));\n    }\n  }]);\n\n  return PocketButton;\n}(Component);\n\nexport { PocketButton };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/components/PocketButton.js"],"names":["React","Component","Button","Dialog","TextInputField","SegmentedControl","Heading","Link","Strong","Text","utils","PocketButton","state","isShown","showAdvanced","cutDepthValid","toolDiameterValid","stepoverPercentageValid","toleranceValid","jogHeightValid","jogRateValid","feedRateValid","dogboneOptions","label","value","dogboneTemp","props","params","dogbone","setState","valid","cutDepth","Number","document","getElementsByName","toolDiameter","stepoverPercentage","tolerance","jogHeight","jogRate","feedRate","helpExtract","passDepth","toolRadius","compensatedRadius","tempFloor","Math","ceil","actualPassDepth","depthOfPasses","makeSeries","map","n","parameters","deepcopy","isNaN","console","log","e","isNum","target","String"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button, Dialog, TextInputField, SegmentedControl, Heading, Link, Strong, Text} from 'evergreen-ui';\nimport * as utils from '../utils.js';\n\nclass PocketButton extends Component {\n\n  state = {\n    isShown: false,\n    showAdvanced: false,\n    cutDepthValid: true,\n    toolDiameterValid: true,\n    stepoverPercentageValid: true,\n    toleranceValid: true,\n    jogHeightValid: true,\n    jogRateValid: true,\n    feedRateValid: true,\n    dogboneOptions: [\n      { label: 'true', value: true },\n      { label: 'false', value: false },\n    ],\n    dogboneTemp: this.props.params.dogbone,\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Dialog\n          isShown={this.state.isShown}\n          title=\"Settings for this Pocket Cut\"\n          onCloseComplete={() => this.setState({\n            isShown:false,\n            showAdvanced: false,\n            dogboneTemp: this.props.params.dogbone,\n          })}\n          onConfirm={() => {\n            let valid = this.state.cutDepthValid && this.state.toolDiameterValid &&\n                        this.state.stepoverPercentageValid && this.state.toleranceValid &&\n                        this.state.jogHeightValid && this.state.jogRateValid && this.state.feedRateValid;\n            if (valid) {\n              let cutDepth = Number(document.getElementsByName(\"cutDepth\")[0].value);\n              let toolDiameter = Number(document.getElementsByName(\"toolDiameter\")[0].value);\n              let stepoverPercentage = Number(document.getElementsByName(\"stepoverPercentage\")[0].value); //must be between 1 and 100%\n              let tolerance = Number(document.getElementsByName(\"tolerance\")[0].value);\n              let jogHeight = Number(document.getElementsByName(\"jogHeight\")[0].value);\n              let jogRate = Number(document.getElementsByName(\"jogRate\")[0].value);\n              let feedRate = Number(document.getElementsByName(\"feedRate\")[0].value);\n\n              // if (isNaN(toolDiameter)) toolDiameter = this.props.params.toolDiameter;\n              // if (isNaN(stepoverPercentage)) stepoverPercentage = this.props.params.stepoverPercentage; //must be between 1 and 100%\n              // if (isNaN(tolerance)) tolerance = this.props.params.tolerance;\n              // if (isNaN(jogHeight)) jogHeight = this.props.params.jogHeight;\n              // if (isNaN(jogRate)) jogRate = this.props.params.jogRate;\n              // if (isNaN(feedRate)) feedRate = this.props.params.feedRate;\n\n              if (utils.helpExtract(\"cutDepth\") === \"\") cutDepth = this.props.params.cutDepth;\n              if (utils.helpExtract(\"toolDiameter\") === \"\") toolDiameter = this.props.params.toolDiameter;\n              if (utils.helpExtract(\"stepoverPercentage\") === \"\") stepoverPercentage = this.props.params.stepoverPercentage; //must be between 1 and 100%\n              if (utils.helpExtract(\"tolerance\") === \"\") tolerance = this.props.params.tolerance;\n              if (utils.helpExtract(\"jogHeight\") === \"\") jogHeight = this.props.params.jogHeight;\n              if (utils.helpExtract(\"jogRate\") === \"\") jogRate = this.props.params.jogRate;\n              if (utils.helpExtract(\"feedRate\") === \"\") feedRate = this.props.params.feedRate;\n\n              let dogbone = this.state.dogboneTemp;\n\n              //derived parameters\n              let passDepth = cutDepth/2;\n              let toolRadius = toolDiameter/2;\n              let compensatedRadius = toolRadius + tolerance;\n              let tempFloor = Math.ceil(cutDepth/passDepth); //should this be ceiling or floor, I think ceil\n              let actualPassDepth = cutDepth/tempFloor;\n              let depthOfPasses = utils.makeSeries(actualPassDepth, actualPassDepth, tempFloor).map(n => -n);\n\n              //settings will be compiled to a single object here\n              let parameters = utils.deepcopy(this.props.params);\n\n              parameters[\"dogbone\"] = dogbone;\n\n              if (!isNaN(tolerance)) { parameters[\"tolerance\"] = tolerance; }\n\n              if (!isNaN(toolDiameter)) {\n                parameters[\"toolDiameter\"] = toolDiameter;\n                parameters[\"compensatedRadius\"] = compensatedRadius;\n\n              }\n              if (!isNaN(cutDepth)) {\n                parameters[\"cutDepth\"] = cutDepth;\n                parameters[\"depthOfPasses\"] = depthOfPasses;\n              }\n              if (!isNaN(feedRate)) { parameters[\"feedRate\"] = feedRate; }\n              if (!isNaN(jogHeight)) { parameters[\"jogHeight\"] = jogHeight; }\n              if (!isNaN(jogRate)) { parameters[\"jogRate\"] = jogRate; }\n\n              if (!isNaN(stepoverPercentage)) {\n                stepoverPercentage = stepoverPercentage/100;\n                parameters[\"stepoverPercentage\"] = stepoverPercentage;\n              }\n\n              console.log(\"parameters\", parameters);\n\n              this.setState({\n                isShown:false,\n              });\n\n              //TODO: create toolpath with parameter settings here\n\n            }\n          }}>\n\n          <TextInputField\n            onChange={e => {\n              let valid = utils.isNum(e.target.value);\n              this.setState({cutDepthValid:valid})\n            }}\n            isInvalid={!this.state.cutDepthValid}\n            name=\"cutDepth\"\n            description={(this.state.cutDepthValid) ? \"\" : \"please enter a valid number\"}\n            label=\"Depth of Cut for this Pocket\"\n            placeholder={String(this.props.params.cutDepth)}/>\n\n          <Link onClick={() => this.setState({showAdvanced:!this.state.showAdvanced})}>{(this.state.showAdvanced) ? \"Hide\" : \"Show\"} Advanced Options</Link>\n          {this.state.showAdvanced &&\n          <div>\n          <TextInputField\n            marginTop={20}\n            onChange={e => {\n              let valid = utils.isNum(e.target.value);\n              this.setState({toolDiameterValid:valid})\n            }}\n            isInvalid={!this.state.toolDiameterValid}\n            name=\"toolDiameter\"\n            description={(this.state.toolDiameterValid) ? \"\" : \"please enter a valid number\"}\n            label=\"Tool Diameter\"\n            placeholder={String(this.props.params.toolDiameter)}/>\n\n          <TextInputField\n            onChange={e => {\n              let valid = utils.isNum(e.target.value);\n              valid = 0 < Number(e.target.value) && Number(e.target.value) <= 100;\n              //process value here\n              this.setState({stepoverPercentageValid:valid})\n            }}\n            isInvalid={!this.state.stepoverPercentageValid}\n            name=\"stepoverPercentage\"\n            description={(this.state.stepoverPercentageValid) ? \"\" : \"please enter a valid number\"}\n            label=\"Stepover Percentage\"\n            placeholder={String(this.props.params.stepoverPercentage * 100)}/>\n\n            <TextInputField\n              onChange={e => {\n                let valid = utils.isNum(e.target.value);\n                this.setState({feedRateValid:valid})\n              }}\n              isInvalid={!this.state.feedRateValid}\n              name=\"feedRate\"\n              description={(this.state.feedRateValid) ? \"\" : \"please enter a valid number\"}\n              label=\"Feed Rate\"\n              placeholder={String(this.props.params.feedRate)}/>\n\n              <TextInputField\n                onChange={e => {\n                  let valid = utils.isNum(e.target.value);\n                  this.setState({toleranceValid:valid})\n                }}\n                isInvalid={!this.state.toleranceValid}\n                name=\"tolerance\"\n                description={(this.state.toleranceValid) ? \"\" : \"please enter a valid number\"}\n                label=\"Tolerance\"\n                placeholder={String(this.props.params.tolerance)}/>\n\n            <TextInputField\n              onChange={e => {\n                let valid = utils.isNum(e.target.value);\n                this.setState({jogRateValid:valid})\n              }}\n              isInvalid={!this.state.jogRateValid}\n              name=\"jogRate\"\n              description={(this.state.jogRateValid) ? \"\" : \"please enter a valid number\"}\n              label=\"Jog Rate\"\n              placeholder={String(this.props.params.jogRate)}/>\n\n              <TextInputField\n                onChange={e => {\n                  let valid = utils.isNum(e.target.value);\n                  this.setState({jogHeightValid:valid})\n                }}\n                isInvalid={!this.state.jogHeightValid}\n                name=\"jogHeight\"\n                description={(this.state.jogHeightValid) ? \"\" : \"please enter a valid number\"}\n                label=\"Jog Height\"\n                placeholder={String(this.props.params.jogHeight)}/>\n\n              <Heading marginTop={20} size={400} color={\"rgba(67, 90, 111, .91)\"}>Auto Dogbone</Heading>\n              <SegmentedControl\n                marginTop={4}\n                options={this.state.dogboneOptions}\n                value={this.state.dogboneTemp}\n                onChange={value => {\n                  let dogboneTemp = value;\n                  this.setState({ dogboneTemp });\n                }}\n              />\n              </div>}\n        </Dialog>\n        <Button onClick={() => this.setState({isShown:true})}>Pocket</Button>\n      </div>\n    );\n  }\n}\n\nexport {PocketButton};\n"]},"metadata":{},"sourceType":"module"}