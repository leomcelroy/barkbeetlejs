{"ast":null,"code":"import _objectSpread from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js\";\nimport React, { Component, PureComponent } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { Workplane } from './Workplane.js';\nimport { kk } from './joints/koshikake.js';\nimport { profile } from './toolpaths/profile.js';\nimport { pocket } from './toolpaths/pocket.js';\nimport { Button, Heading, Pane } from 'evergreen-ui'; //import {replaceWithPath} from './svg_to_makerjs.js';\n\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components\n// const store = createStore({\n//   shapes: {},\n//   toolpaths:[],\n//   selected: [],\n//   material: \"wood\",\n//   thickness: 34,\n//   units: \"mm\",\n//   zero: \"bottomleft\",\n// });\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"uploadSVG\",\n    // constructor() {\n    //   super();\n    //\n    //   this.state = {\n    //     shapes: {},\n    //     toolpaths:[],\n    //     selected: [],\n    //     material: \"wood\",\n    //     thickness: 34,\n    //     units: \"mm\",\n    //     zero: \"bottom_left\",\n    //   }\n    // };\n    value: function uploadSVG(e) {\n      //helper function\n      var replaceWithPath = function replaceWithPath(child) {\n        //why cant I put this in a different file\n        console.log(\"child\", child);\n\n        if (child.name === \"g\") {\n          return child.children.map(function (grandchild) {\n            return replaceWithPath(grandchild);\n          });\n        }\n\n        if (child.name === \"rectangle\") {\n          var x;\n          var y;\n          var width;\n          var height;\n          var rx;\n          var ry;\n          var temp = s2p.rect({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rx: rx,\n            ry: ry\n          });\n          return mjs.importer.fromSVGPathData(temp);\n        }\n\n        if (child.name === \"circle\") {\n          var cx;\n          var cy;\n          var r;\n\n          var _temp = s2p.rect({\n            cx: cx,\n            cy: cy,\n            r: r\n          });\n\n          return mjs.importer.fromSVGPathData(_temp);\n        }\n\n        if (child.name === \"ellipse\") {\n          var _cx;\n\n          var _cy;\n\n          var _rx;\n\n          var _ry;\n\n          var _temp2 = s2p.ellipse({\n            cx: _cx,\n            cy: _cy,\n            rx: _rx,\n            ry: _ry\n          });\n\n          return mjs.importer.fromSVGPathData(_temp2);\n        }\n\n        if (child.name === \"polygon\") {\n          var points;\n\n          var _temp3 = s2p.polygon({\n            points: points\n          });\n\n          return mjs.importer.fromSVGPathData(_temp3);\n        }\n\n        if (child.name === \"polyline\") {\n          var _points;\n\n          var _temp4 = s2p.polyline({\n            points: _points\n          });\n\n          return mjs.importer.fromSVGPathData(_temp4);\n        }\n\n        if (child.name === \"line\") {\n          var x1;\n          var x2;\n          var y1;\n          var y2;\n\n          var _temp5 = s2p.line({\n            x1: x1,\n            x2: x2,\n            y1: y1,\n            y2: y2\n          });\n\n          return mjs.importer.fromSVGPathData(_temp5);\n        }\n\n        if (child.name === \"path\") {\n          var makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n          return makerjsPath;\n        }\n      }; //main event\n\n\n      var files = e.target.files;\n      var file = files[0];\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        var text = event.target.result;\n        svgson.parse(text).then(function (json) {\n          var svg = json.children.map(function (child) {\n            return replaceWithPath(child);\n          });\n          svg = svg.flat(1); //TODO: what does the argument do again?\n          //TODO: update state to have makerjs models\n\n          console.log(\"svg\", svg);\n          var models = {};\n          svg.forEach(function (shape) {\n            models[utils.makeID()] = shape;\n          });\n          console.log(\"models\", models); //ultimately I will set state of app\n        });\n      };\n\n      reader.readAsText(file);\n    } // updateFromChild(newState) {\n    //   console.log(\"why\")\n    //   if (newState === \"mm\") {\n    //     this.setState({units:\"mm\"});\n    //   } else if (newState === \"in\") {\n    //     this.setState({units:\"in\"});\n    //   }\n    // }\n    // shouldComponentUpdate(nextProps, nextState) { //TODO: never needed this before, why now\n    //   return this.props.children !== nextProps.children;\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      var test = kk; //test = mjs.model.originate(test);\n\n      var testProfile = test.models.profile;\n      var testPocket = test.models.pocket; //let profileCut = profile(testProfile, params);\n      //let pocketCut = pocket(testPocket, params);\n      // let drawings = [test, profile(test)];\n      // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n      //testing if internal outlines will make acceptable pocket paths, appears so\n      //let p2 = pocket(testPocket, params).drawing;\n      // let t1 = new mjs.models.Oval(20,20)\n      // let t2 = mjs.model.move(new mjs.models.Oval(20,20), [19,0])\n      // let test0 = mjs.model.combineUnion(t1, t2);\n      // console.log(\"test0\", test0)\n      //let test1 = pocket(test0, params);\n      // console.log(test0)\n      // test0 = mjs.model.move(test0, [50, 0]);\n\n      var cuts = {};\n      store.getState().toolpaths.forEach(function (path) {\n        cuts[path.id] = path.geometry.drawing;\n      });\n      var model = {\n        models: {\n          shapes: {\n            models: _objectSpread({}, store.getState().shapes)\n          },\n          cuts: {\n            models: _objectSpread({}, cuts) //pocketCut2: pocket(p2, params).drawing,\n            // test0,\n            // test1,\n\n          }\n        }\n      };\n      model.models.cuts.layer = \"red\"; // model = mjs.model.originate(model);\n      // model = mjs.model.zero(model);\n\n      model['paths'] = {\n        origin: new mjs.paths.Circle(params.compensatedRadius)\n      };\n      var modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n      var viewModel = mjs.exporter.toSVG(modelToView, {\n        useSvgPathOnly: false,\n        strokeWidth: \".5mm\" // layerOptions:{\n        //   cuts: {\n        //     stroke: \"red\"\n        //   }\n        // },\n\n      }); //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n\n      viewModel = [viewModel]; //let p = material_type(this.state.dialogs.material_type, this);\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        onMouseDown: function onMouseDown(e) {\n          return console.log(\"div target\", e.target.getAttribute(\"data-route\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mainEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref) {\n          return _this.upload = _ref;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: function onChange(e) {\n          return _this.uploadSVG(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(Button, {\n        marginRight: 4,\n        onClick: function onClick(e) {\n          return _this.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"save\"))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialType, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialThickness, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \" \", React.createElement(Units, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \" \", React.createElement(Origin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \" \", React.createElement(AdvancedOptions, {\n        default: true,\n        params: store.getState().defaultParameters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Create Toolpaths\"), React.createElement(Button, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Profile\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(PocketButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(Button, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Drill\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Toolpaths\"), React.createElement(Button, {\n        marginTop: 4,\n        onClick: function onClick() {//utils.download(test1.filename, test1.gcode);\n          //utils.download(profileCut.filename, profileCut.gcode);\n          //utils.download(pocketCut.filename, pocketCut.gcode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"download gcode\"), React.createElement(ToolpathList, {\n        state: store.getState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        onClick: function onClick() {\n          return console.log(store.getState());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Log State\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js"],"names":["React","Component","PureComponent","utils","mjs","params","s2p","svgson","Workplane","kk","profile","pocket","Button","Heading","Pane","MaterialType","MaterialThickness","Origin","Units","PocketButton","AdvancedOptions","ToolpathList","store","App","e","replaceWithPath","child","console","log","name","children","map","grandchild","x","y","width","height","rx","ry","temp","rect","importer","fromSVGPathData","cx","cy","r","ellipse","points","polygon","polyline","x1","x2","y1","y2","line","makerjsPath","attributes","d","files","target","file","reader","FileReader","onload","event","text","result","parse","then","json","svg","flat","models","forEach","shape","makeID","readAsText","test","testProfile","testPocket","cuts","getState","toolpaths","path","id","geometry","drawing","model","shapes","layer","origin","paths","Circle","compensatedRadius","modelToView","scale","deepcopy","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","getAttribute","ref","upload","display","uploadSVG","click","defaultParameters"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport {Workplane} from './Workplane.js'\nimport {kk} from './joints/koshikake.js';\nimport {profile} from './toolpaths/profile.js';\nimport {pocket} from './toolpaths/pocket.js';\n\nimport {Button, Heading, Pane} from 'evergreen-ui';\n//import {replaceWithPath} from './svg_to_makerjs.js';\n\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components\n\n// const store = createStore({\n//   shapes: {},\n//   toolpaths:[],\n//   selected: [],\n//   material: \"wood\",\n//   thickness: 34,\n//   units: \"mm\",\n//   zero: \"bottomleft\",\n// });\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //\n  //   this.state = {\n  //     shapes: {},\n  //     toolpaths:[],\n  //     selected: [],\n  //     material: \"wood\",\n  //     thickness: 34,\n  //     units: \"mm\",\n  //     zero: \"bottom_left\",\n  //   }\n  // };\n\n  uploadSVG(e) {\n    //helper function\n    const replaceWithPath = (child) => { //why cant I put this in a different file\n      console.log(\"child\", child);\n\n      if (child.name === \"g\") {\n        return child.children.map(grandchild => replaceWithPath(grandchild));\n      }\n\n      if (child.name === \"rectangle\") {\n        let x;\n        let y;\n        let width;\n        let height;\n        let rx;\n        let ry;\n\n        let temp = s2p.rect({x, y, width, height, rx, ry});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"circle\") {\n        let cx;\n        let cy;\n        let r;\n\n        let temp = s2p.rect({cx, cy, r});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"ellipse\") {\n        let cx;\n        let cy;\n        let rx;\n        let ry;\n\n        let temp = s2p.ellipse({cx, cy, rx, ry});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"polygon\") {\n        let points\n\n        let temp = s2p.polygon({points});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"polyline\") {\n        let points\n\n        let temp = s2p.polyline({points});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"line\") {\n        let x1;\n        let x2;\n        let y1;\n        let y2;\n\n        let temp = s2p.line({x1, x2, y1, y2});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"path\") {\n        let makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n        return makerjsPath;\n      }\n    }\n\n    //main event\n    let files = e.target.files;\n    let file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n      let text = event.target.result;\n\n      svgson.parse(text).then((json) => {\n        let svg = json.children.map(child => {\n          return replaceWithPath(child);\n        });\n\n        svg = svg.flat(1); //TODO: what does the argument do again?\n\n        //TODO: update state to have makerjs models\n        console.log(\"svg\", svg);\n        let models = {};\n\n        svg.forEach(shape => {\n          models[utils.makeID()] = shape;\n        })\n\n        console.log(\"models\", models);\n\n        //ultimately I will set state of app\n      });\n    };\n\n    reader.readAsText(file);\n  }\n\n  // updateFromChild(newState) {\n  //   console.log(\"why\")\n  //   if (newState === \"mm\") {\n  //     this.setState({units:\"mm\"});\n  //   } else if (newState === \"in\") {\n  //     this.setState({units:\"in\"});\n  //   }\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) { //TODO: never needed this before, why now\n  //   return this.props.children !== nextProps.children;\n  // }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    let test = kk;\n    //test = mjs.model.originate(test);\n    let testProfile = test.models.profile;\n    let testPocket = test.models.pocket;\n    //let profileCut = profile(testProfile, params);\n    //let pocketCut = pocket(testPocket, params);\n\n    // let drawings = [test, profile(test)];\n    // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n\n    //testing if internal outlines will make acceptable pocket paths, appears so\n    //let p2 = pocket(testPocket, params).drawing;\n    // let t1 = new mjs.models.Oval(20,20)\n    // let t2 = mjs.model.move(new mjs.models.Oval(20,20), [19,0])\n    // let test0 = mjs.model.combineUnion(t1, t2);\n    // console.log(\"test0\", test0)\n    //let test1 = pocket(test0, params);\n    // console.log(test0)\n    // test0 = mjs.model.move(test0, [50, 0]);\n\n    let cuts = {};\n\n    store.getState().toolpaths.forEach(path => {\n      cuts[path.id] = path.geometry.drawing;\n    })\n\n    let model = {\n      models: {\n        shapes: {\n          models: {\n            ...store.getState().shapes\n          }\n        },\n        cuts: {\n          models: {\n            //profileCut: profileCut.drawing,\n            //pocketCut: pocketCut.drawing,\n            //test1: test1.drawing\n            ...cuts\n          }\n        }\n        //pocketCut2: pocket(p2, params).drawing,\n        // test0,\n        // test1,\n      }\n    }\n\n    model.models.cuts.layer = \"red\";\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n    model['paths'] = {\n      origin: new mjs.paths.Circle(params.compensatedRadius)\n    }\n\n    let modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n    let viewModel = mjs.exporter.toSVG(modelToView, {\n      useSvgPathOnly:false,\n      strokeWidth:\".5mm\",\n      // layerOptions:{\n      //   cuts: {\n      //     stroke: \"red\"\n      //   }\n      // },\n    });\n    //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n    viewModel = [viewModel];\n\n    //let p = material_type(this.state.dialogs.material_type, this);\n    return (\n      <div\n        className=\"wrapper\"\n        onMouseDown={(e) => console.log(\"div target\", e.target.getAttribute(\"data-route\"))}>\n\n        <div className=\"mainEvent\">\n          <Workplane groups={viewModel}/>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => this.upload = ref}\n              style={{ display: 'none' }}\n              onChange={(e) => this.uploadSVG(e)}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => this.upload.click()}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button>\n              save\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType/></Pane>\n            <Pane marginTop={4}> <MaterialThickness/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin/></Pane>\n            <Pane marginTop={4}> <AdvancedOptions default={true} params={store.getState().defaultParameters}/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            <Button marginTop={4}>Profile</Button><br/>\n            <Pane marginTop={4}><PocketButton/></Pane>\n            <Button marginTop={4}>Drill</Button><br/>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <Button\n              marginTop={4}\n              onClick={() => {\n                //utils.download(test1.filename, test1.gcode);\n                //utils.download(profileCut.filename, profileCut.gcode);\n                //utils.download(pocketCut.filename, pocketCut.gcode);\n              }}\n              >\n                download gcode\n            </Button>\n            <ToolpathList state={store.getState()}/>\n          </div>\n        </div>\n        <Button onClick={() => console.log(store.getState())}>Log State</Button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}