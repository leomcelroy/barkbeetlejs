{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/Workplane.js\";\nimport React, { Component } from 'react';\nimport * as utils from './utils.js';\n\nvar Workplane =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Workplane, _Component);\n\n  function Workplane() {\n    var _this;\n\n    _classCallCheck(this, Workplane);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Workplane).call(this));\n    _this.state = {\n      v0: 0,\n      v1: 0,\n      v2: 500,\n      v3: 300,\n      mousedown: false\n    };\n    return _this;\n  }\n\n  _createClass(Workplane, [{\n    key: \"wheel\",\n    value: function wheel(e) {\n      e.preventDefault();\n\n      if (e.ctrlKey) {\n        if (e.deltaY < 0) {\n          console.log('zoom in');\n        }\n\n        if (e.deltaY > 0) {\n          console.log('zoom out');\n        }\n\n        return;\n      }\n\n      if (e.deltaY < 0) {\n        //console.log('scrolling up');\n        var v1 = this.state.v1 + e.deltaY;\n        this.setState({\n          v1: v1\n        });\n      }\n\n      if (e.deltaY > 0) {\n        //console.log('scrolling down');\n        var _v = this.state.v1 + e.deltaY;\n\n        this.setState({\n          v1: _v\n        });\n      }\n\n      if (e.deltaX < 0) {\n        //console.log('scrolling left');\n        var v0 = this.state.v0 + e.deltaX;\n        this.setState({\n          v0: v0\n        });\n      }\n\n      if (e.deltaX > 0) {\n        //console.log('scrolling right');\n        var _v2 = this.state.v0 + e.deltaX;\n\n        this.setState({\n          v0: _v2\n        });\n      }\n    } //   // Find your root SVG element\n    // var svg = document.querySelector('svg');\n    //\n    // // Create an SVGPoint for future math\n    // var pt = svg.createSVGPoint();\n    //\n    // // Get point in global SVG space\n    // function cursorPoint(evt){\n    //   pt.x = evt.clientX; pt.y = evt.clientY;\n    //   return pt.matrixTransform(svg.getScreenCTM().inverse());\n    // }\n    //\n    // svg.addEventListener('mousemove',function(evt){\n    //   var loc = cursorPoint(evt);\n    //   // Use loc.x and loc.y here\n    // },false);\n\n  }, {\n    key: \"mouseDown\",\n    value: function mouseDown(e) {\n      var point = e;\n      this.setState({\n        mousedown: true\n      });\n    }\n  }, {\n    key: \"mouseMove\",\n    value: function mouseMove(e) {\n      var loc = utils.getSVGpoint(e, this.state.v0, this.state.v1, this.state.v2, this.state.v3);\n      console.log(loc.x, loc.y);\n    }\n  }, {\n    key: \"mouseUp\",\n    value: function mouseUp(e) {\n      this.setState({\n        mousedown: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"svg\", {\n        viewBox: \"\".concat(this.state.v0, \" \").concat(this.state.v1, \" \").concat(this.state.v2, \" \").concat(this.state.v3),\n        xmlns: \"http://www.w3.org/2000/svg\",\n        onWheel: function onWheel(e) {\n          return _this2.wheel(e);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this2.mouseDown(e);\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this2.mouseMove(e);\n        },\n        onMouseUp: function onMouseUp(e) {\n          return _this2.mouseUp(e);\n        },\n        style: {\n          border: \"1px solid #cccccc\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"circle\", {\n        cx: \"0\",\n        cy: \"0\",\n        r: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"g\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.path\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Workplane;\n}(Component);\n\nexport { Workplane };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/Workplane.js"],"names":["React","Component","utils","Workplane","state","v0","v1","v2","v3","mousedown","e","preventDefault","ctrlKey","deltaY","console","log","setState","deltaX","point","loc","getSVGpoint","x","y","wheel","mouseDown","mouseMove","mouseUp","border","__html","props","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as utils from './utils.js';\n\n\nclass Workplane extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      v0: 0,\n      v1: 0,\n      v2: 500,\n      v3: 300,\n      mousedown: false,\n    }\n  }\n\n  wheel(e) {\n    e.preventDefault();\n\n    if (e.ctrlKey) {\n\n      if (e.deltaY < 0) {\n        console.log('zoom in');\n      }\n\n      if (e.deltaY > 0) {\n        console.log('zoom out');\n      }\n\n      return\n    }\n\n    if (e.deltaY < 0) {\n      //console.log('scrolling up');\n\n      let v1 = this.state.v1 + e.deltaY;\n      this.setState({v1});\n    }\n    if (e.deltaY > 0) {\n      //console.log('scrolling down');\n\n      let v1 = this.state.v1 + e.deltaY;\n      this.setState({v1});\n    }\n    if (e.deltaX < 0) {\n      //console.log('scrolling left');\n\n      let v0 = this.state.v0 + e.deltaX;\n      this.setState({v0});\n    }\n    if (e.deltaX > 0) {\n      //console.log('scrolling right');\n\n      let v0 = this.state.v0 + e.deltaX;\n      this.setState({v0});\n    }\n  }\n\n//   // Find your root SVG element\n// var svg = document.querySelector('svg');\n//\n// // Create an SVGPoint for future math\n// var pt = svg.createSVGPoint();\n//\n// // Get point in global SVG space\n// function cursorPoint(evt){\n//   pt.x = evt.clientX; pt.y = evt.clientY;\n//   return pt.matrixTransform(svg.getScreenCTM().inverse());\n// }\n//\n// svg.addEventListener('mousemove',function(evt){\n//   var loc = cursorPoint(evt);\n//   // Use loc.x and loc.y here\n// },false);\n\n  mouseDown(e) {\n    let point = e;\n\n    this.setState({\n      mousedown: true\n    });\n  }\n\n  mouseMove(e) {\n    let loc = utils.getSVGpoint(e, this.state.v0, this.state.v1, this.state.v2, this.state.v3);\n\n    console.log(loc.x, loc.y)\n  }\n\n  mouseUp(e) {\n    this.setState({\n      mousedown: false\n    });\n  }\n\n  render() {\n    return (\n      <svg\n        viewBox={`${this.state.v0} ${this.state.v1} ${this.state.v2} ${this.state.v3}`}\n        xmlns={\"http://www.w3.org/2000/svg\"}\n        onWheel={(e) => this.wheel(e)}\n        onMouseDown={(e) => this.mouseDown(e)}\n        onMouseMove={(e) => this.mouseMove(e)}\n        onMouseUp={(e) => this.mouseUp(e)}\n        style={{border: \"1px solid #cccccc\"}}>\n          <circle cx=\"0\" cy=\"0\" r=\"10\"/>\n          <g dangerouslySetInnerHTML={{__html: this.props.path}}/>\n      </svg>\n    );\n  }\n}\n\nexport {Workplane}\n"]},"metadata":{},"sourceType":"module"}