{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../typography';\nimport TableCell from './TableCell';\nvar ellipsis = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n};\n\nvar TextTableCell =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TextTableCell, _PureComponent);\n\n  function TextTableCell() {\n    _classCallCheck(this, TextTableCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextTableCell).apply(this, arguments));\n  }\n\n  _createClass(TextTableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          textProps = _this$props.textProps,\n          isNumber = _this$props.isNumber,\n          placeholder = _this$props.placeholder,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"textProps\", \"isNumber\", \"placeholder\"]);\n\n      return React.createElement(TableCell, props, React.createElement(Text, _extends({\n        size: 300,\n        flex: \"1\"\n      }, ellipsis, isNumber ? {\n        fontFamily: 'mono'\n      } : {}, textProps), children));\n    }\n  }]);\n\n  return TextTableCell;\n}(PureComponent);\n\nTextTableCell.displayName = \"TextTableCell\";\n\n_defineProperty(TextTableCell, \"propTypes\", _objectSpread({}, TableCell.propTypes, {\n  /**\n   * Adds textAlign: right and fontFamily: mono.\n   */\n  isNumber: PropTypes.bool.isRequired,\n\n  /**\n   * Pass additional props to the Text component.\n   */\n  textProps: PropTypes.object\n}));\n\n_defineProperty(TextTableCell, \"defaultProps\", {\n  isNumber: false\n});\n\nexport { TextTableCell as default };","map":null,"metadata":{},"sourceType":"module"}