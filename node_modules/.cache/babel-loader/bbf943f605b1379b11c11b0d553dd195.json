{"ast":null,"code":"(function () {\n  var Query, coreChars, countDir, getCharCodes, getExtension, opt_char_re, truncatedUpperCase, _ref;\n\n  _ref = require(\"./pathScorer\"), countDir = _ref.countDir, getExtension = _ref.getExtension;\n\n  module.exports = Query = function () {\n    function Query(query, _arg) {\n      var optCharRegEx, pathSeparator, _ref1;\n\n      _ref1 = _arg != null ? _arg : {}, optCharRegEx = _ref1.optCharRegEx, pathSeparator = _ref1.pathSeparator;\n\n      if (!(query && query.length)) {\n        return null;\n      }\n\n      this.query = query;\n      this.query_lw = query.toLowerCase();\n      this.core = coreChars(query, optCharRegEx);\n      this.core_lw = this.core.toLowerCase();\n      this.core_up = truncatedUpperCase(this.core);\n      this.depth = countDir(query, query.length, pathSeparator);\n      this.ext = getExtension(this.query_lw);\n      this.charCodes = getCharCodes(this.query_lw);\n    }\n\n    return Query;\n  }();\n\n  opt_char_re = /[ _\\-:\\/\\\\]/g;\n\n  coreChars = function coreChars(query, optCharRegEx) {\n    if (optCharRegEx == null) {\n      optCharRegEx = opt_char_re;\n    }\n\n    return query.replace(optCharRegEx, '');\n  };\n\n  truncatedUpperCase = function truncatedUpperCase(str) {\n    var char, upper, _i, _len;\n\n    upper = \"\";\n\n    for (_i = 0, _len = str.length; _i < _len; _i++) {\n      char = str[_i];\n      upper += char.toUpperCase()[0];\n    }\n\n    return upper;\n  };\n\n  getCharCodes = function getCharCodes(str) {\n    var charCodes, i, len;\n    len = str.length;\n    i = -1;\n    charCodes = [];\n\n    while (++i < len) {\n      charCodes[str.charCodeAt(i)] = true;\n    }\n\n    return charCodes;\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}