{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\nimport clipperOffset from './clipperOffset.js';\nimport { clipOffsetContour, clipOffsetContours } from '../unmakerjs/clipper.js';\n\nvar len = function len(toolpath) {\n  return Object.keys(toolpath).length;\n};\n\nvar isToolpath = function isToolpath(toolpath) {\n  // console.log(\"toolpath\", toolpath);\n  if (len(toolpath) >= 1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar intToolpaths = function intToolpaths(geo, params) {\n  var contours = {};\n  var count = 0;\n  var pass = clipOffsetContours([geo], -params.compensatedRadius);\n  console.log(\"clipOffsetContours\", clipOffsetContours([geo], -params.compensatedRadius));\n  pass = pass.flat();\n\n  if (isToolpath(pass) !== true) {\n    return contours;\n  }\n\n  while (isToolpath(pass)) {\n    contours[count] = pass;\n    count++;\n    pass = clipOffsetContours(contours[count - 1], -params.compensatedRadius * params.stepoverPercentage / 100);\n    pass = pass.flat();\n  }\n\n  return contours;\n};\n\nvar pocket = function pocket(contour, params) {\n  var outlines = intToolpaths(contour, params);\n  var keyPoints = Object.values(outlines).map(function (outline) {\n    return outline.map(function (line) {\n      return [line.origin[0], line.origin[1]];\n    });\n  });\n  outlines = Object.values(outlines).flat(); // console.log(\"keyPoints\", keyPoints);\n\n  var gcodePoints = keyPoints.map(function (points) {\n    var raise = points.length > 1;\n    var firstPoint = points[0];\n    firstPoint = \"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(params.feedRate);\n\n    if (raise) {\n      return [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate), firstPoint, //want to jog to this one\n      \"plunge\"].concat(_toConsumableArray(points.map(function (point) {\n        return \"G1 X\".concat(point[0], \" Y\").concat(point[1], \" F\").concat(params.feedRate);\n      })), [firstPoint, \"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]);\n    } else {\n      return [firstPoint, \"plunge\"].concat(_toConsumableArray(points.map(function (point) {\n        return \"G1 X\".concat(point[0], \" Y\").concat(point[1], \" F\").concat(params.feedRate);\n      })), [firstPoint]);\n    }\n  });\n  var paths = gcodePoints.flat(); // let firstPoint = keyPoints[0][0][0];\n\n  var paths2 = params.depthOfPasses.map(function (p, i) {\n    return _toConsumableArray(paths.map(function (x) {\n      return x === \"plunge\" ? \"G1 Z\".concat(params.depthOfPasses[i], \" F12.0\") : x;\n    }));\n  }); // console.log(paths2)\n\n  paths2 = paths2.flat();\n  var preamble = [params.units, \"G90\"];\n  var gcode = [].concat(preamble, [\"(end of preamble)\", \"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)], _toConsumableArray(paths2), [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]); // write to a new file named\n\n  var filename = 'testGcodePocket.gcode';\n  var text = gcode.join('\\n');\n  return {\n    drawing: outlines,\n    gcode: text,\n    filename: filename\n  };\n};\n\nexport { pocket };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/toolpaths/pocket.js"],"names":["mjs","clipperOffset","clipOffsetContour","clipOffsetContours","len","toolpath","Object","keys","length","isToolpath","intToolpaths","geo","params","contours","count","pass","compensatedRadius","console","log","flat","stepoverPercentage","pocket","contour","outlines","keyPoints","values","map","outline","line","origin","gcodePoints","points","raise","firstPoint","feedRate","jogHeight","jogRate","point","paths","paths2","depthOfPasses","p","i","x","preamble","units","gcode","filename","text","join","drawing"],"mappings":"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","sourcesContent":["// makerjs model, depth, params -> pocket toolpath\nimport * as mjs from 'makerjs';\nimport clipperOffset from './clipperOffset.js';\nimport {clipOffsetContour, clipOffsetContours} from '../unmakerjs/clipper.js'\n\n\nconst len = (toolpath) => Object.keys(toolpath).length;\n\nconst isToolpath = (toolpath) => {\n  // console.log(\"toolpath\", toolpath);\n\n  if (len(toolpath) >= 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst intToolpaths = (geo, params) => {\n  let contours = {};\n  let count = 0;\n\n  let pass = clipOffsetContours([geo], -params.compensatedRadius);\n  console.log(\"clipOffsetContours\", clipOffsetContours([geo], -params.compensatedRadius))\n\n  pass = pass.flat();\n\n  if (isToolpath(pass) !== true) {\n    return contours;\n  }\n\n  while ( isToolpath(pass)) {\n    contours[count] = pass;\n    count++;\n    pass = clipOffsetContours(contours[count - 1], -params.compensatedRadius * params.stepoverPercentage/100);\n\n    pass = pass.flat();\n  }\n\n  return contours;\n}\n\nconst pocket = (contour, params) => {\n\n  let outlines = intToolpaths(contour, params);\n\n  let keyPoints = Object.values(outlines).map(outline => outline.map(line => [line.origin[0], line.origin[1]]));\n\n  outlines = Object.values(outlines).flat();\n\n  // console.log(\"keyPoints\", keyPoints);\n\n  let gcodePoints = keyPoints.map(points => {\n    let raise = points.length > 1;\n    let firstPoint = points[0];\n\n    firstPoint = `G1 X${firstPoint[0]} Y${firstPoint[1]} F${params.feedRate}`;\n\n    if (raise) {\n      return [\n        `G1 Z${params.jogHeight} F${params.jogRate}`,\n        firstPoint, //want to jog to this one\n        \"plunge\",\n        ...points.map(point => `G1 X${point[0]} Y${point[1]} F${params.feedRate}`),\n        firstPoint,\n        `G1 Z${params.jogHeight} F${params.jogRate}`,\n      ]\n    } else {\n      return [\n        firstPoint,\n        \"plunge\",\n        ...points.map(point => `G1 X${point[0]} Y${point[1]} F${params.feedRate}`),\n        firstPoint\n      ]\n    }\n  });\n\n  let paths = gcodePoints.flat();\n\n  // let firstPoint = keyPoints[0][0][0];\n\n  let paths2 = params.depthOfPasses.map((p,i) => [\n    ...paths.map(x => (x === \"plunge\") ? `G1 Z${params.depthOfPasses[i]} F12.0` : x),\n  ])\n\n  // console.log(paths2)\n\n  paths2 = paths2.flat();\n\n  let preamble = [params.units, \"G90\"];\n\n  let gcode = [\n    ...preamble,\n    \"(end of preamble)\",\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n    // `G0 X${firstPoint[0]} Y${firstPoint[1]}`,\n    ...paths2,\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n  ]\n\n  // write to a new file named\n  let filename = 'testGcodePocket.gcode';\n\n  let text = gcode.join('\\n');\n\n  return {drawing: outlines, gcode: text, filename};\n};\n\n\nexport {pocket};\n"]},"metadata":{},"sourceType":"module"}