{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bar = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nvar _util = require('./util');\n\nvar _dom = require('../../libs/utils/dom');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Bar = exports.Bar = function (_Component) {\n  (0, _inherits3.default)(Bar, _Component);\n\n  function Bar(props) {\n    (0, _classCallCheck3.default)(this, Bar);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Bar.__proto__ || Object.getPrototypeOf(Bar)).call(this, props));\n\n    _this.clickTrackHandler = _this.clickTrackHandler.bind(_this);\n    _this.clickThumbHandler = _this.clickThumbHandler.bind(_this);\n    _this.mouseMoveDocumentHandler = _this.mouseMoveDocumentHandler.bind(_this);\n    _this.mouseUpDocumentHandler = _this.mouseUpDocumentHandler.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Bar, [{\n    key: 'clickThumbHandler',\n    value: function clickThumbHandler(e) {\n      this.startDrag(e);\n      this[this.bar.axis] = e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction]);\n    }\n  }, {\n    key: 'clickTrackHandler',\n    value: function clickTrackHandler(e) {\n      var offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]);\n      var thumbHalf = this.thumbRef[this.bar.offset] / 2;\n      var thumbPositionPercentage = (offset - thumbHalf) * 100 / this.rootRef[this.bar.offset];\n      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;\n    }\n  }, {\n    key: 'startDrag',\n    value: function startDrag(e) {\n      e.nativeEvent.stopImmediatePropagation;\n      this.cursorDown = true;\n      (0, _dom.on)(document, 'mousemove', this.mouseMoveDocumentHandler);\n      (0, _dom.on)(document, 'mouseup', this.mouseUpDocumentHandler);\n\n      document.onselectstart = function () {\n        return false;\n      };\n    }\n  }, {\n    key: 'mouseMoveDocumentHandler',\n    value: function mouseMoveDocumentHandler(e) {\n      if (this.cursorDown === false) return;\n      var prevPage = this[this.bar.axis];\n      if (!prevPage) return;\n      var offset = e[this.bar.client] - this.rootRef.getBoundingClientRect()[this.bar.direction];\n      var thumbClickPosition = this.thumbRef[this.bar.offset] - prevPage;\n      var thumbPositionPercentage = (offset - thumbClickPosition) * 100 / this.rootRef[this.bar.offset];\n      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;\n    }\n  }, {\n    key: 'mouseUpDocumentHandler',\n    value: function mouseUpDocumentHandler() {\n      this.cursorDown = false;\n      this[this.bar.axis] = 0;\n      (0, _dom.off)(document, 'mousemove', this.mouseMoveDocumentHandler);\n      document.onselectstart = null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          size = _props.size,\n          move = _props.move;\n      return _react2.default.createElement('div', {\n        ref: function ref(root) {\n          return _this2.rootRef = root;\n        },\n        className: this.classNames('el-scrollbar__bar', 'is-' + this.bar.key),\n        onMouseDown: this.clickTrackHandler\n      }, _react2.default.createElement('div', {\n        ref: function ref(thumb) {\n          return _this2.thumbRef = thumb;\n        },\n        className: 'el-scrollbar__thumb',\n        onMouseDown: this.clickThumbHandler,\n        style: (0, _util.renderThumbStyle)({\n          size: size,\n          move: move,\n          bar: this.bar\n        })\n      }));\n    }\n  }, {\n    key: 'bar',\n    get: function get() {\n      return _util.BAR_MAP[this.props.vertical ? 'vertical' : 'horizontal'];\n    }\n  }, {\n    key: 'wrap',\n    get: function get() {\n      return this.props.getParentWrap();\n    }\n  }]);\n  return Bar;\n}(_libs.Component);\n\nBar.propTypes = {\n  vertical: _libs.PropTypes.bool,\n  size: _libs.PropTypes.string,\n  move: _libs.PropTypes.number,\n  getParentWrap: _libs.PropTypes.func.isRequired\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Bar, 'Bar', 'src/scrollbar/Bar.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}