{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as s2p from 'shape2path';\nimport * as mjs from 'makerjs';\nimport * as svgson from 'svgson';\nimport { Workplane } from './Workplane.js';\nimport Button from '@material-ui/core/Button';\nimport { kk } from './joints/koshikake.js';\nimport { profile } from './toolpaths/profile.js';\nimport { pocket } from './toolpaths/pocket.js';\nimport * as params from './parameters.js'; // utils.download(filename, text);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      shapes: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"uploadSVG\",\n    value: function uploadSVG(e) {\n      var replaceWithPath = function replaceWithPath(child) {\n        if (child.name === \"g\") {\n          return child.children.map(function (grandchild) {\n            return replaceWithPath(grandchild);\n          });\n        }\n\n        if (child.name === \"rectangle\") {\n          var temp = s2p.rect({\n            x: 0,\n            y: 120,\n            width: 200,\n            height: 200,\n            rx: 20,\n            ry: 20\n          });\n          return mjs.importer.fromSVGPathData(temp);\n        }\n\n        if (child.name === \"path\") {\n          var makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n          return makerjsPath;\n        }\n      };\n\n      var files = e.target.files;\n      var file = files[0];\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        var text = event.target.result; // let regexPaths = /<path[\\s\\S]*\\/>/g;\n        // let foundPaths = file2.match(regexPaths);\n\n        svgson.parse(text).then(function (json) {\n          var svg = json.children.map(function (child) {\n            return replaceWithPath(child);\n          });\n          svg = svg.flat(1); //TODO: what does the argument do again?\n          //TODO: update state to have makerjs models\n\n          console.log(svg);\n        });\n      };\n\n      reader.readAsText(file);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      var test = kk; //test = mjs.model.originate(test);\n\n      var testProfile = test.models.profile;\n      var testPocket = test.models.pocket;\n      var profileCut = profile(testProfile, params);\n      var pocketCut = pocket(testPocket, params); // let drawings = [test, profile(test)];\n      // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n      //testing if internal outlines will make acceptable pocket paths, appears so\n      //let p2 = pocket(testPocket, params).drawing;\n\n      var t1 = new mjs.models.Oval(20, 20);\n      var t2 = mjs.model.move(new mjs.models.Oval(20, 20), [15, 0]);\n      var test0 = mjs.model.combineUnion(t1, t2);\n      var test1 = mjs.model.outline(test0, 5, 1, true); // console.log(test0)\n      // test0 = mjs.model.move(test0, [50, 0]);\n\n      var model = {\n        models: {\n          profileSource: testProfile,\n          profileCut: profileCut.drawing,\n          pocketSource: testPocket,\n          pocketCut: pocketCut.drawing //pocketCut2: pocket(p2, params).drawing,\n          // test0,\n          // test1,\n\n        } // model = mjs.model.originate(model);\n        // model = mjs.model.zero(model);\n\n      };\n      model['paths'] = {\n        origin: new mjs.paths.Circle(params.compensatedRadius)\n      };\n      var modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n      var viewModel = mjs.exporter.toSVG(modelToView, {\n        useSvgPathOnly: false,\n        strokeWidth: \".5mm\"\n      }); //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n\n      viewModel = [viewModel];\n      return React.createElement(\"div\", {\n        onMouseDown: function onMouseDown(e) {\n          return console.log(\"div target\", e.target.getAttribute(\"data-route\"));\n        },\n        style: {\n          margin: 0,\n          height: \"100%\",\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref) {\n          return _this2.upload = _ref;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: function onChange(e) {\n          return _this2.uploadSVG(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Upload SVG\"), \"\\xA0\", React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          utils.download(profileCut.filename, profileCut.gcode);\n          utils.download(pocketCut.filename, pocketCut.gcode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"download gcode\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/App.js"],"names":["React","Component","utils","s2p","mjs","svgson","Workplane","Button","kk","profile","pocket","params","App","state","shapes","e","replaceWithPath","child","name","children","map","grandchild","temp","rect","x","y","width","height","rx","ry","importer","fromSVGPathData","makerjsPath","attributes","d","files","target","file","reader","FileReader","onload","event","text","result","parse","then","json","svg","flat","console","log","readAsText","test","testProfile","models","testPocket","profileCut","pocketCut","t1","Oval","t2","model","move","test0","combineUnion","test1","outline","profileSource","drawing","pocketSource","origin","paths","Circle","compensatedRadius","modelToView","scale","deepcopy","viewModel","exporter","toSVG","useSvgPathOnly","strokeWidth","getAttribute","margin","overflow","ref","upload","display","uploadSVG","click","download","filename","gcode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport * as utils from './utils.js';\n\nimport * as s2p from 'shape2path';\nimport * as mjs from 'makerjs';\nimport * as svgson from 'svgson';\n\nimport {Workplane} from './Workplane.js'\n\nimport Button from '@material-ui/core/Button';\n\nimport {kk} from './joints/koshikake.js';\nimport {profile} from './toolpaths/profile.js';\nimport {pocket} from './toolpaths/pocket.js';\n\nimport * as params from './parameters.js';\n\n// utils.download(filename, text);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      shapes: [],\n    }\n  };\n\n  uploadSVG(e) {\n    const replaceWithPath = (child) => {\n      if (child.name === \"g\") {\n        return child.children.map(grandchild => replaceWithPath(grandchild));\n      }\n\n      if (child.name === \"rectangle\") {\n        let temp = s2p.rect({x: 0, y: 120, width: 200, height: 200, rx: 20, ry: 20});\n        return mjs.importer.fromSVGPathData(temp);\n      }\n\n      if (child.name === \"path\") {\n        let makerjsPath = mjs.importer.fromSVGPathData(child.attributes.d);\n        return makerjsPath;\n      }\n    }\n\n    let files = e.target.files;\n    let file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n        let text = event.target.result;\n\n        // let regexPaths = /<path[\\s\\S]*\\/>/g;\n        // let foundPaths = file2.match(regexPaths);\n\n        svgson.parse(text).then((json) => {\n          let svg = json.children.map(child => {\n            return replaceWithPath(child);\n          });\n\n          svg = svg.flat(1); //TODO: what does the argument do again?\n\n          //TODO: update state to have makerjs models\n          console.log(svg);\n        });\n\n    }\n\n    reader.readAsText(file);\n  }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    let test = kk;\n    //test = mjs.model.originate(test);\n    let testProfile = test.models.profile;\n    let testPocket = test.models.pocket;\n    let profileCut = profile(testProfile, params);\n    let pocketCut = pocket(testPocket, params);\n\n    // let drawings = [test, profile(test)];\n    // drawings = drawings.map(d => mjs.exporter.toSVG(d));\n\n    //testing if internal outlines will make acceptable pocket paths, appears so\n    //let p2 = pocket(testPocket, params).drawing;\n    let t1 = new mjs.models.Oval(20,20)\n    let t2 = mjs.model.move(new mjs.models.Oval(20,20), [15,0])\n    let test0 = mjs.model.combineUnion(t1, t2);\n    let test1 = mjs.model.outline(test0, 5, 1, true)\n    // console.log(test0)\n    // test0 = mjs.model.move(test0, [50, 0]);\n\n    let model = {\n      models: {\n        profileSource: testProfile,\n        profileCut: profileCut.drawing,\n        pocketSource: testPocket,\n        pocketCut: pocketCut.drawing,\n        //pocketCut2: pocket(p2, params).drawing,\n        // test0,\n        // test1,\n      }\n    }\n\n    // model = mjs.model.originate(model);\n    // model = mjs.model.zero(model);\n\n    model['paths'] = {\n      origin: new mjs.paths.Circle(params.compensatedRadius)\n    }\n\n    let modelToView = mjs.model.scale(utils.deepcopy(model), 10); //TODO: make drawing easier to see, but this ruins toolpaths\n\n    let viewModel = mjs.exporter.toSVG(modelToView, {useSvgPathOnly:false, strokeWidth:\".5mm\"});\n    //viewModel = viewModel.concat(Object.values(modelToView.models).map(m => mjs.exporter.toSVG(m)));\n    viewModel = [viewModel];\n\n    return (\n      <div\n        onMouseDown={(e) => console.log(\"div target\", e.target.getAttribute(\"data-route\"))}\n        style={{\n          margin: 0,\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}>\n\n          <Workplane groups={viewModel}/>\n\n        <div>\n          <input\n            id=\"myInput\"\n            type=\"file\"\n            ref={(ref) => this.upload = ref}\n            style={{ display: 'none' }}\n            onChange={(e) => this.uploadSVG(e)}/>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => this.upload.click()}\n            >\n              Upload SVG\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              utils.download(profileCut.filename, profileCut.gcode);\n              utils.download(pocketCut.filename, pocketCut.gcode);\n            }}\n            >\n              download gcode\n          </Button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}