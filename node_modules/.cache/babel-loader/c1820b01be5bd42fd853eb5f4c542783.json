{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../../libs');\n\nvar _draggable = require('../draggable');\n\nvar _draggable2 = _interopRequireDefault(_draggable);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar SvPanel = function (_Component) {\n  (0, _inherits3.default)(SvPanel, _Component);\n\n  function SvPanel(props) {\n    (0, _classCallCheck3.default)(this, SvPanel);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (SvPanel.__proto__ || Object.getPrototypeOf(SvPanel)).call(this, props));\n\n    _this.state = {\n      cursorTop: 0,\n      cursorLeft: 0,\n      background: 'hsl(0, 100%, 50%)'\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(SvPanel, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var dragConfig = {\n        drag: function drag(event) {\n          _this2.handleDrag(event);\n        },\n        end: function end(event) {\n          _this2.handleDrag(event);\n        }\n      };\n      (0, _draggable2.default)(this.$el, dragConfig);\n      this.update();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var background = this.state.background;\n      var newBackground = 'hsl(' + nextProps.color.get('hue') + ', 100%, 50%)';\n\n      if (newBackground !== background) {\n        this.update(nextProps);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update(props) {\n      var _ref = props || this.props,\n          color = _ref.color;\n\n      var saturation = color.get('saturation');\n      var value = color.get('value');\n      var el = this.$el;\n\n      var _el$getBoundingClient = el.getBoundingClientRect(),\n          width = _el$getBoundingClient.width,\n          height = _el$getBoundingClient.height;\n\n      if (!height) height = width * 3 / 4;\n      this.setState({\n        cursorLeft: saturation * width / 100,\n        cursorTop: (100 - value) * height / 100,\n        background: 'hsl(' + color.get('hue') + ', 100%, 50%)'\n      });\n    }\n  }, {\n    key: 'handleDrag',\n    value: function handleDrag(event) {\n      var color = this.props.color;\n      var onChange = this.context.onChange;\n      var el = this.$el;\n      var rect = el.getBoundingClientRect();\n      var left = event.clientX - rect.left;\n      var top = event.clientY - rect.top;\n      left = Math.max(0, left);\n      left = Math.min(left, rect.width);\n      top = Math.max(0, top);\n      top = Math.min(top, rect.height);\n      this.setState({\n        cursorLeft: left,\n        cursorTop: top,\n        background: 'hsl(' + color.get('hue') + ', 100%, 50%)'\n      }, function () {\n        color.set({\n          saturation: left / rect.width * 100,\n          value: 100 - top / rect.height * 100\n        });\n        onChange(color);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          cursorTop = _state.cursorTop,\n          cursorLeft = _state.cursorLeft,\n          background = _state.background;\n      return _react2.default.createElement('div', {\n        className: 'el-color-svpanel',\n        style: {\n          backgroundColor: background\n        },\n        ref: function ref(el) {\n          return _this3.$el = el;\n        }\n      }, _react2.default.createElement('div', {\n        className: 'el-color-svpanel__white'\n      }), _react2.default.createElement('div', {\n        className: 'el-color-svpanel__black'\n      }), _react2.default.createElement('div', {\n        className: 'el-color-svpanel__cursor',\n        style: {\n          top: cursorTop + 'px',\n          left: cursorLeft + 'px'\n        }\n      }, _react2.default.createElement('div', null)));\n    }\n  }]);\n  return SvPanel;\n}(_libs.Component);\n\nvar _default = SvPanel;\nexports.default = _default;\nSvPanel.contextTypes = {\n  onChange: _libs.PropTypes.func\n};\nSvPanel.propTypes = {\n  color: _libs.PropTypes.object.isRequired\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(SvPanel, 'SvPanel', 'src/color-picker/components/SvPanel.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/color-picker/components/SvPanel.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}