{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nvar _inputNumber = require('../input-number');\n\nvar _inputNumber2 = _interopRequireDefault(_inputNumber);\n\nvar _Button = require('./Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Slider = function (_Component) {\n  (0, _inherits3.default)(Slider, _Component);\n\n  function Slider(props) {\n    (0, _classCallCheck3.default)(this, Slider);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));\n\n    _this.state = {\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      precision: 0,\n      inputValue: 0,\n      dragging: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Slider, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        component: this\n      };\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _props = this.props,\n          range = _props.range,\n          value = _props.value,\n          min = _props.min,\n          max = _props.max,\n          step = _props.step;\n      var _state = this.state,\n          firstValue = _state.firstValue,\n          secondValue = _state.secondValue,\n          oldValue = _state.oldValue,\n          inputValue = _state.inputValue,\n          precision = _state.precision;\n\n      if (range) {\n        if (Array.isArray(value)) {\n          firstValue = Math.max(min, value[0]);\n          secondValue = Math.min(max, value[1]);\n        } else {\n          firstValue = min;\n          secondValue = max;\n        }\n\n        oldValue = [firstValue, secondValue];\n      } else {\n        if (typeof value !== 'number' || isNaN(value)) {\n          firstValue = min;\n        } else {\n          firstValue = Math.min(max, Math.max(min, value));\n        }\n\n        oldValue = firstValue;\n      }\n\n      var precisions = [min, max, step].map(function (item) {\n        var decimal = ('' + item).split('.')[1];\n        return decimal ? decimal.length : 0;\n      });\n      precision = Math.max.apply(null, precisions);\n      inputValue = inputValue || firstValue;\n      this.setState({\n        firstValue: firstValue,\n        secondValue: secondValue,\n        oldValue: oldValue,\n        inputValue: inputValue,\n        precision: precision\n      });\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(props, state) {\n      if (props.min != this.props.min || props.max != this.props.max) {\n        this.setValues();\n      }\n\n      if (props.value != this.props.value) {\n        var _oldValue = this.state.oldValue;\n\n        if (this.state.dragging || Array.isArray(this.props.value) && Array.isArray(props.value) && Array.isArray(_oldValue) && this.props.value.every(function (item, index) {\n          return item === _oldValue[index];\n        })) {\n          return;\n        } else if (!this.props.range && typeof props.value === 'number' && !isNaN(props.value)) {\n          this.setState({\n            firstValue: props.value\n          });\n        }\n\n        this.setValues();\n      }\n    }\n  }, {\n    key: 'valueChanged',\n    value: function valueChanged() {\n      var range = this.props.range;\n      var _state2 = this.state,\n          firstValue = _state2.firstValue,\n          oldValue = _state2.oldValue;\n\n      if (range && Array.isArray(oldValue)) {\n        return ![this.minValue(), this.maxValue()].every(function (item, index) {\n          return item === oldValue[index];\n        });\n      } else {\n        return firstValue !== oldValue;\n      }\n    }\n  }, {\n    key: 'setValues',\n    value: function setValues() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          range = _props2.range,\n          value = _props2.value,\n          min = _props2.min,\n          max = _props2.max;\n      var _state3 = this.state,\n          firstValue = _state3.firstValue,\n          secondValue = _state3.secondValue,\n          oldValue = _state3.oldValue,\n          inputValue = _state3.inputValue;\n\n      if (range && Array.isArray(value)) {\n        if (value[1] < min) {\n          inputValue = [min, min];\n        } else if (value[0] > max) {\n          inputValue = [max, max];\n        } else if (value[0] < min) {\n          inputValue = [min, value[1]];\n        } else if (value[1] > max) {\n          inputValue = [value[0], max];\n        } else {\n          firstValue = value[0];\n          secondValue = value[1];\n\n          if (this.valueChanged()) {\n            this.onValueChanged([this.minValue(), this.maxValue()]);\n            oldValue = value.slice();\n          }\n        }\n      } else if (!range && typeof value === 'number' && !isNaN(value)) {\n        if (value < min) {\n          inputValue = min;\n        } else if (value > max) {\n          inputValue = max;\n        } else {\n          inputValue = firstValue;\n          this.setState({\n            firstValue: firstValue\n          }, function () {\n            if (_this2.valueChanged()) {\n              _this2.onValueChanged(firstValue);\n\n              _this2.setState({\n                oldValue: firstValue\n              });\n            }\n          });\n        }\n      }\n\n      this.setState({\n        firstValue: firstValue,\n        secondValue: secondValue,\n        inputValue: inputValue\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(percent) {\n      var _props3 = this.props,\n          range = _props3.range,\n          min = _props3.min,\n          max = _props3.max;\n      var _state4 = this.state,\n          firstValue = _state4.firstValue,\n          secondValue = _state4.secondValue;\n      var targetValue = min + percent * (max - min) / 100;\n\n      if (!range) {\n        this.refs.button1.setPosition(percent);\n        return;\n      }\n\n      var button = void 0;\n\n      if (Math.abs(this.minValue() - targetValue) < Math.abs(this.maxValue() - targetValue)) {\n        button = firstValue < secondValue ? 'button1' : 'button2';\n      } else {\n        button = firstValue > secondValue ? 'button1' : 'button2';\n      }\n\n      this.refs[button].setPosition(percent);\n    }\n  }, {\n    key: 'onSliderClick',\n    value: function onSliderClick(event) {\n      if (this.props.disabled || this.state.dragging) return;\n\n      if (this.props.vertical) {\n        var sliderOffsetBottom = this.refs.slider.getBoundingClientRect().bottom;\n        this.setPosition((sliderOffsetBottom - event.clientY) / this.sliderSize() * 100);\n      } else {\n        var sliderOffsetLeft = this.refs.slider.getBoundingClientRect().left;\n        this.setPosition((event.clientX - sliderOffsetLeft) / this.sliderSize() * 100);\n      }\n\n      this.setValues();\n    }\n    /* Watched Methods */\n\n  }, {\n    key: 'onValueChanged',\n    value: function onValueChanged(val) {\n      if (this.props.onChange) {\n        this.props.onChange(val);\n      }\n    }\n  }, {\n    key: 'onInputValueChanged',\n    value: function onInputValueChanged(e) {\n      var _this3 = this;\n\n      this.setState({\n        inputValue: e || 0,\n        firstValue: e || 0\n      }, function () {\n        _this3.setValues();\n      });\n    }\n  }, {\n    key: 'onFirstValueChange',\n    value: function onFirstValueChange(e) {\n      if (this.state.firstValue != e) {\n        this.state.firstValue = e;\n        this.forceUpdate();\n        this.setValues();\n      }\n    }\n  }, {\n    key: 'onSecondValueChange',\n    value: function onSecondValueChange(e) {\n      if (this.state.secondValue != e) {\n        this.state.secondValue = e;\n        this.forceUpdate();\n        this.setValues();\n      }\n    }\n    /* Computed Methods */\n\n  }, {\n    key: 'sliderSize',\n    value: function sliderSize() {\n      return parseInt(this.props.vertical ? this.refs.slider.offsetHeight : this.refs.slider.offsetWidth, 10);\n    }\n  }, {\n    key: 'stops',\n    value: function stops() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          range = _props4.range,\n          min = _props4.min,\n          max = _props4.max,\n          step = _props4.step;\n      var firstValue = this.state.firstValue;\n      var stopCount = (max - min) / step;\n      var stepWidth = 100 * step / (max - min);\n      var result = [];\n\n      for (var i = 1; i < stopCount; i++) {\n        result.push(i * stepWidth);\n      }\n\n      if (range) {\n        return result.filter(function (step) {\n          return step < 100 * (_this4.minValue() - min) / (max - min) || step > 100 * (_this4.maxValue() - min) / (max - min);\n        });\n      } else {\n        return result.filter(function (step) {\n          return step > 100 * (firstValue - min) / (max - min);\n        });\n      }\n    }\n  }, {\n    key: 'minValue',\n    value: function minValue() {\n      return Math.min(this.state.firstValue, this.state.secondValue);\n    }\n  }, {\n    key: 'maxValue',\n    value: function maxValue() {\n      return Math.max(this.state.firstValue, this.state.secondValue);\n    }\n  }, {\n    key: 'runwayStyle',\n    value: function runwayStyle() {\n      return this.props.vertical ? {\n        height: this.props.height\n      } : {};\n    }\n  }, {\n    key: 'barStyle',\n    value: function barStyle() {\n      return this.props.vertical ? {\n        height: this.barSize(),\n        bottom: this.barStart()\n      } : {\n        width: this.barSize(),\n        left: this.barStart()\n      };\n    }\n  }, {\n    key: 'barSize',\n    value: function barSize() {\n      return this.props.range ? 100 * (this.maxValue() - this.minValue()) / (this.props.max - this.props.min) + '%' : 100 * (this.state.firstValue - this.props.min) / (this.props.max - this.props.min) + '%';\n    }\n  }, {\n    key: 'barStart',\n    value: function barStart() {\n      return this.props.range ? 100 * (this.minValue() - this.props.min) / (this.props.max - this.props.min) + '%' : '0%';\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          vertical = _props5.vertical,\n          showInput = _props5.showInput,\n          showStops = _props5.showStops,\n          showInputControls = _props5.showInputControls,\n          range = _props5.range,\n          step = _props5.step,\n          disabled = _props5.disabled,\n          min = _props5.min,\n          max = _props5.max;\n      var _state5 = this.state,\n          inputValue = _state5.inputValue,\n          firstValue = _state5.firstValue,\n          secondValue = _state5.secondValue;\n      return _react2.default.createElement('div', {\n        className: this.className('el-slider', {\n          'is-vertical': vertical,\n          'el-slider--with-input': showInput\n        })\n      }, showInput && !range && _react2.default.createElement(_inputNumber2.default, {\n        ref: 'input',\n        className: 'el-slider__input',\n        defaultValue: inputValue,\n        value: firstValue,\n        step: step,\n        disabled: disabled,\n        controls: showInputControls,\n        min: min,\n        max: max,\n        size: 'small',\n        onChange: this.onInputValueChanged.bind(this)\n      }), _react2.default.createElement('div', {\n        ref: 'slider',\n        style: this.runwayStyle(),\n        className: this.classNames('el-slider__runway', {\n          'show-input': showInput,\n          'disabled': disabled\n        }),\n        onClick: this.onSliderClick.bind(this)\n      }, _react2.default.createElement('div', {\n        className: 'el-slider__bar',\n        style: this.barStyle()\n      }), _react2.default.createElement(_Button2.default, {\n        ref: 'button1',\n        vertical: vertical,\n        value: firstValue,\n        onChange: this.onFirstValueChange.bind(this)\n      }), range && _react2.default.createElement(_Button2.default, {\n        ref: 'button2',\n        vertical: vertical,\n        value: secondValue,\n        onChange: this.onSecondValueChange.bind(this)\n      }), showStops && this.stops().map(function (item, index) {\n        return _react2.default.createElement('div', {\n          key: index,\n          className: 'el-slider__stop',\n          style: vertical ? {\n            'bottom': item + '%'\n          } : {\n            'left': item + '%'\n          }\n        });\n      })));\n    }\n  }]);\n  return Slider;\n}(_libs.Component);\n\nvar _default = Slider;\nexports.default = _default;\nSlider.childContextTypes = {\n  component: _libs.PropTypes.any\n};\nSlider.propTypes = {\n  min: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  max: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  step: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  value: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.arrayOf(_libs.PropTypes.number)]),\n  showInput: _libs.PropTypes.bool,\n  showInputControls: _libs.PropTypes.bool,\n  showTooltip: _libs.PropTypes.bool,\n  showStops: _libs.PropTypes.bool,\n  disabled: _libs.PropTypes.bool,\n  range: _libs.PropTypes.bool,\n  vertical: _libs.PropTypes.bool,\n  height: _libs.PropTypes.string,\n  formatTooltip: _libs.PropTypes.func,\n  onChange: _libs.PropTypes.func\n};\nSlider.defaultProps = {\n  showTooltip: true,\n  showInputControls: true,\n  min: 0,\n  max: 100,\n  step: 1,\n  value: 0\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Slider, 'Slider', 'src/slider/Slider.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/slider/Slider.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}