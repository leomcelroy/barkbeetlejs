{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar InputNumber = function (_Component) {\n  (0, _inherits3.default)(InputNumber, _Component);\n\n  function InputNumber(props) {\n    (0, _classCallCheck3.default)(this, InputNumber);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (InputNumber.__proto__ || Object.getPrototypeOf(InputNumber)).call(this, props));\n\n    _this.state = {\n      value: props.defaultValue,\n      inputActive: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(InputNumber, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      if (props.value != this.props.value) {\n        this.setState({\n          value: props.value\n        });\n      }\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(e) {\n      switch (e.keyCode) {\n        case 38:\n          // KeyUp\n          e.preventDefault();\n          this.increase();\n          break;\n\n        case 40:\n          // KeyDown\n          e.preventDefault();\n          this.decrease();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur() {\n      var value = this.state.value;\n\n      if (this.isValid) {\n        value = Number(value);\n\n        if (value > this.props.max) {\n          value = Number(this.props.max);\n        } else if (value < this.props.min) {\n          value = Number(this.props.min);\n        }\n      } else {\n        value = undefined;\n      }\n\n      this.setState({\n        value: value\n      }, this.onChange);\n    }\n  }, {\n    key: 'onInput',\n    value: function onInput(value) {\n      var _this2 = this;\n\n      this.setState({\n        value: value\n      }, function () {\n        clearTimeout(_this2.timeout);\n        _this2.timeout = setTimeout(function () {\n          _this2.onBlur();\n        }, 750);\n      });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange() {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.value);\n      }\n    }\n  }, {\n    key: 'increase',\n    value: function increase() {\n      var _props = this.props,\n          step = _props.step,\n          max = _props.max,\n          disabled = _props.disabled,\n          min = _props.min;\n      var _state = this.state,\n          value = _state.value,\n          inputActive = _state.inputActive;\n\n      if (this.maxDisabled) {\n        inputActive = false;\n      } else {\n        if (value + Number(step) > max || disabled) return;\n        if (value + Number(step) < min) value = min - Number(step);\n        value = (0, _util.accAdd)(step, value);\n      }\n\n      this.setState({\n        value: value,\n        inputActive: inputActive\n      }, this.onChange);\n    }\n  }, {\n    key: 'decrease',\n    value: function decrease() {\n      var _props2 = this.props,\n          step = _props2.step,\n          min = _props2.min,\n          disabled = _props2.disabled,\n          max = _props2.max;\n      var _state2 = this.state,\n          value = _state2.value,\n          inputActive = _state2.inputActive;\n\n      if (this.minDisabled) {\n        inputActive = false;\n      } else {\n        if (value - Number(step) < min || disabled) return;\n        if (value - Number(step) > max) value = Number(max) + Number(step);\n        value = (0, _util.accSub)(value, step);\n      }\n\n      this.setState({\n        value: value,\n        inputActive: inputActive\n      }, this.onChange);\n    }\n  }, {\n    key: 'activeInput',\n    value: function activeInput(disabled) {\n      if (!this.props.disabled && !disabled) {\n        this.setState({\n          inputActive: true\n        });\n      }\n    }\n  }, {\n    key: 'inactiveInput',\n    value: function inactiveInput(disabled) {\n      if (!this.props.disabled && !disabled) {\n        this.setState({\n          inputActive: false\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          controls = _props3.controls,\n          disabled = _props3.disabled,\n          size = _props3.size;\n      var _state3 = this.state,\n          value = _state3.value,\n          inputActive = _state3.inputActive;\n      return _react2.default.createElement('div', {\n        style: this.style(),\n        className: this.className('el-input-number', size && 'el-input-number--' + size, {\n          'is-disabled': disabled,\n          'is-without-controls': !controls\n        })\n      }, controls && _react2.default.createElement('span', null, 'className=', this.classNames(\"el-input-number__decrease\", {\n        'is-disabled': this.minDisabled\n      }), 'onClick=', this.decrease.bind(this), '>', _react2.default.createElement('i', {\n        className: 'el-icon-minus'\n      })), controls && _react2.default.createElement('span', {\n        className: this.classNames(\"el-input-number__increase\", {\n          'is-disabled': this.maxDisabled\n        }),\n        onClick: this.increase.bind(this)\n      }, _react2.default.createElement('i', {\n        className: 'el-icon-plus'\n      })), _react2.default.createElement(_input2.default, {\n        ref: 'input',\n        className: this.classNames({\n          'is-active': inputActive\n        }),\n        value: value,\n        disabled: disabled,\n        size: size,\n        onChange: this.onInput.bind(this),\n        onKeyDown: this.onKeyDown.bind(this),\n        onBlur: this.onBlur.bind(this)\n      }));\n    }\n  }, {\n    key: 'isValid',\n    get: function get() {\n      return this.state.value !== '' && !isNaN(Number(this.state.value));\n    }\n  }, {\n    key: 'minDisabled',\n    get: function get() {\n      return !this.isValid || this.state.value - Number(this.props.step) < this.props.min;\n    }\n  }, {\n    key: 'maxDisabled',\n    get: function get() {\n      return !this.isValid || this.state.value + Number(this.props.step) > this.props.max;\n    }\n  }]);\n  return InputNumber;\n}(_libs.Component);\n\nvar _default = InputNumber;\nexports.default = _default;\nInputNumber.propTypes = {\n  defaultValue: _libs.PropTypes.number,\n  value: _libs.PropTypes.number,\n  step: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  max: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  min: _libs.PropTypes.oneOfType([_libs.PropTypes.number, _libs.PropTypes.string]),\n  disabled: _libs.PropTypes.bool,\n  controls: _libs.PropTypes.bool,\n  size: _libs.PropTypes.string,\n  onChange: _libs.PropTypes.func\n};\nInputNumber.defaultProps = {\n  step: 1,\n  controls: true,\n  max: Infinity,\n  min: 0\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(InputNumber, 'InputNumber', 'src/input-number/InputNumber.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/input-number/InputNumber.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}