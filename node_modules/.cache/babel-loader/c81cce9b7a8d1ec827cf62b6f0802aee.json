{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { Button, Heading, Pane, Paragraph } from 'evergreen-ui';\nimport './App.css';\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\nimport { uploadSVG } from './uploadSVG.js';\nimport { Workplane } from './Workplane.js';\nimport { MaterialType } from './components/MaterialType.js';\nimport { MaterialThickness } from './components/MaterialThickness.js';\nimport { Origin } from './components/Origin.js';\nimport { Units } from './components/Units.js';\nimport { PocketButton } from './components/PocketButton.js';\nimport { ProfileButton } from './components/ProfileButton.js';\nimport { AdvancedOptions } from './components/AdvancedOptions.js';\nimport { ToolpathList } from './components/ToolpathList.js';\nimport { renderLine } from './unmakerjs/primitives.js';\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      thicknessSubmit: false,\n      materialSubmit: false,\n      originSubmit: false,\n      initialized: true,\n      //will be false\n      groupHovered: []\n    };\n\n    _this.firstSubmit = function (name) {\n      var old = _this.state;\n      old[name] = true;\n\n      _this.setState({\n        old: old\n      });\n    };\n\n    _this.groupHover = function (id, enter) {\n      id = id.split('_');\n      var toolpath = id[1] === \"toolpath\";\n      var currentGroupHovered = _this.state.groupHovered;\n      currentGroupHovered.push(id);\n\n      if (id && !toolpath && enter) {\n        _this.setState({\n          groupHovered: []\n        });\n      } else {\n        _this.setState({\n          groupHovered: []\n        });\n      }\n    };\n\n    _this.hover = function (id) {\n      id = id.split('_');\n      var toolpath = id[1] === \"toolpath\";\n      id = id[0];\n\n      if (id && !toolpath) {\n        store.update({\n          hovered: [id]\n        });\n      } else {\n        store.update({\n          hovered: []\n        }); //this is a bit hackish\n      }\n    };\n\n    _this.select = function (id) {\n      id = id.split('_');\n      var toolpath = id[1] === \"toolpath\";\n      id = id[0];\n\n      if (id && !store.state.selected.includes(id) && !toolpath) {\n        store.update(function (s) {\n          return s.selected.push(id);\n        });\n        ;\n      } else {\n        store.update({\n          selected: []\n        }); //this is a bit hackish\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"initialized\",\n    value: function initialized() {\n      if (!this.state.initialized && this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit) {\n        this.setState({\n          initialized: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n      if (!this.state.initialized) this.initialized();\n      var viewModel = Object.entries(store.state.contours).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            id = _ref2[0],\n            lines = _ref2[1];\n\n        return React.createElement(\"g\", {\n          key: \"\".concat(id),\n          id: \"\".concat(id, \"_contour\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, lines.map(function (line, i) {\n          return renderLine(line, \"\".concat(id, \"_index\").concat(i), {\n            selected: store.state.selected.includes(id),\n            highlighted: store.state.hovered.includes(id)\n          });\n        }));\n      });\n      var toolpathView = store.state.toolpaths.map(function (toolpath) {\n        return React.createElement(\"g\", {\n          onMouseEnter: function onMouseEnter() {\n            return _this2.groupHover(e.target.parentNode.id);\n          },\n          onMouseLeave: function onMouseLeave() {\n            return _this2.groupHover(e.target.parentNode.id);\n          },\n          key: \"\".concat(toolpath.id),\n          id: \"\".concat(toolpath.id, \"_toolpath\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, toolpath.cutSelected && toolpath.geometry.drawing.map(function (line, i) {\n          return renderLine(line, \"\".concat(toolpath.id, \"_index\").concat(i), {\n            toolpath: true\n          });\n        }));\n      });\n      viewModel = [].concat(_toConsumableArray(viewModel), _toConsumableArray(toolpathView));\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onMouseMove: function onMouseMove(e) {\n          return _this2.hover(e.target.parentNode.id);\n        },\n        onMouseDown: function onMouseDown(e) {\n          return _this2.select(e.target.parentNode.id);\n        },\n        className: \"mainEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Workplane, {\n        groups: viewModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"svg\", {\n        width: 0,\n        height: 0,\n        id: \"thisIsDumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myInput\",\n        type: \"file\",\n        ref: function ref(_ref3) {\n          return _this2.upload = _ref3;\n        },\n        style: {\n          display: 'none'\n        },\n        onChange: uploadSVG,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Button, {\n        marginRight: 4,\n        onClick: function onClick(e) {\n          return _this2.upload.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"upload (SVG, DXF, BBJS, or Makerjs)\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return console.log(store.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"save\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), \"Number Selected: \", store.state.selected.length, \"\\xA0\", React.createElement(Button, {\n        onClick: function onClick() {\n          var contours = Object.entries(store.state.contours);\n          contours = contours.filter(function (_ref4) {\n            var _ref5 = _slicedToArray(_ref4, 2),\n                id = _ref5[0],\n                contour = _ref5[1];\n\n            return !store.state.selected.includes(id);\n          });\n          var toolpaths = store.state.toolpaths.filter(function (toolpath) {\n            return !store.state.selected.includes(toolpath.sourceGeometryID);\n          });\n          var newContours = {};\n          contours.forEach(function (contour) {\n            newContours[contour[0]] = contour[1];\n          });\n          contours = newContours;\n          store.update({\n            contours: contours,\n            toolpaths: toolpaths,\n            selected: []\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialType, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \" \", React.createElement(MaterialThickness, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \" \", React.createElement(Units, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \" \", React.createElement(Origin, {\n        firstSubmit: this.firstSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"select settings before editting options\") : \"\", React.createElement(Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \" \", React.createElement(AdvancedOptions, {\n        disabled: !this.state.initialized,\n        default: true,\n        params: store.getState().defaultParameters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Create Toolpaths\"), !this.state.initialized ? React.createElement(Paragraph, {\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"select settings before creating toolpaths\") : \"\", React.createElement(\"div\", {\n        className: \"toolpaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(ProfileButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Pane, {\n        marginLeft: 8,\n        marginTop: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(PocketButton, {\n        disabled: !this.state.initialized,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: !this.state.initialized,\n        marginLeft: 8,\n        marginTop: 4,\n        onClick: function onClick() {\n          return console.log(store.getState());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Drill\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        marginTop: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Toolpaths\"), React.createElement(ToolpathList, {\n        marginTop: 4,\n        state: store.getState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkbeetle_js/src/App.js"],"names":["React","Component","PureComponent","Button","Heading","Pane","Paragraph","utils","mjs","params","s2p","svgson","uploadSVG","Workplane","MaterialType","MaterialThickness","Origin","Units","PocketButton","ProfileButton","AdvancedOptions","ToolpathList","renderLine","store","App","state","thicknessSubmit","materialSubmit","originSubmit","initialized","groupHovered","firstSubmit","name","old","setState","groupHover","id","enter","split","toolpath","currentGroupHovered","push","hover","update","hovered","select","selected","includes","s","viewModel","Object","entries","contours","map","lines","line","i","highlighted","toolpathView","toolpaths","e","target","parentNode","cutSelected","geometry","drawing","ref","upload","display","click","console","log","length","filter","contour","sourceGeometryID","newContours","forEach","getState","defaultParameters"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {Button, Heading, Pane, Paragraph} from 'evergreen-ui';\nimport './App.css';\n\nimport * as utils from './utils.js';\nimport * as mjs from 'makerjs';\nimport * as params from './parameters.js';\nimport * as s2p from 'shape2path';\nimport * as svgson from 'svgson';\n\nimport {uploadSVG} from './uploadSVG.js';\n\nimport {Workplane} from './Workplane.js'\nimport {MaterialType} from './components/MaterialType.js';\nimport {MaterialThickness} from './components/MaterialThickness.js';\nimport {Origin} from './components/Origin.js';\nimport {Units} from './components/Units.js';\nimport {PocketButton} from './components/PocketButton.js';\nimport {ProfileButton} from './components/ProfileButton.js';\nimport {AdvancedOptions} from './components/AdvancedOptions.js';\nimport {ToolpathList} from './components/ToolpathList.js';\n\nimport {renderLine} from './unmakerjs/primitives.js';\n\nimport store from \"./store.js\"; //this is my global state library, this is the only file that will getState() it will pass that to all sub components or should i import store in respective components\n\nclass App extends Component {\n\n  state = {\n    thicknessSubmit : false,\n    materialSubmit: false,\n    originSubmit: false,\n    initialized: true, //will be false\n    groupHovered: [],\n  }\n\n  firstSubmit = (name) => {\n    let old = this.state;\n    old[name] = true;\n\n    this.setState({old});\n  }\n\n  initialized() {\n    if (!this.state.initialized && (this.state.thicknessSubmit && this.state.materialSubmit && this.state.originSubmit)) {\n      this.setState({initialized:true});\n    }\n  }\n\n  groupHover = (id, enter) => {\n    id = id.split('_');\n    let toolpath = (id[1] === \"toolpath\")\n\n    let currentGroupHovered = this.state.groupHovered\n    currentGroupHovered.push(id);\n\n\n    if (id && !toolpath && enter) {\n      this.setState({groupHovered: []})\n    } else {\n      this.setState({groupHovered: []})\n    }\n\n  }\n\n  hover = (id) => {\n    id = id.split('_');\n    let toolpath = (id[1] === \"toolpath\")\n\n    id = id[0];\n\n    if (id && !toolpath) {\n      store.update({ hovered: [id] });\n    } else {\n      store.update({ hovered: [] }); //this is a bit hackish\n    }\n\n  }\n\n  select = (id) => {\n    id = id.split('_');\n    let toolpath = (id[1] === \"toolpath\")\n\n    id = id[0];\n\n    if (id && !store.state.selected.includes(id) && !toolpath) {\n      store.update(s => s.selected.push(id));;\n    } else {\n      store.update({selected: []}); //this is a bit hackish\n    }\n\n  }\n\n  render() {\n    //should I put everying in a list or all to one model, there seem to be some issues with origins if I mjs.exporter.toSVG() seperately\n    if (!this.state.initialized) this.initialized();\n\n    let viewModel = Object.entries(store.state.contours).\n                      map(([id, lines]) => <g\n                                            key={`${id}`}\n                                            id={`${id}_contour`}>\n                                            {lines.map((line, i) => renderLine(line, `${id}_index${i}`, {selected: store.state.selected.includes(id), highlighted: store.state.hovered.includes(id)} ))}\n                                           </g>);\n\n   let toolpathView = store.state.toolpaths.\n                     map(toolpath => <g\n                                       onMouseEnter={() => this.groupHover(e.target.parentNode.id)}\n                                       onMouseLeave={() => this.groupHover(e.target.parentNode.id)}\n                                       key={`${toolpath.id}`}\n                                       id={`${toolpath.id}_toolpath`}>\n                                       {toolpath.cutSelected && toolpath.geometry.drawing.map((line, i) => renderLine(line, `${toolpath.id}_index${i}`, {toolpath: true}))}\n                                      </g>);\n\n\n    viewModel = [...viewModel, ...toolpathView]\n    return (\n      <div\n        className=\"wrapper\"\n        >\n\n\n        <div>\n          <div\n            onMouseMove={(e) => this.hover(e.target.parentNode.id)}\n            onMouseDown={(e) => this.select(e.target.parentNode.id)}\n            className=\"mainEvent\">\n            <Workplane groups={viewModel}/>\n            <svg width={0} height={0} id={\"thisIsDumb\"}></svg>\n          </div>\n\n          <div>\n            <input\n              id=\"myInput\"\n              type=\"file\"\n              ref={(ref) => this.upload = ref}\n              style={{ display: 'none' }}\n              onChange={uploadSVG}/>\n            <Button\n              marginRight={4}\n              onClick={(e) => this.upload.click()}>\n                upload (SVG, DXF, BBJS, or Makerjs)\n            </Button>\n            <Button\n              onClick={() => console.log(store.state)}>\n              save\n            </Button>\n            <br/>\n            Number Selected: {store.state.selected.length}\n            &nbsp;\n            <Button\n              onClick={() => {\n                let contours = Object.entries(store.state.contours);\n                contours = contours.filter(([id, contour]) => !store.state.selected.includes(id))\n\n                let toolpaths = store.state.toolpaths.filter(toolpath => !store.state.selected.includes(toolpath.sourceGeometryID));\n\n                let newContours = {};\n\n                contours.forEach(contour => {\n                  newContours[contour[0]] = contour[1];\n                })\n\n                contours = newContours;\n\n                store.update({\n                  contours,\n                  toolpaths,\n                  selected: []\n                })\n\n              }}>\n              Delete\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"sidebar\">\n          <div>\n            <Heading>Settings</Heading>\n            <Pane marginTop={4}> <MaterialType firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <MaterialThickness firstSubmit={this.firstSubmit}/></Pane>\n            <Pane marginTop={4}> <Units/></Pane>\n            <Pane marginTop={4}> <Origin firstSubmit={this.firstSubmit}/></Pane>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before editting options</Paragraph> : \"\"}\n            <Pane> <AdvancedOptions disabled={!this.state.initialized} default={true} params={store.getState().defaultParameters}/></Pane>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Create Toolpaths</Heading>\n            {(!this.state.initialized) ? <Paragraph marginTop={4}>select settings before creating toolpaths</Paragraph> : \"\"}\n            <div className=\"toolpaths\">\n              <Pane marginLeft={8} marginTop={4}><ProfileButton disabled={!this.state.initialized}/></Pane>\n              <Pane marginLeft={8} marginTop={4}><PocketButton disabled={!this.state.initialized}/></Pane>\n              <Button disabled={!this.state.initialized} marginLeft={8} marginTop={4} onClick={() => console.log(store.getState())}>Drill</Button>\n            </div>\n          </div>\n\n          <div>\n            <Heading marginTop={8}>Toolpaths</Heading>\n            <ToolpathList marginTop={4} state={store.getState()}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}