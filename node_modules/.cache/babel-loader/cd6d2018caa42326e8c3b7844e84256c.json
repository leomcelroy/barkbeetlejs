{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport { Position } from \"../../common/position\";\n/**\n * Convert a position to a placement.\n * @param position the position to convert\n */\n\nexport function positionToPlacement(position) {\n  /* istanbul ignore next */\n  switch (position) {\n    case Position.TOP_LEFT:\n      return \"top-start\";\n\n    case Position.TOP:\n      return \"top\";\n\n    case Position.TOP_RIGHT:\n      return \"top-end\";\n\n    case Position.RIGHT_TOP:\n      return \"right-start\";\n\n    case Position.RIGHT:\n      return \"right\";\n\n    case Position.RIGHT_BOTTOM:\n      return \"right-end\";\n\n    case Position.BOTTOM_RIGHT:\n      return \"bottom-end\";\n\n    case Position.BOTTOM:\n      return \"bottom\";\n\n    case Position.BOTTOM_LEFT:\n      return \"bottom-start\";\n\n    case Position.LEFT_BOTTOM:\n      return \"left-end\";\n\n    case Position.LEFT:\n      return \"left\";\n\n    case Position.LEFT_TOP:\n      return \"left-start\";\n\n    case \"auto\":\n    case \"auto-start\":\n    case \"auto-end\":\n      // Return the string unchanged.\n      return position;\n\n    default:\n      return assertNever(position);\n  }\n}\n/* istanbul ignore next */\n\nfunction assertNever(x) {\n  throw new Error(\"Unexpected position: \" + x);\n}","map":null,"metadata":{},"sourceType":"module"}