{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n\nvar Text =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isContentOverflowing: false,\n      textContent: \"\"\n    };\n    _this.textRef = null;\n    return _this;\n  }\n\n  Text.prototype.componentDidMount = function () {\n    this.update();\n  };\n\n  Text.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n\n  Text.prototype.render = function () {\n    var _this = this;\n\n    var classes = classNames((_a = {}, _a[Classes.TEXT_OVERFLOW_ELLIPSIS] = this.props.ellipsize, _a), this.props.className);\n    var _b = this.props.tagName,\n        TagName = _b === void 0 ? \"div\" : _b;\n    return React.createElement(TagName, {\n      className: classes,\n      ref: function ref(_ref) {\n        return _this.textRef = _ref;\n      },\n      title: this.state.isContentOverflowing ? this.state.textContent : undefined\n    }, this.props.children);\n\n    var _a;\n  };\n\n  Text.prototype.update = function () {\n    if (this.textRef == null) {\n      return;\n    }\n\n    var newState = {\n      isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,\n      textContent: this.textRef.textContent\n    };\n    this.setState(newState);\n  };\n\n  Text.displayName = DISPLAYNAME_PREFIX + \".Text\";\n  return Text;\n}(React.PureComponent);\n\nexport { Text };","map":null,"metadata":{},"sourceType":"module"}