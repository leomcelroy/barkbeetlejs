{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout } from 'ui-box';\nimport { withTheme } from '../../theme';\nvar animationEasing = {\n  spring: \"cubic-bezier(0.175, 0.885, 0.320, 1.175)\"\n};\nvar handleStyle = {\n  backgroundColor: '#fff',\n  borderRadius: 9999\n};\nvar iconContainerStyle = {\n  transition: \"all 500ms \".concat(animationEasing.spring),\n  opacity: 0,\n  transform: 'scale(0.0)',\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  justifyContent: 'center',\n  paddingLeft: 4,\n  '&[data-checked=\"true\"]': {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\nvar handleContainerStyle = {\n  transition: 'transform 200ms ease-in-out',\n  transform: 'translateX(0%)',\n  '&[data-checked=\"true\"]': {\n    transform: 'translateX(50%)'\n  }\n};\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var size = _ref.size,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, [\"size\", \"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: size,\n    viewBox: \"0 0 10 7\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n  }));\n};\n\nCheckIcon.displayName = \"CheckIcon\";\nCheckIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n};\n\nvar isControlled = function isControlled(component) {\n  return {}.hasOwnProperty.call(component.props, 'checked');\n};\n\nvar Switch =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Switch, _PureComponent);\n\n  function Switch(props, context) {\n    var _this;\n\n    _classCallCheck(this, Switch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Switch).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (value) {\n      if (isControlled(_assertThisInitialized(_assertThisInitialized(_this)))) {\n        _this.props.onChange(value);\n      } else {\n        _this.setState(function (_ref2) {\n          var checked = _ref2.checked;\n          return {\n            checked: !checked\n          };\n        });\n\n        _this.props.onChange(value);\n      }\n    });\n\n    _this.state = {\n      checked: props.checked || props.defaultChecked || false\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          id = _this$props.id,\n          name = _this$props.name,\n          height = _this$props.height,\n          checkedProps = _this$props.checked,\n          onChange = _this$props.onChange,\n          disabled = _this$props.disabled,\n          appearance = _this$props.appearance,\n          hasCheckIcon = _this$props.hasCheckIcon,\n          defaultChecked = _this$props.defaultChecked,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"id\", \"name\", \"height\", \"checked\", \"onChange\", \"disabled\", \"appearance\", \"hasCheckIcon\", \"defaultChecked\"]);\n\n      var checked = isControlled(this) ? checkedProps : this.state.checked;\n      var themedClassName = theme.getSwitchClassName(appearance);\n      return React.createElement(Box, _extends({\n        is: \"label\",\n        display: \"block\",\n        width: height * 2,\n        position: \"relative\"\n      }, props), React.createElement(Box, {\n        is: \"input\",\n        className: themedClassName,\n        id: id,\n        name: name,\n        type: \"checkbox\",\n        checked: checked,\n        disabled: disabled,\n        defaultChecked: defaultChecked,\n        onChange: this.handleChange\n      }), React.createElement(Box, {\n        onClick: this.handleClick,\n        height: height,\n        width: height * 2\n      }, React.createElement(Box, {\n        height: height,\n        width: height,\n        \"data-checked\": checked,\n        css: iconContainerStyle\n      }, hasCheckIcon && React.createElement(CheckIcon, {\n        size: height / 2 - 3\n      })), React.createElement(Box, {\n        width: height * 2,\n        display: \"flex\",\n        \"data-checked\": checked,\n        css: handleContainerStyle\n      }, React.createElement(Box, {\n        flex: 1,\n        padding: 2\n      }, React.createElement(Box, {\n        width: height - 4,\n        height: height - 4,\n        css: handleStyle\n      })))));\n    }\n  }]);\n\n  return Switch;\n}(PureComponent);\n\nSwitch.displayName = \"Switch\";\n\n_defineProperty(Switch, \"propTypes\", _objectSpread({}, spacing.propTypes, position.propTypes, layout.propTypes, {\n  /**\n   * The id attribute of the radio.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute of the radio.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The value attribute of the radio.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The height of the switch.\n   */\n  height: PropTypes.number,\n\n  /**\n   * When true, the switch is checked (on).\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the switch is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the switch is invalid.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string.isRequired,\n\n  /**\n   * When true, the switch has a check icon.\n   */\n  hasCheckIcon: PropTypes.bool,\n\n  /**\n   * When true, the switch is true by default.\n   * This is for uncontrolled usage.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Switch, \"defaultProps\", {\n  height: 16,\n  onChange: function onChange() {},\n  appearance: 'default',\n  hasCheckIcon: true,\n  disabled: false\n});\n\nexport default withTheme(Switch);","map":null,"metadata":{},"sourceType":"module"}