{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../libs');\n\nvar _ajax = require('./ajax');\n\nvar _ajax2 = _interopRequireDefault(_ajax);\n\nvar _Cover = require('./Cover');\n\nvar _Cover2 = _interopRequireDefault(_Cover);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar AjaxUpload = function (_Component) {\n  (0, _inherits3.default)(AjaxUpload, _Component);\n\n  function AjaxUpload(props) {\n    (0, _classCallCheck3.default)(this, AjaxUpload);\n    return (0, _possibleConstructorReturn3.default)(this, (AjaxUpload.__proto__ || Object.getPrototypeOf(AjaxUpload)).call(this, props));\n  }\n\n  (0, _createClass3.default)(AjaxUpload, [{\n    key: 'isImage',\n    value: function isImage(str) {\n      return str.indexOf('image') !== -1;\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      if (e.target instanceof HTMLInputElement) {\n        var files = e.target.files;\n\n        if (!files) {\n          return;\n        }\n\n        this.uploadFiles(files);\n        this.refs.input.value = null;\n      }\n    }\n  }, {\n    key: 'uploadFiles',\n    value: function uploadFiles(files) {\n      var _this2 = this;\n\n      var _props = this.props,\n          multiple = _props.multiple,\n          limit = _props.limit,\n          onExceed = _props.onExceed,\n          fileList = _props.fileList;\n\n      if (limit && fileList.length + files.length > limit) {\n        onExceed && onExceed(files, fileList);\n        return;\n      }\n\n      var postFiles = Array.prototype.slice.call(files);\n\n      if (postFiles.length === 0) {\n        return;\n      }\n\n      if (!multiple) {\n        postFiles = postFiles.slice(0, 1);\n      }\n\n      postFiles.forEach(function (file) {\n        _this2.props.onStart(file);\n\n        if (_this2.props.autoUpload) _this2.upload(file);\n      });\n    }\n  }, {\n    key: 'upload',\n    value: function upload(rawFile, file) {\n      var _this3 = this;\n\n      var beforeUpload = this.props.beforeUpload;\n\n      if (!beforeUpload) {\n        return this.post(rawFile);\n      }\n\n      var before = beforeUpload(rawFile);\n\n      if (before && before.then) {\n        before.then(function (processedFile) {\n          if (Object.prototype.toString.call(processedFile) === '[object File]') {\n            _this3.post(processedFile);\n          } else {\n            _this3.post(rawFile);\n          }\n        }, function () {\n          if (file && typeof _this3.props.onRemove === 'function') _this3.props.onRemove(file);\n        });\n      } else if (before !== false) {\n        this.post(rawFile);\n      } else {\n        if (file && typeof this.props.onRemove === 'function') this.props.onRemove(file);\n      }\n    }\n  }, {\n    key: 'post',\n    value: function post(file) {\n      var _props2 = this.props,\n          filename = _props2.name,\n          headers = _props2.headers,\n          withCredentials = _props2.withCredentials,\n          data = _props2.data,\n          action = _props2.action,\n          _onProgress = _props2.onProgress,\n          _onSuccess = _props2.onSuccess,\n          _onError = _props2.onError;\n      var _props$httpRequest = this.props.httpRequest,\n          httpRequest = _props$httpRequest === undefined ? _ajax2.default : _props$httpRequest;\n      var req = httpRequest({\n        headers: headers,\n        withCredentials: withCredentials,\n        file: file,\n        data: data,\n        filename: filename,\n        action: action,\n        onProgress: function onProgress(e) {\n          return _onProgress(e, file);\n        },\n        onSuccess: function onSuccess(res) {\n          return _onSuccess(res, file);\n        },\n        onError: function onError(err) {\n          return _onError(err, file);\n        }\n      });\n\n      if (req && req.then) {\n        req.then(_onSuccess, _onError);\n      }\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      if (!this.props.disabled) {\n        this.refs.input.click();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props3 = this.props,\n          drag = _props3.drag,\n          multiple = _props3.multiple,\n          accept = _props3.accept,\n          listType = _props3.listType,\n          disabled = _props3.disabled;\n      return _react2.default.createElement('div', {\n        className: this.classNames((0, _defineProperty3.default)({\n          'el-upload': true\n        }, 'el-upload--' + listType, true)),\n        onClick: function onClick() {\n          return _this4.handleClick();\n        }\n      }, drag ? _react2.default.createElement(_Cover2.default, {\n        disabled: disabled,\n        onFile: function onFile(file) {\n          return _this4.uploadFiles(file);\n        }\n      }, this.props.children) : this.props.children, _react2.default.createElement('input', {\n        className: 'el-upload__input',\n        type: 'file',\n        ref: 'input',\n        onChange: function onChange(e) {\n          return _this4.handleChange(e);\n        },\n        multiple: multiple,\n        accept: accept\n      }));\n    }\n  }]);\n  return AjaxUpload;\n}(_libs.Component);\n\nAjaxUpload.defaultProps = {\n  name: 'file'\n};\nvar _default = AjaxUpload;\nexports.default = _default;\nAjaxUpload.propTypes = {\n  drag: _libs.PropTypes.bool,\n  data: _libs.PropTypes.object,\n  action: _libs.PropTypes.string.isRequired,\n  name: _libs.PropTypes.string,\n  accept: _libs.PropTypes.string,\n  headers: _libs.PropTypes.object,\n  withCredentials: _libs.PropTypes.bool,\n  multiple: _libs.PropTypes.bool,\n  onStart: _libs.PropTypes.func,\n  onProgress: _libs.PropTypes.func,\n  onSuccess: _libs.PropTypes.func,\n  onError: _libs.PropTypes.func,\n  beforeUpload: _libs.PropTypes.func,\n  autoUpload: _libs.PropTypes.bool,\n  listType: _libs.PropTypes.string,\n  fileList: _libs.PropTypes.array,\n  disabled: _libs.PropTypes.bool,\n  limit: _libs.PropTypes.number,\n  onExceed: _libs.PropTypes.func,\n  httpRequest: _libs.PropTypes.func\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(AjaxUpload, 'AjaxUpload', 'src/upload/AjaxUpload.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/upload/AjaxUpload.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}