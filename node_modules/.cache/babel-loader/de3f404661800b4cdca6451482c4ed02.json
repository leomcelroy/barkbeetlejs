{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _paneProps, _subpaneProps, _animationStyles;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'ui-box';\nimport { Pane } from '../../layers';\nimport { Overlay } from '../../overlay';\nimport { Position } from '../../constants';\nimport SheetClose from './SheetClose';\nvar paneProps = (_paneProps = {}, _defineProperty(_paneProps, Position.LEFT, {\n  height: '100vh',\n  maxWidth: '100vw',\n  position: 'absolute',\n  left: 0,\n  right: 'auto'\n}), _defineProperty(_paneProps, Position.RIGHT, {\n  height: '100vh',\n  maxWidth: '100vw',\n  position: 'absolute',\n  right: 0,\n  left: 'auto'\n}), _defineProperty(_paneProps, Position.TOP, {\n  width: '100vw',\n  position: 'absolute',\n  maxHeight: '100vh',\n  top: 0,\n  bottom: 'auto'\n}), _defineProperty(_paneProps, Position.BOTTOM, {\n  width: '100vw',\n  maxHeight: '100vh',\n  position: 'absolute',\n  bottom: 0,\n  top: 'auto'\n}), _paneProps);\nvar subpaneProps = (_subpaneProps = {}, _defineProperty(_subpaneProps, Position.LEFT, {\n  height: '100vh'\n}), _defineProperty(_subpaneProps, Position.RIGHT, {\n  height: '100vh'\n}), _defineProperty(_subpaneProps, Position.TOP, {\n  width: '100vw'\n}), _defineProperty(_subpaneProps, Position.BOTTOM, {\n  width: '100vw'\n}), _subpaneProps);\nvar animationEasing = {\n  deceleration: \"cubic-bezier(0.0, 0.0, 0.2, 1)\",\n  acceleration: \"cubic-bezier(0.4, 0.0, 1, 1)\"\n};\nvar ANIMATION_DURATION = 240;\n\nvar withAnimations = function withAnimations(animateIn, animateOut) {\n  return {\n    '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n      animation: \"\".concat(animateIn, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.deceleration, \" both\")\n    },\n    '&[data-state=\"exiting\"]': {\n      animation: \"\".concat(animateOut, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.acceleration, \" both\")\n    }\n  };\n};\n\nvar animationStyles = (_animationStyles = {}, _defineProperty(_animationStyles, Position.LEFT, _objectSpread({\n  transform: \"translateX(-100%)\"\n}, withAnimations(css.keyframes('anchoredLeftSlideInAnimation', {\n  from: {\n    transform: \"translateX(-100%)\"\n  },\n  to: {\n    transform: \"translateX(0)\"\n  }\n}), css.keyframes('anchoredLeftSlideOutAnimation', {\n  from: {\n    transform: \"translateX(0)\"\n  },\n  to: {\n    transform: \"translateX(-100%)\"\n  }\n})))), _defineProperty(_animationStyles, Position.RIGHT, _objectSpread({\n  transform: \"translateX(100%)\"\n}, withAnimations(css.keyframes('anchoredRightSlideInAnimation', {\n  from: {\n    transform: \"translateX(100%)\"\n  },\n  to: {\n    transform: \"translateX(0)\"\n  }\n}), css.keyframes('anchoredRightSlideOutAnimation', {\n  from: {\n    transform: \"translateX(0)\"\n  },\n  to: {\n    transform: \"translateX(100%)\"\n  }\n})))), _defineProperty(_animationStyles, Position.TOP, _objectSpread({\n  transform: \"translateY(-100%)\"\n}, withAnimations(css.keyframes('anchoredTopSlideInAnimation', {\n  from: {\n    transform: \"translateY(-100%)\"\n  },\n  to: {\n    transform: \"translateY(0)\"\n  }\n}), css.keyframes('anchoredTopSlideOutAnimation', {\n  from: {\n    transform: \"translateY(0)\"\n  },\n  to: {\n    transform: \"translateY(-100%)\"\n  }\n})))), _defineProperty(_animationStyles, Position.BOTTOM, _objectSpread({\n  transform: \"translateY(100%)\"\n}, withAnimations(css.keyframes('anchoredBottomSlideInAnimation', {\n  from: {\n    transform: \"translateY(100%)\"\n  },\n  to: {\n    transform: \"translateY(0)\"\n  }\n}), css.keyframes('anchoredBottomSlideOutAnimation', {\n  from: {\n    transform: \"translateY(0)\"\n  },\n  to: {\n    transform: \"translateY(100%)\"\n  }\n})))), _animationStyles);\n\nvar SideSheet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SideSheet, _React$Component);\n\n  function SideSheet() {\n    _classCallCheck(this, SideSheet);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SideSheet).apply(this, arguments));\n  }\n\n  _createClass(SideSheet, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          width = _this$props.width,\n          isShown = _this$props.isShown,\n          children = _this$props.children,\n          containerProps = _this$props.containerProps,\n          onOpenComplete = _this$props.onOpenComplete,\n          onCloseComplete = _this$props.onCloseComplete,\n          onBeforeClose = _this$props.onBeforeClose,\n          shouldCloseOnOverlayClick = _this$props.shouldCloseOnOverlayClick,\n          shouldCloseOnEscapePress = _this$props.shouldCloseOnEscapePress,\n          position = _this$props.position;\n      return React.createElement(Overlay, {\n        isShown: isShown,\n        shouldCloseOnClick: shouldCloseOnOverlayClick,\n        shouldCloseOnEscapePress: shouldCloseOnEscapePress,\n        onBeforeClose: onBeforeClose,\n        onExited: onCloseComplete,\n        onEntered: onOpenComplete\n      }, function (_ref) {\n        var state = _ref.state,\n            close = _ref.close;\n        return React.createElement(Pane, _extends({\n          width: width\n        }, paneProps[position], {\n          css: animationStyles[position],\n          \"data-state\": state\n        }), React.createElement(SheetClose, {\n          position: position,\n          \"data-state\": state,\n          isClosing: false,\n          onClick: close\n        }), React.createElement(Pane, _extends({\n          elevation: 4,\n          backgroundColor: \"white\",\n          overflowY: \"auto\",\n          maxHeight: \"100vh\",\n          \"data-state\": state,\n          width: width\n        }, subpaneProps[position], containerProps), typeof children === 'function' ? children({\n          close: close\n        }) : children));\n      });\n    }\n  }]);\n\n  return SideSheet;\n}(React.Component);\n\nSideSheet.displayName = \"SideSheet\";\n\n_defineProperty(SideSheet, \"propTypes\", {\n  /**\n   * Children can be a string, node or a function accepting `({ close })`.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * When true, the Side Sheet is shown.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func,\n\n  /**\n   * Function called when overlay is about to close.\n   * Return `false` to prevent the sheet from closing.\n   * type: `Function -> Boolean`\n   */\n  onBeforeClose: PropTypes.func,\n\n  /**\n   * Boolean indicating if clicking the overlay should close the overlay.\n   */\n  shouldCloseOnOverlayClick: PropTypes.bool,\n\n  /**\n   * Boolean indicating if pressing the esc key should close the overlay.\n   */\n  shouldCloseOnEscapePress: PropTypes.bool,\n\n  /**\n   * Width of the SideSheet.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n\n  /**\n   * Properties to pass through the SideSheet container Pane.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Positions the sheet to the top, left, right, or bottom of the screen.\n   */\n  position: PropTypes.oneOf([Position.TOP, Position.BOTTOM, Position.LEFT, Position.RIGHT]).isRequired\n});\n\n_defineProperty(SideSheet, \"defaultProps\", {\n  width: 620,\n  onCloseComplete: function onCloseComplete() {},\n  onOpenComplete: function onOpenComplete() {},\n  shouldCloseOnOverlayClick: true,\n  shouldCloseOnEscapePress: true,\n  position: Position.RIGHT\n});\n\nexport default SideSheet;","map":null,"metadata":{},"sourceType":"module"}