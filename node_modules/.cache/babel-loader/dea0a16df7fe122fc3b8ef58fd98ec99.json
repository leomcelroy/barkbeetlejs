{"ast":null,"code":"var _classCallCheck = require(\"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/leomcelroy/Desktop/barkbeetle_js/node_modules/@babel/runtime/helpers/createClass\");\n\nvar $ = Symbol('private properties');\n\nvar EventTarget =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function EventTarget() {\n    _classCallCheck(this, EventTarget);\n\n    this[$] = {};\n    this[$].listeners = {};\n  }\n\n  _createClass(EventTarget, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, callback) {\n      if (!(type in this[$].listeners)) {\n        this[$].listeners[type] = [];\n      }\n\n      this[$].listeners[type].push(callback);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, callback) {\n      if (!(type in this[$].listeners)) {\n        return;\n      }\n\n      var stack = this[$].listeners[type];\n\n      for (var i = 0, il = stack.length; i < il; i++) {\n        if (stack[i] === callback) {\n          stack.splice(i, 1);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (!(event.type in this[$].listeners)) {\n        return true;\n      }\n\n      var stack = this[$].listeners[event.type];\n      event.target = this;\n      stack.forEach(function (el) {\n        el(event);\n      });\n      return !event.defaultPrevented;\n    }\n  }]);\n\n  return EventTarget;\n}();\n\nmodule.exports = EventTarget;","map":null,"metadata":{},"sourceType":"script"}