{"ast":null,"code":"import sort from './sort';\nimport _range from './range';\nimport _within from './within';\nexport default function kdbush(points, getX, getY, nodeSize, ArrayType) {\n  return new KDBush(points, getX, getY, nodeSize, ArrayType);\n}\n\nfunction KDBush(points, getX, getY, nodeSize, ArrayType) {\n  getX = getX || defaultGetX;\n  getY = getY || defaultGetY;\n  ArrayType = ArrayType || Array;\n  this.nodeSize = nodeSize || 64;\n  this.points = points;\n  this.ids = new ArrayType(points.length);\n  this.coords = new ArrayType(points.length * 2);\n\n  for (var i = 0; i < points.length; i++) {\n    this.ids[i] = i;\n    this.coords[2 * i] = getX(points[i]);\n    this.coords[2 * i + 1] = getY(points[i]);\n  }\n\n  sort(this.ids, this.coords, this.nodeSize, 0, this.ids.length - 1, 0);\n}\n\nKDBush.prototype = {\n  range: function range(minX, minY, maxX, maxY) {\n    return _range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n  },\n  within: function within(x, y, r) {\n    return _within(this.ids, this.coords, x, y, r, this.nodeSize);\n  }\n};\n\nfunction defaultGetX(p) {\n  return p[0];\n}\n\nfunction defaultGetY(p) {\n  return p[1];\n}","map":null,"metadata":{},"sourceType":"module"}