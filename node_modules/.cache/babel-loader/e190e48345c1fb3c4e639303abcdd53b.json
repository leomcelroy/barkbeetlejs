{"ast":null,"code":"import { css } from 'glamor';\nimport scales from '../foundational-styles/scales';\nimport colors from '../foundational-styles/colors';\n\nvar getTrimStyle = function getTrimStyle(intent) {\n  return {\n    '&:before': {\n      content: '\"\"',\n      width: 3,\n      height: '100%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      backgroundColor: colors.intent[intent]\n    }\n  };\n};\n/**\n * Get the themed props for the Alert component.\n * @param {Object} props\n * @param {string} props.appearance - default theme supports `default` and `card`.\n * @param {Intent} props.intent - intent of the alert. May be `none`.\n * @param {boolean} props.hasTrim - when true, the alert has a trim.\n * @return {Object} { className, ...themedProps }\n */\n\n\nvar getAlertProps = function getAlertProps(_ref) {\n  var appearance = _ref.appearance,\n      intent = _ref.intent,\n      hasTrim = _ref.hasTrim;\n  var trimClassName = hasTrim ? css(getTrimStyle(intent)).toString() : '';\n\n  switch (appearance) {\n    case 'card':\n      return {\n        elevation: 1,\n        borderRadius: 3,\n        className: trimClassName\n      };\n\n    case 'default':\n    default:\n      return {\n        boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A),\n        className: trimClassName\n      };\n  }\n};\n\nexport default getAlertProps;","map":null,"metadata":{},"sourceType":"module"}