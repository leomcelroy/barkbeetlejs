{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Pane } from '../../layers';\nimport { withTheme } from '../../theme';\nimport safeInvoke from '../../lib/safe-invoke';\nimport warning from '../../lib/warning';\nimport { TableRowProvider } from './TableRowContext';\nimport manageTableRowFocusInteraction from './manageTableRowFocusInteraction';\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TableRow, _PureComponent);\n\n  function TableRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      if (typeof _this.props.onClick === 'function') {\n        _this.props.onClick(e);\n      }\n\n      if (_this.props.isSelectable) {\n        if (_this.props.isSelected) {\n          _this.props.onDeselect();\n        } else {\n          _this.props.onSelect();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyDown\", function (e) {\n      if (_this.props.isSelectable) {\n        var key = e.key;\n\n        if (key === 'Enter' || key === ' ') {\n          _this.props.onSelect();\n\n          e.preventDefault();\n        } else if (key === 'ArrowUp' || key === 'ArrowDown') {\n          try {\n            manageTableRowFocusInteraction(key, _this.mainRef);\n          } catch (error) {}\n        } else if (key === 'Escape') {\n          if (_this.mainRef) _this.mainRef.blur();\n        }\n      }\n\n      _this.props.onKeyPress(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onRef\", function (ref) {\n      _this.mainRef = ref;\n      safeInvoke(_this.props.innerRef, ref);\n    });\n\n    return _this;\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          innerRef = _this$props.innerRef,\n          theme = _this$props.theme,\n          className = _this$props.className,\n          height = _this$props.height,\n          children = _this$props.children,\n          intent = _this$props.intent,\n          appearance = _this$props.appearance,\n          _this$props$tabIndex = _this$props.tabIndex,\n          tabIndex = _this$props$tabIndex === void 0 ? -1 : _this$props$tabIndex,\n          onClick = _this$props.onClick,\n          onKeyPress = _this$props.onKeyPress,\n          onSelect = _this$props.onSelect,\n          onDeselect = _this$props.onDeselect,\n          isHighlighted = _this$props.isHighlighted,\n          isSelectable = _this$props.isSelectable,\n          isSelected = _this$props.isSelected,\n          props = _objectWithoutProperties(_this$props, [\"innerRef\", \"theme\", \"className\", \"height\", \"children\", \"intent\", \"appearance\", \"tabIndex\", \"onClick\", \"onKeyPress\", \"onSelect\", \"onDeselect\", \"isHighlighted\", \"isSelectable\", \"isSelected\"]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(typeof onClick === 'function', '<Table.Row> expects `onSelect` prop, but you passed `onClick`.');\n      }\n\n      var themedClassName = theme.getRowClassName(appearance, intent);\n      return React.createElement(TableRowProvider, {\n        height: height\n      }, React.createElement(Pane, _extends({\n        innerRef: this.onRef,\n        className: cx(themedClassName, className),\n        display: \"flex\",\n        \"aria-selected\": isHighlighted,\n        \"aria-current\": isSelected,\n        \"data-isselectable\": isSelectable,\n        tabIndex: isSelectable ? tabIndex : undefined,\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        height: height,\n        borderBottom: \"muted\"\n      }, props), children));\n    }\n  }]);\n\n  return TableRow;\n}(PureComponent);\n\nTableRow.displayName = \"TableRow\";\n\n_defineProperty(TableRow, \"propTypes\", _objectSpread({}, Pane.propTypes, {\n  /**\n   * The height of the row. Remember to add paddings when using \"auto\".\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onDeselect: PropTypes.func,\n\n  /**\n   * Makes the TableRow selectable.\n   */\n  isSelectable: PropTypes.bool,\n\n  /**\n   * Makes the TableRow selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * Manually set the TableRow to be highlighted.\n   */\n  isHighlighted: PropTypes.bool,\n\n  /**\n   * The intent of the alert.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * The appearance of the table row. Default theme only support default.\n   */\n  appearance: PropTypes.string.isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * Class name passed to the table row.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n}));\n\n_defineProperty(TableRow, \"defaultProps\", {\n  intent: 'none',\n  appearance: 'default',\n  height: 48,\n  onSelect: function onSelect() {},\n  onDeselect: function onDeselect() {},\n  onKeyPress: function onKeyPress() {}\n});\n\nexport default withTheme(TableRow);","map":null,"metadata":{},"sourceType":"module"}