{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar classNames = require('classnames');\n\nvar blacklist = require('blacklist');\n\nvar BUTTON_SIZES = ['lg', 'sm', 'xs'];\nvar BUTTON_TYPES = ['default', 'default-primary', 'default-success', 'default-warning', 'default-danger', 'hollow-primary', 'hollow-success', 'hollow-warning', 'hollow-danger', 'primary', 'success', 'warning', 'danger', 'link', 'link-text', 'link-primary', 'link-success', 'link-warning', 'link-danger', 'link-cancel', 'link-delete'];\nmodule.exports = React.createClass({\n  displayName: 'Button',\n  propTypes: {\n    block: React.PropTypes.bool,\n    className: React.PropTypes.string,\n    component: React.PropTypes.element,\n    href: React.PropTypes.string,\n    isActive: React.PropTypes.bool,\n    size: React.PropTypes.oneOf(BUTTON_SIZES),\n    submit: React.PropTypes.bool,\n    type: React.PropTypes.oneOf(BUTTON_TYPES)\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      type: 'default'\n    };\n  },\n  render: function render() {\n    // classes\n    var componentClass = classNames('Button', 'Button--' + this.props.type, this.props.size ? 'Button--' + this.props.size : null, {\n      'Button--block': this.props.block,\n      'is-active': this.props.isActive\n    }, this.props.className); // props\n\n    var props = blacklist(this.props, 'type', 'size', 'component', 'className', 'submit');\n    props.className = componentClass;\n\n    if (this.props.component) {\n      return React.cloneElement(this.props.component, props);\n    }\n\n    var tag = 'button';\n    props.type = this.props.submit ? 'submit' : 'button';\n\n    if (props.href) {\n      tag = 'a';\n      delete props.type;\n    }\n\n    return React.createElement(tag, props, this.props.children);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}