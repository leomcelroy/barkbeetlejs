{"ast":null,"code":"import tinycolor from 'tinycolor2';\nimport { Themer } from '../../../../themer';\nimport memoizeClassName from '../utils/memoizeClassName';\nimport scales from '../foundational-styles/scales';\nimport palette from '../foundational-styles/palette';\nvar Appearances = {};\nAppearances.default = Themer.createRowAppearance({\n  base: {},\n  hover: {\n    backgroundColor: scales.neutral.N1A\n  },\n  focus: {\n    backgroundColor: scales.blue.B1A\n  },\n  active: {\n    backgroundColor: scales.blue.B2A\n  },\n  current: {}\n});\nAppearances.danger = Themer.createRowAppearance({\n  base: {\n    backgroundColor: palette.red.lightest\n  },\n  hover: {\n    backgroundColor: tinycolor(palette.red.lightest).darken(1).toString()\n  },\n  focus: {\n    backgroundColor: tinycolor(palette.red.lightest).darken(1.5).toString()\n  },\n  active: {\n    backgroundColor: tinycolor(palette.red.lightest).darken(2.2).toString()\n  },\n  current: {}\n});\nAppearances.warning = Themer.createRowAppearance({\n  base: {\n    backgroundColor: palette.orange.lightest\n  },\n  hover: {\n    backgroundColor: tinycolor(palette.orange.lightest).darken(1).toString()\n  },\n  focus: {\n    backgroundColor: tinycolor(palette.orange.lightest).darken(1.5).toString()\n  },\n  active: {\n    backgroundColor: tinycolor(palette.orange.lightest).darken(2.5).toString()\n  },\n  current: {}\n});\nAppearances.success = Themer.createRowAppearance({\n  base: {\n    backgroundColor: palette.green.lightest\n  },\n  hover: {\n    backgroundColor: tinycolor(palette.green.lightest).darken(1).toString()\n  },\n  focus: {\n    backgroundColor: tinycolor(palette.green.lightest).darken(2).toString()\n  },\n  active: {\n    backgroundColor: tinycolor(palette.green.lightest).darken(3).toString()\n  },\n  current: {}\n});\n/**\n * Get the appearance of a `Row`.\n * @param {string} appearance â€” only one default appearance.\n * @param {string} intent - none, info, success, warning, danger.\n * @return {string} the appearance object.\n */\n\nvar getRowAppearance = function getRowAppearance(appearance, intent) {\n  switch (intent) {\n    case 'danger':\n      return Appearances.danger;\n\n    case 'warning':\n      return Appearances.warning;\n\n    case 'success':\n      return Appearances.success;\n\n    case 'none':\n    default:\n      return Appearances.default;\n  }\n};\n/**\n * Get the className of a `Row`.\n * @param {string} appearance\n * @return {string} the appearance class name.\n */\n\n\nexport default memoizeClassName(getRowAppearance);","map":null,"metadata":{},"sourceType":"module"}