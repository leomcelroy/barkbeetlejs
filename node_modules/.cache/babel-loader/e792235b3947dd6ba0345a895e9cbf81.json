{"ast":null,"code":"'use strict';\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _blacklist = require('blacklist');\n\nvar _blacklist2 = _interopRequireDefault(_blacklist);\n\nvar _constants = require('../constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nmodule.exports = _react2['default'].createClass({\n  displayName: 'ResponsiveText',\n  propTypes: {\n    hiddenLG: _react2['default'].PropTypes.string,\n    hiddenMD: _react2['default'].PropTypes.string,\n    hiddenSM: _react2['default'].PropTypes.string,\n    hiddenXS: _react2['default'].PropTypes.string,\n    visibleLG: _react2['default'].PropTypes.string,\n    visibleMD: _react2['default'].PropTypes.string,\n    visibleSM: _react2['default'].PropTypes.string,\n    visibleXS: _react2['default'].PropTypes.string\n  },\n  getInitialState: function getInitialState() {\n    return {\n      windowWidth: typeof window !== 'undefined' ? window.innerWidth : 0\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    if (typeof window !== 'undefined') window.addEventListener('resize', this.handleResize);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (typeof window !== 'undefined') window.removeEventListener('resize', this.handleResize);\n  },\n  handleResize: function handleResize() {\n    this.setState({\n      windowWidth: typeof window !== 'undefined' ? window.innerWidth : 0\n    });\n  },\n  render: function render() {\n    var _props = this.props;\n    var hiddenXS = _props.hiddenXS;\n    var hiddenSM = _props.hiddenSM;\n    var hiddenMD = _props.hiddenMD;\n    var hiddenLG = _props.hiddenLG;\n    var visibleXS = _props.visibleXS;\n    var visibleSM = _props.visibleSM;\n    var visibleMD = _props.visibleMD;\n    var visibleLG = _props.visibleLG;\n    var windowWidth = this.state.windowWidth;\n    var text = undefined; // set widths / flex-basis\n\n    if (windowWidth < _constants2['default'].breakpoint.xs) {\n      text = visibleXS || hiddenSM || hiddenMD || hiddenLG;\n    } else if (windowWidth < _constants2['default'].breakpoint.sm) {\n      text = hiddenXS || visibleSM || hiddenMD || hiddenLG;\n    } else if (windowWidth < _constants2['default'].breakpoint.md) {\n      text = hiddenXS || hiddenSM || visibleMD || hiddenLG;\n    } else {\n      text = hiddenXS || hiddenSM || hiddenMD || visibleLG;\n    }\n\n    var props = (0, _blacklist2['default'])(this.props, {\n      'hiddenXS': true,\n      'hiddenSM': true,\n      'hiddenMD': true,\n      'hiddenLG': true,\n      'visibleXS': true,\n      'visibleSM': true,\n      'visibleMD': true,\n      'visibleLG': true\n    });\n    return _react2['default'].createElement('span', props, text);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}