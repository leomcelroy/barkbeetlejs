{"ast":null,"code":"import _classCallCheck from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { cloneElement } from 'react';\nimport PropTypes from './utils/proptypes';\nimport Enhance from './higherOrders/FormItem';\n\nvar FormItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormItem, _React$Component);\n\n  function FormItem(props) {\n    var _this;\n\n    _classCallCheck(this, FormItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormItem).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FormItem, [{\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      if (value && value.nativeEvent) {\n        value = value.target.value;\n      }\n\n      this.props.onChange(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          readOnly = _this$props.readOnly;\n      var value = this.props.value;\n\n      if (value === undefined && children && typeof children.type === 'object' && children.type.defaultProps) {\n        value = children.type.defaultProps.value;\n      }\n\n      if (value === undefined && children.props) {\n        value = children.props.value;\n      }\n\n      return cloneElement(children, {\n        value: value,\n        readOnly: readOnly,\n        onChange: this.handleChange\n      });\n    }\n  }]);\n\n  return FormItem;\n}(React.Component);\n\nFormItem.propTypes = {\n  children: PropTypes.element,\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n  value: PropTypes.any\n};\nexport default Enhance(FormItem);","map":null,"metadata":{},"sourceType":"module"}