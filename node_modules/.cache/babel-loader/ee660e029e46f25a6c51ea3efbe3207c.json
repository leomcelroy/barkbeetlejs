{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _libs = require('../../../libs');\n\nvar _dom = require('../../../libs/utils/dom');\n\nvar _scrollbar = require('../../scrollbar');\n\nvar _PopperBase2 = require('./PopperBase');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar TimeSelectPanel = function (_PopperBase) {\n  (0, _inherits3.default)(TimeSelectPanel, _PopperBase);\n  (0, _createClass3.default)(TimeSelectPanel, null, [{\n    key: 'propTypes',\n    get: function get() {\n      return Object.assign({\n        start: _libs.PropTypes.string,\n        end: _libs.PropTypes.string,\n        step: _libs.PropTypes.string,\n        minTime: _libs.PropTypes.string,\n        maxTime: _libs.PropTypes.string,\n        value: _libs.PropTypes.string,\n        onPicked: _libs.PropTypes.func,\n        //(string)=>date\n        dateParser: _libs.PropTypes.func.isRequired,\n        //()=>HtmlElement\n        getPopperRefElement: _libs.PropTypes.func,\n        popperMixinOption: _libs.PropTypes.object\n      }, _PopperBase2.PopperBase.propTypes);\n    }\n  }]);\n\n  function TimeSelectPanel(props) {\n    (0, _classCallCheck3.default)(this, TimeSelectPanel);\n    return (0, _possibleConstructorReturn3.default)(this, (TimeSelectPanel.__proto__ || Object.getPrototypeOf(TimeSelectPanel)).call(this, props));\n  }\n\n  (0, _createClass3.default)(TimeSelectPanel, [{\n    key: 'handleClick',\n    value: function handleClick(item) {\n      var _props = this.props,\n          onPicked = _props.onPicked,\n          dateParser = _props.dateParser;\n\n      if (!item.disabled) {\n        onPicked(dateParser(item.value));\n      }\n    }\n  }, {\n    key: 'items',\n    value: function items() {\n      return TimeSelectPanel.items(this.props);\n    }\n  }, {\n    key: 'scrollToOption',\n    value: function scrollToOption() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'selected';\n      var menu = this.refs.root.querySelector('.el-picker-panel__content');\n      (0, _dom.scrollIntoView)(menu, menu.getElementsByClassName(className)[0]);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.scrollToOption();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      clearTimeout(this._timer);\n\n      if (nextProps.value !== this.props.value) {\n        this._timer = setTimeout(function () {\n          return _this2.scrollToOption();\n        }, 0);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var value = this.props.value;\n      return _react2.default.createElement('div', {\n        ref: 'root',\n        className: 'el-picker-panel time-select'\n      }, _react2.default.createElement(_scrollbar.Scrollbar, {\n        wrapClass: 'el-picker-panel__content',\n        noresize: true\n      }, this.items().map(function (item, idx) {\n        return _react2.default.createElement('div', {\n          key: idx,\n          className: _this3.classNames('time-select-item', {\n            selected: value === item.value,\n            disabled: item.disabled\n          }),\n          disabled: item.disabled,\n          onClick: function onClick() {\n            return _this3.handleClick(item);\n          }\n        }, item.value);\n      })));\n    }\n  }]);\n  return TimeSelectPanel;\n}(_PopperBase2.PopperBase);\n\nvar _default = TimeSelectPanel;\nexports.default = _default;\n\nTimeSelectPanel.isValid = function (value, _ref) {\n  var start = _ref.start,\n      end = _ref.end,\n      step = _ref.step,\n      minTime = _ref.minTime,\n      maxTime = _ref.maxTime;\n  var items = TimeSelectPanel.items({\n    start: start,\n    end: end,\n    step: step,\n    minTime: minTime,\n    maxTime: maxTime\n  });\n  return !!items.filter(function (e) {\n    return !e.disabled;\n  }).find(function (e) {\n    return e.value === value;\n  });\n};\n\nTimeSelectPanel.items = function (_ref2) {\n  var start = _ref2.start,\n      end = _ref2.end,\n      step = _ref2.step,\n      minTime = _ref2.minTime,\n      maxTime = _ref2.maxTime;\n  var result = [];\n\n  if (start && end && step) {\n    var current = start;\n\n    while (compareTime(current, end) <= 0) {\n      result.push({\n        value: current,\n        disabled: compareTime(current, minTime || '-1:-1') <= 0 || compareTime(current, maxTime || '100:100') >= 0\n      });\n      current = nextTime(current, step);\n    }\n  }\n\n  return result;\n};\n\nTimeSelectPanel.defaultProps = {\n  start: '09:00',\n  end: '18:00',\n  step: '00:30',\n  minTime: '',\n  onPicked: function onPicked() {},\n  popperMixinOption: {}\n};\n\nvar parseTime = function parseTime(time) {\n  var values = (time || '').split(':');\n\n  if (values.length >= 2) {\n    var hours = parseInt(values[0], 10);\n    var minutes = parseInt(values[1], 10);\n    return {\n      hours: hours,\n      minutes: minutes\n    };\n  }\n  /* istanbul ignore next */\n\n\n  return null;\n};\n\nvar compareTime = function compareTime(time1, time2) {\n  var value1 = parseTime(time1);\n  var value2 = parseTime(time2);\n  var minutes1 = value1.minutes + value1.hours * 60;\n  var minutes2 = value2.minutes + value2.hours * 60;\n\n  if (minutes1 === minutes2) {\n    return 0;\n  }\n\n  return minutes1 > minutes2 ? 1 : -1;\n};\n\nvar formatTime = function formatTime(time) {\n  return (time.hours < 10 ? '0' + time.hours : time.hours) + ':' + (time.minutes < 10 ? '0' + time.minutes : time.minutes);\n};\n\nvar nextTime = function nextTime(time, step) {\n  var timeValue = parseTime(time);\n  var stepValue = parseTime(step);\n  var next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes\n  };\n  next.minutes += stepValue.minutes;\n  next.hours += stepValue.hours;\n  next.hours += Math.floor(next.minutes / 60);\n  next.minutes = next.minutes % 60;\n  return formatTime(next);\n};\n\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(TimeSelectPanel, 'TimeSelectPanel', 'src/date-picker/panel/TimeSelectPanel.jsx');\n\n  __REACT_HOT_LOADER__.register(parseTime, 'parseTime', 'src/date-picker/panel/TimeSelectPanel.jsx');\n\n  __REACT_HOT_LOADER__.register(compareTime, 'compareTime', 'src/date-picker/panel/TimeSelectPanel.jsx');\n\n  __REACT_HOT_LOADER__.register(formatTime, 'formatTime', 'src/date-picker/panel/TimeSelectPanel.jsx');\n\n  __REACT_HOT_LOADER__.register(nextTime, 'nextTime', 'src/date-picker/panel/TimeSelectPanel.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', 'src/date-picker/panel/TimeSelectPanel.jsx');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}