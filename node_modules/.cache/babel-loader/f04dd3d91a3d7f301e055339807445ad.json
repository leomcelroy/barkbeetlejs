{"ast":null,"code":"var defaults = require('./defaults');\n\nvar Box = require('../class/Box');\n\nvar path = require('path');\n\nvar fontkit = require('fontkit');\n\nvar bbox = function bbox(text, x, y, details) {\n  var families = (details.fontFamily || defaults.fontFamily).split(/\\s*,\\s*/);\n  var fontMap = Object.assign({}, defaults.fontFamilyMappings, details.fontFamilyMappings);\n  var fontSize = details.fontSize || defaults.fontSize;\n  var fontDir = details.fontDir || defaults.fontDir;\n  var fontFamily;\n  var font;\n\n  for (var i = 0, il = families.length; i < il; ++i) {\n    if (fontMap[families[i]]) {\n      fontFamily = families[i];\n      break;\n    }\n  }\n\n  if (!fontFamily) {\n    fontFamily = defaults.fontFamily;\n  }\n\n  if (details.preloaded[fontFamily]) {\n    font = details.preloaded[fontFamily];\n  } else {\n    var filename = path.join(fontDir, fontMap[fontFamily]);\n\n    try {\n      font = fontkit.openSync(filename);\n    } catch (e) {\n      console.warn(\"Could not open font \\\"\".concat(fontFamily, \"\\\" in file \\\"\").concat(filename, \"\\\". \").concat(e.toString()));\n      return new Box();\n    }\n\n    details.preloaded[fontFamily] = font;\n  }\n\n  var fontHeight = font.ascent - font.descent;\n  var lineHeight = fontHeight > font.unitsPerEm ? fontHeight : fontHeight + font.lineGap;\n  var height = lineHeight / font.unitsPerEm * fontSize;\n  var width = font.layout(text).glyphs.reduce(function (last, curr) {\n    return last + curr.advanceWidth;\n  }, 0) / font.unitsPerEm * fontSize; // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor\n\n  var xAdjust = 0;\n\n  if (details.textAnchor === 'end') {\n    xAdjust = -width;\n  } else if (details.textAnchor === 'middle') {\n    xAdjust = -width / 2;\n  } // https://www.w3.org/TR/2002/WD-css3-linebox-20020515/\n  // 4.2. Baseline identifiers\n\n\n  var yAdjust = font.ascent; // alphabetic\n\n  if (details.dominantBaseline === 'before-edge' || details.dominantBaseline === 'text-before-edge') {\n    yAdjust = 0;\n  } else if (details.dominantBaseline === 'hanging') {\n    yAdjust = font.ascent - font.xHeight - font.capHeight;\n  } else if (details.dominantBaseline === 'mathematical') {\n    yAdjust = font.ascent - font.xHeight;\n  } else if (details.dominantBaseline === 'middle') {\n    yAdjust = font.ascent - font.xHeight / 2;\n  } else if (details.dominantBaseline === 'central') {\n    yAdjust = font.ascent / 2 + font.descent / 2;\n  } else if (details.dominantBaseline === 'ideographic') {\n    yAdjust = font.ascent + font.descent;\n  }\n\n  return new Box(x + xAdjust, y - yAdjust / font.unitsPerEm * fontSize, width, height);\n};\n\nmodule.exports = {\n  bbox: bbox\n};","map":null,"metadata":{},"sourceType":"script"}