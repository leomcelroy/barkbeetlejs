{"ast":null,"code":"import _toConsumableArray from \"/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// makerjs model, params -> profile toolpath\nimport * as mjs from 'makerjs';\n\nvar profile = function profile(model, params) {\n  //let p = model.models.profile;\n  var p = model;\n  var outline = mjs.model.outline(p, params.compensatedRadius, 1, params.insideCutting); //third parameter is what type of corners, 0 (rounded) by default\n  // outline = mjs.model.zero(outline);\n  // let chains = mjs.model.findChains(expansion);\n\n  var chain = mjs.model.findSingleChain(outline); // console.log(\"outline\", outline, \"chain\", chain);\n\n  var divisions = Math.floor(chain.pathLength / params.minimumSpacing);\n  var spacing = chain.pathLength / divisions;\n  var keyPoints = mjs.chain.toKeyPoints(chain, spacing); // let scaleFactor = 10;\n  // let scaleXY = keyPoints.map(p => [p[0] * scaleFactor, p[1] * scaleFactor]);\n\n  var gcodePoints = keyPoints.map(function (p) {\n    return \"G1 X\".concat(p[0], \" Y\").concat(p[1], \" F\").concat(params.feedRate);\n  }); //let gcode = JSON.parse(JSON.stringify(gcodePoints));\n\n  var firstPoint = keyPoints[0];\n  var paths = params.depthOfPasses.map(function (p, i) {\n    return [\"G1 Z\".concat(params.depthOfPasses[i], \" F12.0\")].concat(_toConsumableArray(gcodePoints), [\"G1 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1], \" F\").concat(params.feedRate)]);\n  });\n  paths = paths.flat(1);\n  var preamble = [params.units, \"G90\"];\n  var gcode = [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate), \"G0 X\".concat(firstPoint[0], \" Y\").concat(firstPoint[1])].concat(_toConsumableArray(paths), [\"G1 Z\".concat(params.jogHeight, \" F\").concat(params.jogRate)]); // write to a new file named\n\n  var filename = 'testGcodeProfile.nc';\n  var text = gcode.join('\\n'); // console.log(\"profile\", outline)\n\n  return {\n    drawing: outline,\n    gcode: text,\n    filename: filename\n  };\n};\n\nexport { profile };","map":{"version":3,"sources":["/Users/leomcelroy/Desktop/barkBeetleEverything/barkbeetle_js_real/src/toolpaths/profile.js"],"names":["mjs","profile","model","params","p","outline","compensatedRadius","insideCutting","chain","findSingleChain","divisions","Math","floor","pathLength","minimumSpacing","spacing","keyPoints","toKeyPoints","gcodePoints","map","feedRate","firstPoint","paths","depthOfPasses","i","flat","preamble","units","gcode","jogHeight","jogRate","filename","text","join","drawing"],"mappings":";AAAA;AAEA,OAAO,KAAKA,GAAZ,MAAqB,SAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC;AACA,MAAIC,CAAC,GAAGF,KAAR;AAEA,MAAIG,OAAO,GAAGL,GAAG,CAACE,KAAJ,CAAUG,OAAV,CAAkBD,CAAlB,EAAqBD,MAAM,CAACG,iBAA5B,EAA+C,CAA/C,EAAkDH,MAAM,CAACI,aAAzD,CAAd,CAJiC,CAIsD;AACvF;AACA;;AACA,MAAIC,KAAK,GAAGR,GAAG,CAACE,KAAJ,CAAUO,eAAV,CAA0BJ,OAA1B,CAAZ,CAPiC,CASjC;;AAEA,MAAIK,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,UAAN,GAAmBV,MAAM,CAACW,cAArC,CAAhB;AACA,MAAIC,OAAO,GAAGP,KAAK,CAACK,UAAN,GAAmBH,SAAjC;AACA,MAAIM,SAAS,GAAGhB,GAAG,CAACQ,KAAJ,CAAUS,WAAV,CAAsBT,KAAtB,EAA6BO,OAA7B,CAAhB,CAbiC,CAejC;AACA;;AAEA,MAAIG,WAAW,GAAGF,SAAS,CAACG,GAAV,CAAc,UAAAf,CAAC;AAAA,yBAAWA,CAAC,CAAC,CAAD,CAAZ,eAAoBA,CAAC,CAAC,CAAD,CAArB,eAA6BD,MAAM,CAACiB,QAApC;AAAA,GAAf,CAAlB,CAlBiC,CAmBjC;;AAEA,MAAIC,UAAU,GAAGL,SAAS,CAAC,CAAD,CAA1B;AAEA,MAAIM,KAAK,GAAGnB,MAAM,CAACoB,aAAP,CAAqBJ,GAArB,CAAyB,UAACf,CAAD,EAAGoB,CAAH;AAAA,0BAC5BrB,MAAM,CAACoB,aAAP,CAAqBC,CAArB,CAD4B,uCAEhCN,WAFgC,kBAG5BG,UAAU,CAAC,CAAD,CAHkB,eAGVA,UAAU,CAAC,CAAD,CAHA,eAGQlB,MAAM,CAACiB,QAHf;AAAA,GAAzB,CAAZ;AAMAE,EAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,CAAW,CAAX,CAAR;AAEA,MAAIC,QAAQ,GAAG,CAACvB,MAAM,CAACwB,KAAR,EAAe,KAAf,CAAf;AAEA,MAAIC,KAAK,kBACAzB,MAAM,CAAC0B,SADP,eACqB1B,MAAM,CAAC2B,OAD5B,iBAEAT,UAAU,CAAC,CAAD,CAFV,eAEkBA,UAAU,CAAC,CAAD,CAF5B,6BAGJC,KAHI,kBAIAnB,MAAM,CAAC0B,SAJP,eAIqB1B,MAAM,CAAC2B,OAJ5B,GAAT,CAjCiC,CAwCjC;;AACA,MAAIC,QAAQ,GAAG,qBAAf;AAEA,MAAIC,IAAI,GAAGJ,KAAK,CAACK,IAAN,CAAW,IAAX,CAAX,CA3CiC,CA6CjC;;AAEA,SAAO;AAACC,IAAAA,OAAO,EAAE7B,OAAV;AAAmBuB,IAAAA,KAAK,EAAEI,IAA1B;AAAgCD,IAAAA,QAAQ,EAARA;AAAhC,GAAP;AACD,CAhDD;;AAmDA,SAAQ9B,OAAR","sourcesContent":["// makerjs model, params -> profile toolpath\n\nimport * as mjs from 'makerjs';\n\nconst profile = (model, params) => {\n  //let p = model.models.profile;\n  let p = model;\n\n  let outline = mjs.model.outline(p, params.compensatedRadius, 1, params.insideCutting); //third parameter is what type of corners, 0 (rounded) by default\n  // outline = mjs.model.zero(outline);\n  // let chains = mjs.model.findChains(expansion);\n  let chain = mjs.model.findSingleChain(outline);\n\n  // console.log(\"outline\", outline, \"chain\", chain);\n\n  let divisions = Math.floor(chain.pathLength / params.minimumSpacing);\n  let spacing = chain.pathLength / divisions;\n  let keyPoints = mjs.chain.toKeyPoints(chain, spacing);\n\n  // let scaleFactor = 10;\n  // let scaleXY = keyPoints.map(p => [p[0] * scaleFactor, p[1] * scaleFactor]);\n\n  let gcodePoints = keyPoints.map(p => `G1 X${p[0]} Y${p[1]} F${params.feedRate}`)\n  //let gcode = JSON.parse(JSON.stringify(gcodePoints));\n\n  let firstPoint = keyPoints[0];\n\n  let paths = params.depthOfPasses.map((p,i) => [\n    `G1 Z${params.depthOfPasses[i]} F12.0`,\n    ...gcodePoints,\n    `G1 X${firstPoint[0]} Y${firstPoint[1]} F${params.feedRate}`\n  ])\n\n  paths = paths.flat(1);\n\n  let preamble = [params.units, \"G90\"];\n\n  let gcode = [\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n    `G0 X${firstPoint[0]} Y${firstPoint[1]}`,\n    ...paths,\n    `G1 Z${params.jogHeight} F${params.jogRate}`,\n  ]\n\n  // write to a new file named\n  let filename = 'testGcodeProfile.nc';\n\n  let text = gcode.join('\\n');\n\n  // console.log(\"profile\", outline)\n\n  return {drawing: outline, gcode: text, filename};\n};\n\n\nexport {profile};\n"]},"metadata":{},"sourceType":"module"}