{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the terms of the LICENSE file distributed with this project.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { AbstractPureComponent } from \"../../common/abstractPureComponent\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isElementOfType } from \"../../common/utils\";\nimport { Radio } from \"./controls\";\nvar counter = 0;\n\nfunction nextName() {\n  return RadioGroup.displayName + \"-\" + counter++;\n}\n\nvar RadioGroup =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(RadioGroup, _super);\n\n  function RadioGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // a unique name for this group, which can be overridden by `name` prop.\n\n\n    _this.autoGroupName = nextName();\n    return _this;\n  }\n\n  RadioGroup.prototype.render = function () {\n    var label = this.props.label;\n    return React.createElement(\"div\", {\n      className: this.props.className\n    }, label == null ? null : React.createElement(\"label\", {\n      className: Classes.LABEL\n    }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());\n  };\n\n  RadioGroup.prototype.validateProps = function () {\n    if (this.props.children != null && this.props.options != null) {\n      console.warn(Errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);\n    }\n  };\n\n  RadioGroup.prototype.renderChildren = function () {\n    var _this = this;\n\n    return React.Children.map(this.props.children, function (child) {\n      if (isElementOfType(child, Radio)) {\n        return React.cloneElement(child, _this.getRadioProps(child.props));\n      } else {\n        return child;\n      }\n    });\n  };\n\n  RadioGroup.prototype.renderOptions = function () {\n    var _this = this;\n\n    return this.props.options.map(function (option) {\n      return React.createElement(Radio, tslib_1.__assign({}, _this.getRadioProps(option), {\n        key: option.value,\n        labelElement: option.label || option.value\n      }));\n    });\n  };\n\n  RadioGroup.prototype.getRadioProps = function (optionProps) {\n    var name = this.props.name;\n    var className = optionProps.className,\n        disabled = optionProps.disabled,\n        value = optionProps.value;\n    return {\n      checked: value === this.props.selectedValue,\n      className: className,\n      disabled: disabled || this.props.disabled,\n      inline: this.props.inline,\n      name: name == null ? this.autoGroupName : name,\n      onChange: this.props.onChange,\n      value: value\n    };\n  };\n\n  RadioGroup.displayName = DISPLAYNAME_PREFIX + \".RadioGroup\";\n  return RadioGroup;\n}(AbstractPureComponent);\n\nexport { RadioGroup };","map":null,"metadata":{},"sourceType":"module"}