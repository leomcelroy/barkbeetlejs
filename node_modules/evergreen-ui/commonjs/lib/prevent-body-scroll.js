"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = preventBodyScroll;
var previousOverflow;
var previousPaddingRight;
/**
 * Toggle the body scroll / overflow and additional styling
 * necessary to preserve scroll position and body width (scrollbar replacement)
 *
 * @param {boolean} preventScroll - whether or not to prevent body scrolling
 */

function preventBodyScroll(preventScroll) {
  /** Get the width before toggling the style so we can calculate the scrollbar width for a smooth, jankless style change */
  var _document$body$getBou = document.body.getBoundingClientRect(),
      width = _document$body$getBou.width;
  /** Apply or remove overflow style */


  if (preventScroll) {
    previousOverflow = document.body.style.overflow;
    document.body.style.overflow = 'hidden';
  } else {
    document.body.style.overflow = previousOverflow || '';
  }
  /** Get the _new width_ of the body (this will tell us the scrollbar width) */


  var newWidth = document.body.getBoundingClientRect().width;
  var scrollBarWidth = newWidth - width;
  /** If there's a diff due to scrollbars, then account for it with padding */

  if (preventScroll) {
    previousPaddingRight = document.body.style.paddingRight;
    document.body.style.paddingRight = Math.max(0, scrollBarWidth || 0) + 'px';
  } else {
    document.body.style.paddingRight = previousPaddingRight || '';
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvcHJldmVudC1ib2R5LXNjcm9sbC5qcyJdLCJuYW1lcyI6WyJwcmV2aW91c092ZXJmbG93IiwicHJldmlvdXNQYWRkaW5nUmlnaHQiLCJwcmV2ZW50Qm9keVNjcm9sbCIsInByZXZlbnRTY3JvbGwiLCJkb2N1bWVudCIsImJvZHkiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsInN0eWxlIiwib3ZlcmZsb3ciLCJuZXdXaWR0aCIsInNjcm9sbEJhcldpZHRoIiwicGFkZGluZ1JpZ2h0IiwiTWF0aCIsIm1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsZ0JBQUo7QUFDQSxJQUFJQyxvQkFBSjtBQUVBOzs7Ozs7O0FBTWUsU0FBU0MsaUJBQVQsQ0FBMkJDLGFBQTNCLEVBQTBDO0FBQ3ZEO0FBRHVELDhCQUVyQ0MsUUFBUSxDQUFDQyxJQUFULENBQWNDLHFCQUFkLEVBRnFDO0FBQUEsTUFFL0NDLEtBRitDLHlCQUUvQ0EsS0FGK0M7QUFJdkQ7OztBQUNBLE1BQUlKLGFBQUosRUFBbUI7QUFDakJILElBQUFBLGdCQUFnQixHQUFHSSxRQUFRLENBQUNDLElBQVQsQ0FBY0csS0FBZCxDQUFvQkMsUUFBdkM7QUFDQUwsSUFBQUEsUUFBUSxDQUFDQyxJQUFULENBQWNHLEtBQWQsQ0FBb0JDLFFBQXBCLEdBQStCLFFBQS9CO0FBQ0QsR0FIRCxNQUdPO0FBQ0xMLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjRyxLQUFkLENBQW9CQyxRQUFwQixHQUErQlQsZ0JBQWdCLElBQUksRUFBbkQ7QUFDRDtBQUVEOzs7QUFDQSxNQUFNVSxRQUFRLEdBQUdOLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjQyxxQkFBZCxHQUFzQ0MsS0FBdkQ7QUFDQSxNQUFNSSxjQUFjLEdBQUdELFFBQVEsR0FBR0gsS0FBbEM7QUFFQTs7QUFDQSxNQUFJSixhQUFKLEVBQW1CO0FBQ2pCRixJQUFBQSxvQkFBb0IsR0FBR0csUUFBUSxDQUFDQyxJQUFULENBQWNHLEtBQWQsQ0FBb0JJLFlBQTNDO0FBQ0FSLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjRyxLQUFkLENBQW9CSSxZQUFwQixHQUFtQ0MsSUFBSSxDQUFDQyxHQUFMLENBQVMsQ0FBVCxFQUFZSCxjQUFjLElBQUksQ0FBOUIsSUFBbUMsSUFBdEU7QUFDRCxHQUhELE1BR087QUFDTFAsSUFBQUEsUUFBUSxDQUFDQyxJQUFULENBQWNHLEtBQWQsQ0FBb0JJLFlBQXBCLEdBQW1DWCxvQkFBb0IsSUFBSSxFQUEzRDtBQUNEO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcHJldmlvdXNPdmVyZmxvd1xubGV0IHByZXZpb3VzUGFkZGluZ1JpZ2h0XG5cbi8qKlxuICogVG9nZ2xlIHRoZSBib2R5IHNjcm9sbCAvIG92ZXJmbG93IGFuZCBhZGRpdGlvbmFsIHN0eWxpbmdcbiAqIG5lY2Vzc2FyeSB0byBwcmVzZXJ2ZSBzY3JvbGwgcG9zaXRpb24gYW5kIGJvZHkgd2lkdGggKHNjcm9sbGJhciByZXBsYWNlbWVudClcbiAqXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHByZXZlbnRTY3JvbGwgLSB3aGV0aGVyIG9yIG5vdCB0byBwcmV2ZW50IGJvZHkgc2Nyb2xsaW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByZXZlbnRCb2R5U2Nyb2xsKHByZXZlbnRTY3JvbGwpIHtcbiAgLyoqIEdldCB0aGUgd2lkdGggYmVmb3JlIHRvZ2dsaW5nIHRoZSBzdHlsZSBzbyB3ZSBjYW4gY2FsY3VsYXRlIHRoZSBzY3JvbGxiYXIgd2lkdGggZm9yIGEgc21vb3RoLCBqYW5rbGVzcyBzdHlsZSBjaGFuZ2UgKi9cbiAgY29uc3QgeyB3aWR0aCB9ID0gZG9jdW1lbnQuYm9keS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuXG4gIC8qKiBBcHBseSBvciByZW1vdmUgb3ZlcmZsb3cgc3R5bGUgKi9cbiAgaWYgKHByZXZlbnRTY3JvbGwpIHtcbiAgICBwcmV2aW91c092ZXJmbG93ID0gZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvd1xuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJ1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBwcmV2aW91c092ZXJmbG93IHx8ICcnXG4gIH1cblxuICAvKiogR2V0IHRoZSBfbmV3IHdpZHRoXyBvZiB0aGUgYm9keSAodGhpcyB3aWxsIHRlbGwgdXMgdGhlIHNjcm9sbGJhciB3aWR0aCkgKi9cbiAgY29uc3QgbmV3V2lkdGggPSBkb2N1bWVudC5ib2R5LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoXG4gIGNvbnN0IHNjcm9sbEJhcldpZHRoID0gbmV3V2lkdGggLSB3aWR0aFxuXG4gIC8qKiBJZiB0aGVyZSdzIGEgZGlmZiBkdWUgdG8gc2Nyb2xsYmFycywgdGhlbiBhY2NvdW50IGZvciBpdCB3aXRoIHBhZGRpbmcgKi9cbiAgaWYgKHByZXZlbnRTY3JvbGwpIHtcbiAgICBwcmV2aW91c1BhZGRpbmdSaWdodCA9IGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBNYXRoLm1heCgwLCBzY3JvbGxCYXJXaWR0aCB8fCAwKSArICdweCdcbiAgfSBlbHNlIHtcbiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IHByZXZpb3VzUGFkZGluZ1JpZ2h0IHx8ICcnXG4gIH1cbn1cbiJdfQ==