"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _layers = require("../../layers");

var _icon = require("../../icon");

var _table = require("../../table");

var Option =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Option, _PureComponent);

  function Option() {
    (0, _classCallCheck2.default)(this, Option);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Option).apply(this, arguments));
  }

  (0, _createClass2.default)(Option, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          onSelect = _this$props.onSelect,
          onDeselect = _this$props.onDeselect,
          isHighlighted = _this$props.isHighlighted,
          isSelected = _this$props.isSelected,
          isSelectable = _this$props.isSelectable,
          disabled = _this$props.disabled,
          style = _this$props.style,
          height = _this$props.height,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["label", "onSelect", "onDeselect", "isHighlighted", "isSelected", "isSelectable", "disabled", "style", "height"]);
      var textProps = {};

      if (disabled) {
        textProps.color = 'muted';
      }

      if (isSelected) {
        textProps.color = 'selected';
      }

      return _react.default.createElement(_table.TableRow, (0, _extends2.default)({
        isSelectable: isSelectable && !disabled,
        isHighlighted: isHighlighted,
        onSelect: onSelect,
        onDeselect: onDeselect,
        isSelected: isSelected,
        style: style,
        display: "flex",
        alignItems: "center",
        borderBottom: false
      }, props), _react.default.createElement(_layers.Pane, {
        paddingLeft: 12,
        paddingRight: 8,
        opacity: isSelected ? 1 : 0,
        flexGrow: 0,
        paddingTop: 4
      }, _react.default.createElement(_icon.Icon, {
        color: "selected",
        icon: "tick",
        size: 14
      })), _react.default.createElement(_table.TextTableCell, {
        height: height,
        borderBottom: "muted",
        textProps: textProps,
        paddingLeft: 0,
        borderRight: null,
        flex: 1,
        alignSelf: "stretch",
        cursor: disabled ? 'default' : 'pointer'
      }, label));
    }
  }]);
  return Option;
}(_react.PureComponent);

exports.default = Option;
Option.displayName = "Option";
(0, _defineProperty2.default)(Option, "propTypes", {
  label: _propTypes.default.string,
  style: _propTypes.default.any,
  height: _propTypes.default.number,
  onSelect: _propTypes.default.func,
  onDeselect: _propTypes.default.func,
  isHighlighted: _propTypes.default.bool,
  isSelected: _propTypes.default.bool,
  isSelectable: _propTypes.default.bool,
  disabled: _propTypes.default.bool
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWxlY3QtbWVudS9zcmMvT3B0aW9uLmpzIl0sIm5hbWVzIjpbIk9wdGlvbiIsInByb3BzIiwibGFiZWwiLCJvblNlbGVjdCIsIm9uRGVzZWxlY3QiLCJpc0hpZ2hsaWdodGVkIiwiaXNTZWxlY3RlZCIsImlzU2VsZWN0YWJsZSIsImRpc2FibGVkIiwic3R5bGUiLCJoZWlnaHQiLCJ0ZXh0UHJvcHMiLCJjb2xvciIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJhbnkiLCJudW1iZXIiLCJmdW5jIiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0lBRXFCQSxNOzs7Ozs7Ozs7Ozs7NkJBYVY7QUFBQSx3QkFZSCxLQUFLQyxLQVpGO0FBQUEsVUFFTEMsS0FGSyxlQUVMQSxLQUZLO0FBQUEsVUFHTEMsUUFISyxlQUdMQSxRQUhLO0FBQUEsVUFJTEMsVUFKSyxlQUlMQSxVQUpLO0FBQUEsVUFLTEMsYUFMSyxlQUtMQSxhQUxLO0FBQUEsVUFNTEMsVUFOSyxlQU1MQSxVQU5LO0FBQUEsVUFPTEMsWUFQSyxlQU9MQSxZQVBLO0FBQUEsVUFRTEMsUUFSSyxlQVFMQSxRQVJLO0FBQUEsVUFTTEMsS0FUSyxlQVNMQSxLQVRLO0FBQUEsVUFVTEMsTUFWSyxlQVVMQSxNQVZLO0FBQUEsVUFXRlQsS0FYRTtBQWNQLFVBQU1VLFNBQVMsR0FBRyxFQUFsQjs7QUFDQSxVQUFJSCxRQUFKLEVBQWM7QUFDWkcsUUFBQUEsU0FBUyxDQUFDQyxLQUFWLEdBQWtCLE9BQWxCO0FBQ0Q7O0FBRUQsVUFBSU4sVUFBSixFQUFnQjtBQUNkSyxRQUFBQSxTQUFTLENBQUNDLEtBQVYsR0FBa0IsVUFBbEI7QUFDRDs7QUFFRCxhQUNFLDZCQUFDLGVBQUQ7QUFDRSxRQUFBLFlBQVksRUFBRUwsWUFBWSxJQUFJLENBQUNDLFFBRGpDO0FBRUUsUUFBQSxhQUFhLEVBQUVILGFBRmpCO0FBR0UsUUFBQSxRQUFRLEVBQUVGLFFBSFo7QUFJRSxRQUFBLFVBQVUsRUFBRUMsVUFKZDtBQUtFLFFBQUEsVUFBVSxFQUFFRSxVQUxkO0FBTUUsUUFBQSxLQUFLLEVBQUVHLEtBTlQ7QUFPRSxRQUFBLE9BQU8sRUFBQyxNQVBWO0FBUUUsUUFBQSxVQUFVLEVBQUMsUUFSYjtBQVNFLFFBQUEsWUFBWSxFQUFFO0FBVGhCLFNBVU1SLEtBVk4sR0FZRSw2QkFBQyxZQUFEO0FBQ0UsUUFBQSxXQUFXLEVBQUUsRUFEZjtBQUVFLFFBQUEsWUFBWSxFQUFFLENBRmhCO0FBR0UsUUFBQSxPQUFPLEVBQUVLLFVBQVUsR0FBRyxDQUFILEdBQU8sQ0FINUI7QUFJRSxRQUFBLFFBQVEsRUFBRSxDQUpaO0FBS0UsUUFBQSxVQUFVLEVBQUU7QUFMZCxTQU9FLDZCQUFDLFVBQUQ7QUFBTSxRQUFBLEtBQUssRUFBQyxVQUFaO0FBQXVCLFFBQUEsSUFBSSxFQUFDLE1BQTVCO0FBQW1DLFFBQUEsSUFBSSxFQUFFO0FBQXpDLFFBUEYsQ0FaRixFQXFCRSw2QkFBQyxvQkFBRDtBQUNFLFFBQUEsTUFBTSxFQUFFSSxNQURWO0FBRUUsUUFBQSxZQUFZLEVBQUMsT0FGZjtBQUdFLFFBQUEsU0FBUyxFQUFFQyxTQUhiO0FBSUUsUUFBQSxXQUFXLEVBQUUsQ0FKZjtBQUtFLFFBQUEsV0FBVyxFQUFFLElBTGY7QUFNRSxRQUFBLElBQUksRUFBRSxDQU5SO0FBT0UsUUFBQSxTQUFTLEVBQUMsU0FQWjtBQVFFLFFBQUEsTUFBTSxFQUFFSCxRQUFRLEdBQUcsU0FBSCxHQUFlO0FBUmpDLFNBVUdOLEtBVkgsQ0FyQkYsQ0FERjtBQW9DRDs7O0VBeEVpQ1csb0I7OztBQUFmYixNOzhCQUFBQSxNLGVBQ0E7QUFDakJFLEVBQUFBLEtBQUssRUFBRVksbUJBQVVDLE1BREE7QUFFakJOLEVBQUFBLEtBQUssRUFBRUssbUJBQVVFLEdBRkE7QUFHakJOLEVBQUFBLE1BQU0sRUFBRUksbUJBQVVHLE1BSEQ7QUFJakJkLEVBQUFBLFFBQVEsRUFBRVcsbUJBQVVJLElBSkg7QUFLakJkLEVBQUFBLFVBQVUsRUFBRVUsbUJBQVVJLElBTEw7QUFNakJiLEVBQUFBLGFBQWEsRUFBRVMsbUJBQVVLLElBTlI7QUFPakJiLEVBQUFBLFVBQVUsRUFBRVEsbUJBQVVLLElBUEw7QUFRakJaLEVBQUFBLFlBQVksRUFBRU8sbUJBQVVLLElBUlA7QUFTakJYLEVBQUFBLFFBQVEsRUFBRU0sbUJBQVVLO0FBVEgsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHsgSWNvbiB9IGZyb20gJy4uLy4uL2ljb24nXG5pbXBvcnQgeyBUYWJsZVJvdywgVGV4dFRhYmxlQ2VsbCB9IGZyb20gJy4uLy4uL3RhYmxlJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcHRpb24gZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdHlsZTogUHJvcFR5cGVzLmFueSxcbiAgICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uRGVzZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICAgIGlzSGlnaGxpZ2h0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzU2VsZWN0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzU2VsZWN0YWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbGFiZWwsXG4gICAgICBvblNlbGVjdCxcbiAgICAgIG9uRGVzZWxlY3QsXG4gICAgICBpc0hpZ2hsaWdodGVkLFxuICAgICAgaXNTZWxlY3RlZCxcbiAgICAgIGlzU2VsZWN0YWJsZSxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgc3R5bGUsXG4gICAgICBoZWlnaHQsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCB0ZXh0UHJvcHMgPSB7fVxuICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgdGV4dFByb3BzLmNvbG9yID0gJ211dGVkJ1xuICAgIH1cblxuICAgIGlmIChpc1NlbGVjdGVkKSB7XG4gICAgICB0ZXh0UHJvcHMuY29sb3IgPSAnc2VsZWN0ZWQnXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUYWJsZVJvd1xuICAgICAgICBpc1NlbGVjdGFibGU9e2lzU2VsZWN0YWJsZSAmJiAhZGlzYWJsZWR9XG4gICAgICAgIGlzSGlnaGxpZ2h0ZWQ9e2lzSGlnaGxpZ2h0ZWR9XG4gICAgICAgIG9uU2VsZWN0PXtvblNlbGVjdH1cbiAgICAgICAgb25EZXNlbGVjdD17b25EZXNlbGVjdH1cbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICBib3JkZXJCb3R0b209e2ZhbHNlfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxQYW5lXG4gICAgICAgICAgcGFkZGluZ0xlZnQ9ezEyfVxuICAgICAgICAgIHBhZGRpbmdSaWdodD17OH1cbiAgICAgICAgICBvcGFjaXR5PXtpc1NlbGVjdGVkID8gMSA6IDB9XG4gICAgICAgICAgZmxleEdyb3c9ezB9XG4gICAgICAgICAgcGFkZGluZ1RvcD17NH1cbiAgICAgICAgPlxuICAgICAgICAgIDxJY29uIGNvbG9yPVwic2VsZWN0ZWRcIiBpY29uPVwidGlja1wiIHNpemU9ezE0fSAvPlxuICAgICAgICA8L1BhbmU+XG4gICAgICAgIDxUZXh0VGFibGVDZWxsXG4gICAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgICAgYm9yZGVyQm90dG9tPVwibXV0ZWRcIlxuICAgICAgICAgIHRleHRQcm9wcz17dGV4dFByb3BzfVxuICAgICAgICAgIHBhZGRpbmdMZWZ0PXswfVxuICAgICAgICAgIGJvcmRlclJpZ2h0PXtudWxsfVxuICAgICAgICAgIGZsZXg9ezF9XG4gICAgICAgICAgYWxpZ25TZWxmPVwic3RyZXRjaFwiXG4gICAgICAgICAgY3Vyc29yPXtkaXNhYmxlZCA/ICdkZWZhdWx0JyA6ICdwb2ludGVyJ31cbiAgICAgICAgPlxuICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgPC9UZXh0VGFibGVDZWxsPlxuICAgICAgPC9UYWJsZVJvdz5cbiAgICApXG4gIH1cbn1cbiJdfQ==