"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireWildcard(require("ui-box"));

var _theme = require("../../theme");

var loadingKeyframes = _uiBox.css.keyframes('loading', {
  '0%': {
    transform: 'rotate(0)'
  },
  '100%': {
    transform: 'rotate(360deg)'
  }
});

var loadingCircleKeyframes = _uiBox.css.keyframes('loading-circle', {
  '0%': {
    strokeDashoffset: 600
  },
  '100%': {
    strokeDashoffset: 0
  }
});

var outer = {
  animation: "".concat(loadingKeyframes, " 2s linear infinite")
};

var inner = function inner(color) {
  return {
    strokeDashoffset: 600,
    strokeDasharray: 300,
    strokeWidth: 12,
    strokeMiterlimit: 10,
    strokeLinecap: 'round',
    animation: "".concat(loadingCircleKeyframes, " 1.6s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite"),
    stroke: color,
    fill: 'transparent'
  };
};

var Spinner =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Spinner, _PureComponent);

  function Spinner(_ref) {
    var _this;

    var delay = _ref.delay;
    (0, _classCallCheck2.default)(this, Spinner);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Spinner).call(this));
    _this.state = {
      isVisible: delay === 0
    };
    return _this;
  }

  (0, _createClass2.default)(Spinner, [{
    key: "render",
    value: function render() {
      if (!this.state.isVisible) {
        return null;
      }

      var _this$props = this.props,
          theme = _this$props.theme,
          size = _this$props.size,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["theme", "size"]);
      return _react.default.createElement(_uiBox.default, (0, _extends2.default)({
        width: size,
        height: size,
        lineHeight: 0
      }, props), _react.default.createElement(_uiBox.default, {
        is: "svg",
        css: outer,
        x: "0px",
        y: "0px",
        viewBox: "0 0 150 150"
      }, _react.default.createElement(_uiBox.default, {
        is: "circle",
        css: inner(theme.spinnerColor),
        cx: "75",
        cy: "75",
        r: "60"
      })));
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var delay = this.props.delay;

      if (delay > 0) {
        this.delayTimer = setTimeout(function () {
          _this2.setState({
            isVisible: true
          });
        }, delay);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.delayTimer);
    }
  }]);
  return Spinner;
}(_react.PureComponent);

Spinner.displayName = "Spinner";
(0, _defineProperty2.default)(Spinner, "propTypes", (0, _objectSpread2.default)({}, _uiBox.default.propTypes, {
  /**
   * Delay after which spinner should be visible.
   */
  delay: _propTypes.default.number,

  /**
   * The size of the spinner.
   */
  size: _propTypes.default.number.isRequired,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes.default.object.isRequired
}));
(0, _defineProperty2.default)(Spinner, "defaultProps", {
  size: 40,
  delay: 0
});

var _default = (0, _theme.withTheme)(Spinner);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcGlubmVyL3NyYy9TcGlubmVyLmpzIl0sIm5hbWVzIjpbImxvYWRpbmdLZXlmcmFtZXMiLCJjc3MiLCJrZXlmcmFtZXMiLCJ0cmFuc2Zvcm0iLCJsb2FkaW5nQ2lyY2xlS2V5ZnJhbWVzIiwic3Ryb2tlRGFzaG9mZnNldCIsIm91dGVyIiwiYW5pbWF0aW9uIiwiaW5uZXIiLCJjb2xvciIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2UiLCJmaWxsIiwiU3Bpbm5lciIsImRlbGF5Iiwic3RhdGUiLCJpc1Zpc2libGUiLCJwcm9wcyIsInRoZW1lIiwic2l6ZSIsInNwaW5uZXJDb2xvciIsImRlbGF5VGltZXIiLCJzZXRUaW1lb3V0Iiwic2V0U3RhdGUiLCJjbGVhclRpbWVvdXQiLCJQdXJlQ29tcG9uZW50IiwiQm94IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwibnVtYmVyIiwiaXNSZXF1aXJlZCIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxnQkFBZ0IsR0FBR0MsV0FBSUMsU0FBSixDQUFjLFNBQWQsRUFBeUI7QUFDaEQsUUFBTTtBQUNKQyxJQUFBQSxTQUFTLEVBQUU7QUFEUCxHQUQwQztBQUloRCxVQUFRO0FBQ05BLElBQUFBLFNBQVMsRUFBRTtBQURMO0FBSndDLENBQXpCLENBQXpCOztBQVNBLElBQU1DLHNCQUFzQixHQUFHSCxXQUFJQyxTQUFKLENBQWMsZ0JBQWQsRUFBZ0M7QUFDN0QsUUFBTTtBQUNKRyxJQUFBQSxnQkFBZ0IsRUFBRTtBQURkLEdBRHVEO0FBSTdELFVBQVE7QUFDTkEsSUFBQUEsZ0JBQWdCLEVBQUU7QUFEWjtBQUpxRCxDQUFoQyxDQUEvQjs7QUFTQSxJQUFNQyxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsU0FBUyxZQUFLUCxnQkFBTDtBQURHLENBQWQ7O0FBSUEsSUFBTVEsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQUMsS0FBSztBQUFBLFNBQUs7QUFDdEJKLElBQUFBLGdCQUFnQixFQUFFLEdBREk7QUFFdEJLLElBQUFBLGVBQWUsRUFBRSxHQUZLO0FBR3RCQyxJQUFBQSxXQUFXLEVBQUUsRUFIUztBQUl0QkMsSUFBQUEsZ0JBQWdCLEVBQUUsRUFKSTtBQUt0QkMsSUFBQUEsYUFBYSxFQUFFLE9BTE87QUFNdEJOLElBQUFBLFNBQVMsWUFBS0gsc0JBQUwsc0RBTmE7QUFPdEJVLElBQUFBLE1BQU0sRUFBRUwsS0FQYztBQVF0Qk0sSUFBQUEsSUFBSSxFQUFFO0FBUmdCLEdBQUw7QUFBQSxDQUFuQjs7SUFXTUMsTzs7Ozs7QUE0QkoseUJBQXVCO0FBQUE7O0FBQUEsUUFBVEMsS0FBUyxRQUFUQSxLQUFTO0FBQUE7QUFDckI7QUFFQSxVQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsU0FBUyxFQUFFRixLQUFLLEtBQUs7QUFEVixLQUFiO0FBSHFCO0FBTXRCOzs7OzZCQUVRO0FBQ1AsVUFBSSxDQUFDLEtBQUtDLEtBQUwsQ0FBV0MsU0FBaEIsRUFBMkI7QUFDekIsZUFBTyxJQUFQO0FBQ0Q7O0FBSE0sd0JBSzJCLEtBQUtDLEtBTGhDO0FBQUEsVUFLQ0MsS0FMRCxlQUtDQSxLQUxEO0FBQUEsVUFLUUMsSUFMUixlQUtRQSxJQUxSO0FBQUEsVUFLaUJGLEtBTGpCO0FBTVAsYUFDRSw2QkFBQyxjQUFEO0FBQUssUUFBQSxLQUFLLEVBQUVFLElBQVo7QUFBa0IsUUFBQSxNQUFNLEVBQUVBLElBQTFCO0FBQWdDLFFBQUEsVUFBVSxFQUFFO0FBQTVDLFNBQW1ERixLQUFuRCxHQUNFLDZCQUFDLGNBQUQ7QUFBSyxRQUFBLEVBQUUsRUFBQyxLQUFSO0FBQWMsUUFBQSxHQUFHLEVBQUVkLEtBQW5CO0FBQTBCLFFBQUEsQ0FBQyxFQUFDLEtBQTVCO0FBQWtDLFFBQUEsQ0FBQyxFQUFDLEtBQXBDO0FBQTBDLFFBQUEsT0FBTyxFQUFDO0FBQWxELFNBQ0UsNkJBQUMsY0FBRDtBQUNFLFFBQUEsRUFBRSxFQUFDLFFBREw7QUFFRSxRQUFBLEdBQUcsRUFBRUUsS0FBSyxDQUFDYSxLQUFLLENBQUNFLFlBQVAsQ0FGWjtBQUdFLFFBQUEsRUFBRSxFQUFDLElBSEw7QUFJRSxRQUFBLEVBQUUsRUFBQyxJQUpMO0FBS0UsUUFBQSxDQUFDLEVBQUM7QUFMSixRQURGLENBREYsQ0FERjtBQWFEOzs7d0NBRW1CO0FBQUE7O0FBQUEsVUFDVk4sS0FEVSxHQUNBLEtBQUtHLEtBREwsQ0FDVkgsS0FEVTs7QUFHbEIsVUFBSUEsS0FBSyxHQUFHLENBQVosRUFBZTtBQUNiLGFBQUtPLFVBQUwsR0FBa0JDLFVBQVUsQ0FBQyxZQUFNO0FBQ2pDLFVBQUEsTUFBSSxDQUFDQyxRQUFMLENBQWM7QUFDWlAsWUFBQUEsU0FBUyxFQUFFO0FBREMsV0FBZDtBQUdELFNBSjJCLEVBSXpCRixLQUp5QixDQUE1QjtBQUtEO0FBQ0Y7OzsyQ0FFc0I7QUFDckJVLE1BQUFBLFlBQVksQ0FBQyxLQUFLSCxVQUFOLENBQVo7QUFDRDs7O0VBdkVtQkksb0I7O0FBQWhCWixPOzhCQUFBQSxPLCtDQUtDYSxlQUFJQyxTO0FBRVA7OztBQUdBYixFQUFBQSxLQUFLLEVBQUVjLG1CQUFVQyxNOztBQUVqQjs7O0FBR0FWLEVBQUFBLElBQUksRUFBRVMsbUJBQVVDLE1BQVYsQ0FBaUJDLFU7O0FBRXZCOzs7QUFHQVosRUFBQUEsS0FBSyxFQUFFVSxtQkFBVUcsTUFBVixDQUFpQkQ7OzhCQXBCdEJqQixPLGtCQXVCa0I7QUFDcEJNLEVBQUFBLElBQUksRUFBRSxFQURjO0FBRXBCTCxFQUFBQSxLQUFLLEVBQUU7QUFGYSxDOztlQW1EVCxzQkFBVUQsT0FBVixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBCb3gsIHsgY3NzIH0gZnJvbSAndWktYm94J1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5cbmNvbnN0IGxvYWRpbmdLZXlmcmFtZXMgPSBjc3Mua2V5ZnJhbWVzKCdsb2FkaW5nJywge1xuICAnMCUnOiB7XG4gICAgdHJhbnNmb3JtOiAncm90YXRlKDApJ1xuICB9LFxuICAnMTAwJSc6IHtcbiAgICB0cmFuc2Zvcm06ICdyb3RhdGUoMzYwZGVnKSdcbiAgfVxufSlcblxuY29uc3QgbG9hZGluZ0NpcmNsZUtleWZyYW1lcyA9IGNzcy5rZXlmcmFtZXMoJ2xvYWRpbmctY2lyY2xlJywge1xuICAnMCUnOiB7XG4gICAgc3Ryb2tlRGFzaG9mZnNldDogNjAwXG4gIH0sXG4gICcxMDAlJzoge1xuICAgIHN0cm9rZURhc2hvZmZzZXQ6IDBcbiAgfVxufSlcblxuY29uc3Qgb3V0ZXIgPSB7XG4gIGFuaW1hdGlvbjogYCR7bG9hZGluZ0tleWZyYW1lc30gMnMgbGluZWFyIGluZmluaXRlYFxufVxuXG5jb25zdCBpbm5lciA9IGNvbG9yID0+ICh7XG4gIHN0cm9rZURhc2hvZmZzZXQ6IDYwMCxcbiAgc3Ryb2tlRGFzaGFycmF5OiAzMDAsXG4gIHN0cm9rZVdpZHRoOiAxMixcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMTAsXG4gIHN0cm9rZUxpbmVjYXA6ICdyb3VuZCcsXG4gIGFuaW1hdGlvbjogYCR7bG9hZGluZ0NpcmNsZUtleWZyYW1lc30gMS42cyBjdWJpYy1iZXppZXIoMC40LCAwLjE1LCAwLjYsIDAuODUpIGluZmluaXRlYCxcbiAgc3Ryb2tlOiBjb2xvcixcbiAgZmlsbDogJ3RyYW5zcGFyZW50J1xufSlcblxuY2xhc3MgU3Bpbm5lciBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIENvbXBvc2VzIHRoZSBCb3ggY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgICAqL1xuICAgIC4uLkJveC5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBEZWxheSBhZnRlciB3aGljaCBzcGlubmVyIHNob3VsZCBiZSB2aXNpYmxlLlxuICAgICAqL1xuICAgIGRlbGF5OiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICogVGhlIHNpemUgb2YgdGhlIHNwaW5uZXIuXG4gICAgICovXG4gICAgc2l6ZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHNpemU6IDQwLFxuICAgIGRlbGF5OiAwXG4gIH1cblxuICBjb25zdHJ1Y3Rvcih7IGRlbGF5IH0pIHtcbiAgICBzdXBlcigpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgaXNWaXNpYmxlOiBkZWxheSA9PT0gMFxuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUuaXNWaXNpYmxlKSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IHsgdGhlbWUsIHNpemUsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG4gICAgcmV0dXJuIChcbiAgICAgIDxCb3ggd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gbGluZUhlaWdodD17MH0gey4uLnByb3BzfT5cbiAgICAgICAgPEJveCBpcz1cInN2Z1wiIGNzcz17b3V0ZXJ9IHg9XCIwcHhcIiB5PVwiMHB4XCIgdmlld0JveD1cIjAgMCAxNTAgMTUwXCI+XG4gICAgICAgICAgPEJveFxuICAgICAgICAgICAgaXM9XCJjaXJjbGVcIlxuICAgICAgICAgICAgY3NzPXtpbm5lcih0aGVtZS5zcGlubmVyQ29sb3IpfVxuICAgICAgICAgICAgY3g9XCI3NVwiXG4gICAgICAgICAgICBjeT1cIjc1XCJcbiAgICAgICAgICAgIHI9XCI2MFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0JveD5cbiAgICApXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7IGRlbGF5IH0gPSB0aGlzLnByb3BzXG5cbiAgICBpZiAoZGVsYXkgPiAwKSB7XG4gICAgICB0aGlzLmRlbGF5VGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgaXNWaXNpYmxlOiB0cnVlXG4gICAgICAgIH0pXG4gICAgICB9LCBkZWxheSlcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5kZWxheVRpbWVyKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShTcGlubmVyKVxuIl19