"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _layers = require("../../layers");

var _theme = require("../../theme");

var _safeInvoke = _interopRequireDefault(require("../../lib/safe-invoke"));

var _warning = _interopRequireDefault(require("../../lib/warning"));

var _TableRowContext = require("./TableRowContext");

var _manageTableRowFocusInteraction = _interopRequireDefault(require("./manageTableRowFocusInteraction"));

var TableRow =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(TableRow, _PureComponent);

  function TableRow() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, TableRow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (e) {
      if (typeof _this.props.onClick === 'function') {
        _this.props.onClick(e);
      }

      if (_this.props.isSelectable) {
        if (_this.props.isSelected) {
          _this.props.onDeselect();
        } else {
          _this.props.onSelect();
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function (e) {
      if (_this.props.isSelectable) {
        var key = e.key;

        if (key === 'Enter' || key === ' ') {
          _this.props.onSelect();

          e.preventDefault();
        } else if (key === 'ArrowUp' || key === 'ArrowDown') {
          try {
            (0, _manageTableRowFocusInteraction.default)(key, _this.mainRef);
          } catch (error) {}
        } else if (key === 'Escape') {
          if (_this.mainRef) _this.mainRef.blur();
        }
      }

      _this.props.onKeyPress(e);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRef", function (ref) {
      _this.mainRef = ref;
      (0, _safeInvoke.default)(_this.props.innerRef, ref);
    });
    return _this;
  }

  (0, _createClass2.default)(TableRow, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          innerRef = _this$props.innerRef,
          theme = _this$props.theme,
          className = _this$props.className,
          height = _this$props.height,
          children = _this$props.children,
          intent = _this$props.intent,
          appearance = _this$props.appearance,
          _this$props$tabIndex = _this$props.tabIndex,
          tabIndex = _this$props$tabIndex === void 0 ? -1 : _this$props$tabIndex,
          onClick = _this$props.onClick,
          onKeyPress = _this$props.onKeyPress,
          onSelect = _this$props.onSelect,
          onDeselect = _this$props.onDeselect,
          isHighlighted = _this$props.isHighlighted,
          isSelectable = _this$props.isSelectable,
          isSelected = _this$props.isSelected,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["innerRef", "theme", "className", "height", "children", "intent", "appearance", "tabIndex", "onClick", "onKeyPress", "onSelect", "onDeselect", "isHighlighted", "isSelectable", "isSelected"]);

      if (process.env.NODE_ENV !== 'production') {
        (0, _warning.default)(typeof onClick === 'function', '<Table.Row> expects `onSelect` prop, but you passed `onClick`.');
      }

      var themedClassName = theme.getRowClassName(appearance, intent);
      return _react.default.createElement(_TableRowContext.TableRowProvider, {
        height: height
      }, _react.default.createElement(_layers.Pane, (0, _extends2.default)({
        innerRef: this.onRef,
        className: (0, _classnames.default)(themedClassName, className),
        display: "flex",
        "aria-selected": isHighlighted,
        "aria-current": isSelected,
        "data-isselectable": isSelectable,
        tabIndex: isSelectable ? tabIndex : undefined,
        onClick: this.handleClick,
        onKeyDown: this.handleKeyDown,
        height: height,
        borderBottom: "muted"
      }, props), children));
    }
  }]);
  return TableRow;
}(_react.PureComponent);

TableRow.displayName = "TableRow";
(0, _defineProperty2.default)(TableRow, "propTypes", (0, _objectSpread2.default)({}, _layers.Pane.propTypes, {
  /**
   * The height of the row. Remember to add paddings when using "auto".
   */
  height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,

  /**
   * Function that is called on click and enter/space keypress.
   */
  onSelect: _propTypes.default.func,

  /**
   * Function that is called on click and enter/space keypress.
   */
  onDeselect: _propTypes.default.func,

  /**
   * Makes the TableRow selectable.
   */
  isSelectable: _propTypes.default.bool,

  /**
   * Makes the TableRow selected.
   */
  isSelected: _propTypes.default.bool,

  /**
   * Manually set the TableRow to be highlighted.
   */
  isHighlighted: _propTypes.default.bool,

  /**
   * The intent of the alert.
   */
  intent: _propTypes.default.oneOf(['none', 'success', 'warning', 'danger']).isRequired,

  /**
   * The appearance of the table row. Default theme only support default.
   */
  appearance: _propTypes.default.string.isRequired,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes.default.object.isRequired,

  /**
   * Class name passed to the table row.
   * Only use if you know what you are doing.
   */
  className: _propTypes.default.string
}));
(0, _defineProperty2.default)(TableRow, "defaultProps", {
  intent: 'none',
  appearance: 'default',
  height: 48,
  onSelect: function onSelect() {},
  onDeselect: function onDeselect() {},
  onKeyPress: function onKeyPress() {}
});

var _default = (0, _theme.withTheme)(TableRow);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvVGFibGVSb3cuanMiXSwibmFtZXMiOlsiVGFibGVSb3ciLCJlIiwicHJvcHMiLCJvbkNsaWNrIiwiaXNTZWxlY3RhYmxlIiwiaXNTZWxlY3RlZCIsIm9uRGVzZWxlY3QiLCJvblNlbGVjdCIsImtleSIsInByZXZlbnREZWZhdWx0IiwibWFpblJlZiIsImVycm9yIiwiYmx1ciIsIm9uS2V5UHJlc3MiLCJyZWYiLCJpbm5lclJlZiIsInRoZW1lIiwiY2xhc3NOYW1lIiwiaGVpZ2h0IiwiY2hpbGRyZW4iLCJpbnRlbnQiLCJhcHBlYXJhbmNlIiwidGFiSW5kZXgiLCJpc0hpZ2hsaWdodGVkIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwidGhlbWVkQ2xhc3NOYW1lIiwiZ2V0Um93Q2xhc3NOYW1lIiwib25SZWYiLCJ1bmRlZmluZWQiLCJoYW5kbGVDbGljayIsImhhbmRsZUtleURvd24iLCJQdXJlQ29tcG9uZW50IiwiUGFuZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mVHlwZSIsIm51bWJlciIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJmdW5jIiwiYm9vbCIsIm9uZU9mIiwib2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0lBRU1BLFE7Ozs7Ozs7Ozs7Ozs7Ozs7OzhGQXNFVSxVQUFBQyxDQUFDLEVBQUk7QUFDakIsVUFBSSxPQUFPLE1BQUtDLEtBQUwsQ0FBV0MsT0FBbEIsS0FBOEIsVUFBbEMsRUFBOEM7QUFDNUMsY0FBS0QsS0FBTCxDQUFXQyxPQUFYLENBQW1CRixDQUFuQjtBQUNEOztBQUVELFVBQUksTUFBS0MsS0FBTCxDQUFXRSxZQUFmLEVBQTZCO0FBQzNCLFlBQUksTUFBS0YsS0FBTCxDQUFXRyxVQUFmLEVBQTJCO0FBQ3pCLGdCQUFLSCxLQUFM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cnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IGN4IGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5pbXBvcnQgc2FmZUludm9rZSBmcm9tICcuLi8uLi9saWIvc2FmZS1pbnZva2UnXG5pbXBvcnQgd2FybmluZyBmcm9tICcuLi8uLi9saWIvd2FybmluZydcbmltcG9ydCB7IFRhYmxlUm93UHJvdmlkZXIgfSBmcm9tICcuL1RhYmxlUm93Q29udGV4dCdcbmltcG9ydCBtYW5hZ2VUYWJsZVJvd0ZvY3VzSW50ZXJhY3Rpb24gZnJvbSAnLi9tYW5hZ2VUYWJsZVJvd0ZvY3VzSW50ZXJhY3Rpb24nXG5cbmNsYXNzIFRhYmxlUm93IGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIFBhbmUgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgICAqL1xuICAgIC4uLlBhbmUucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGhlaWdodCBvZiB0aGUgcm93LiBSZW1lbWJlciB0byBhZGQgcGFkZGluZ3Mgd2hlbiB1c2luZyBcImF1dG9cIi5cbiAgICAgKi9cbiAgICBoZWlnaHQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKVxuICAgICAgLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCBvbiBjbGljayBhbmQgZW50ZXIvc3BhY2Uga2V5cHJlc3MuXG4gICAgICovXG4gICAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgb24gY2xpY2sgYW5kIGVudGVyL3NwYWNlIGtleXByZXNzLlxuICAgICAqL1xuICAgIG9uRGVzZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogTWFrZXMgdGhlIFRhYmxlUm93IHNlbGVjdGFibGUuXG4gICAgICovXG4gICAgaXNTZWxlY3RhYmxlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIE1ha2VzIHRoZSBUYWJsZVJvdyBzZWxlY3RlZC5cbiAgICAgKi9cbiAgICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIE1hbnVhbGx5IHNldCB0aGUgVGFibGVSb3cgdG8gYmUgaGlnaGxpZ2h0ZWQuXG4gICAgICovXG4gICAgaXNIaWdobGlnaHRlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgaW50ZW50IG9mIHRoZSBhbGVydC5cbiAgICAgKi9cbiAgICBpbnRlbnQ6IFByb3BUeXBlcy5vbmVPZihbJ25vbmUnLCAnc3VjY2VzcycsICd3YXJuaW5nJywgJ2RhbmdlciddKVxuICAgICAgLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYXBwZWFyYW5jZSBvZiB0aGUgdGFibGUgcm93LiBEZWZhdWx0IHRoZW1lIG9ubHkgc3VwcG9ydCBkZWZhdWx0LlxuICAgICAqL1xuICAgIGFwcGVhcmFuY2U6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIFRoZW1lIHByb3ZpZGVkIGJ5IFRoZW1lUHJvdmlkZXIuXG4gICAgICovXG4gICAgdGhlbWU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgcGFzc2VkIHRvIHRoZSB0YWJsZSByb3cuXG4gICAgICogT25seSB1c2UgaWYgeW91IGtub3cgd2hhdCB5b3UgYXJlIGRvaW5nLlxuICAgICAqL1xuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZ1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBpbnRlbnQ6ICdub25lJyxcbiAgICBhcHBlYXJhbmNlOiAnZGVmYXVsdCcsXG4gICAgaGVpZ2h0OiA0OCxcbiAgICBvblNlbGVjdDogKCkgPT4ge30sXG4gICAgb25EZXNlbGVjdDogKCkgPT4ge30sXG4gICAgb25LZXlQcmVzczogKCkgPT4ge31cbiAgfVxuXG4gIGhhbmRsZUNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzLm9uQ2xpY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMucHJvcHMub25DbGljayhlKVxuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLmlzU2VsZWN0YWJsZSkge1xuICAgICAgaWYgKHRoaXMucHJvcHMuaXNTZWxlY3RlZCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uRGVzZWxlY3QoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblNlbGVjdCgpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlS2V5RG93biA9IGUgPT4ge1xuICAgIGlmICh0aGlzLnByb3BzLmlzU2VsZWN0YWJsZSkge1xuICAgICAgY29uc3QgeyBrZXkgfSA9IGVcbiAgICAgIGlmIChrZXkgPT09ICdFbnRlcicgfHwga2V5ID09PSAnICcpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblNlbGVjdCgpXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdBcnJvd1VwJyB8fCBrZXkgPT09ICdBcnJvd0Rvd24nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbWFuYWdlVGFibGVSb3dGb2N1c0ludGVyYWN0aW9uKGtleSwgdGhpcy5tYWluUmVmKVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge31cbiAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICBpZiAodGhpcy5tYWluUmVmKSB0aGlzLm1haW5SZWYuYmx1cigpXG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5wcm9wcy5vbktleVByZXNzKGUpXG4gIH1cblxuICBvblJlZiA9IHJlZiA9PiB7XG4gICAgdGhpcy5tYWluUmVmID0gcmVmXG4gICAgc2FmZUludm9rZSh0aGlzLnByb3BzLmlubmVyUmVmLCByZWYpXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgaW5uZXJSZWYsXG4gICAgICB0aGVtZSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGhlaWdodCxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgaW50ZW50LFxuICAgICAgYXBwZWFyYW5jZSxcbiAgICAgIHRhYkluZGV4ID0gLTEsXG5cbiAgICAgIC8vIEZpbHRlciBvdXRcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBvbktleVByZXNzLFxuICAgICAgb25TZWxlY3QsXG4gICAgICBvbkRlc2VsZWN0LFxuXG4gICAgICBpc0hpZ2hsaWdodGVkLFxuICAgICAgaXNTZWxlY3RhYmxlLFxuICAgICAgaXNTZWxlY3RlZCxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuaW5nKFxuICAgICAgICB0eXBlb2Ygb25DbGljayA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICAgJzxUYWJsZS5Sb3c+IGV4cGVjdHMgYG9uU2VsZWN0YCBwcm9wLCBidXQgeW91IHBhc3NlZCBgb25DbGlja2AuJ1xuICAgICAgKVxuICAgIH1cblxuICAgIGNvbnN0IHRoZW1lZENsYXNzTmFtZSA9IHRoZW1lLmdldFJvd0NsYXNzTmFtZShhcHBlYXJhbmNlLCBpbnRlbnQpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRhYmxlUm93UHJvdmlkZXIgaGVpZ2h0PXtoZWlnaHR9PlxuICAgICAgICA8UGFuZVxuICAgICAgICAgIGlubmVyUmVmPXt0aGlzLm9uUmVmfVxuICAgICAgICAgIGNsYXNzTmFtZT17Y3godGhlbWVkQ2xhc3NOYW1lLCBjbGFzc05hbWUpfVxuICAgICAgICAgIGRpc3BsYXk9XCJmbGV4XCJcbiAgICAgICAgICBhcmlhLXNlbGVjdGVkPXtpc0hpZ2hsaWdodGVkfVxuICAgICAgICAgIGFyaWEtY3VycmVudD17aXNTZWxlY3RlZH1cbiAgICAgICAgICBkYXRhLWlzc2VsZWN0YWJsZT17aXNTZWxlY3RhYmxlfVxuICAgICAgICAgIHRhYkluZGV4PXtpc1NlbGVjdGFibGUgPyB0YWJJbmRleCA6IHVuZGVmaW5lZH1cbiAgICAgICAgICBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfVxuICAgICAgICAgIG9uS2V5RG93bj17dGhpcy5oYW5kbGVLZXlEb3dufVxuICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgIGJvcmRlckJvdHRvbT1cIm11dGVkXCJcbiAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgID5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvUGFuZT5cbiAgICAgIDwvVGFibGVSb3dQcm92aWRlcj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFRhYmxlUm93KVxuIl19