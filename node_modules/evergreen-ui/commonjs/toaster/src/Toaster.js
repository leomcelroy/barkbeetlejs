"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _ToastManager = _interopRequireDefault(require("./ToastManager"));

var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
/**
 * The Toaster manages the interactionsb between
 * the ToasterManger and the toast API.
 */

var Toaster = function Toaster() {
  var _this = this;

  (0, _classCallCheck2.default)(this, Toaster);
  (0, _defineProperty2.default)(this, "_bindNotify", function (handler) {
    _this.notifyHandler = handler;
  });
  (0, _defineProperty2.default)(this, "_bindGetToasts", function (handler) {
    _this.getToastsHandler = handler;
  });
  (0, _defineProperty2.default)(this, "_bindCloseAll", function (handler) {
    _this.closeAllHandler = handler;
  });
  (0, _defineProperty2.default)(this, "getToasts", function () {
    return _this.getToastsHandler();
  });
  (0, _defineProperty2.default)(this, "closeAll", function () {
    return _this.closeAllHandler();
  });
  (0, _defineProperty2.default)(this, "notify", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'none'
    }));
  });
  (0, _defineProperty2.default)(this, "success", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'success'
    }));
  });
  (0, _defineProperty2.default)(this, "warning", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'warning'
    }));
  });
  (0, _defineProperty2.default)(this, "danger", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'danger'
    }));
  });
  if (!isBrowser) return;
  var container = document.createElement('div');
  container.setAttribute('data-evergreen-toaster-container', '');
  document.body.append(container);

  _reactDom.default.render(_react.default.createElement(_ToastManager.default, {
    bindNotify: this._bindNotify,
    bindGetToasts: this._bindGetToasts,
    bindCloseAll: this._bindCloseAll
  }), container);
};

exports.default = Toaster;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b2FzdGVyL3NyYy9Ub2FzdGVyLmpzIl0sIm5hbWVzIjpbImlzQnJvd3NlciIsIndpbmRvdyIsImRvY3VtZW50IiwiVG9hc3RlciIsImhhbmRsZXIiLCJub3RpZnlIYW5kbGVyIiwiZ2V0VG9hc3RzSGFuZGxlciIsImNsb3NlQWxsSGFuZGxlciIsInRpdGxlIiwic2V0dGluZ3MiLCJpbnRlbnQiLCJjb250YWluZXIiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYm9keSIsImFwcGVuZCIsIlJlYWN0RE9NIiwicmVuZGVyIiwiX2JpbmROb3RpZnkiLCJfYmluZEdldFRvYXN0cyIsIl9iaW5kQ2xvc2VBbGwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLFNBQVMsR0FDYixPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLElBQWlDLE9BQU9BLE1BQU0sQ0FBQ0MsUUFBZCxLQUEyQixXQUQ5RDtBQUdBOzs7OztJQUlxQkMsTyxHQUNuQixtQkFBYztBQUFBOztBQUFBO0FBQUEscURBaUJBLFVBQUFDLE9BQU8sRUFBSTtBQUN2QixJQUFBLEtBQUksQ0FBQ0MsYUFBTCxHQUFxQkQsT0FBckI7QUFDRCxHQW5CYTtBQUFBLHdEQXFCRyxVQUFBQSxPQUFPLEVBQUk7QUFDMUIsSUFBQSxLQUFJLENBQUNFLGdCQUFMLEdBQXdCRixPQUF4QjtBQUNELEdBdkJhO0FBQUEsdURBeUJFLFVBQUFBLE9BQU8sRUFBSTtBQUN6QixJQUFBLEtBQUksQ0FBQ0csZUFBTCxHQUF1QkgsT0FBdkI7QUFDRCxHQTNCYTtBQUFBLG1EQTZCRixZQUFNO0FBQ2hCLFdBQU8sS0FBSSxDQUFDRSxnQkFBTCxFQUFQO0FBQ0QsR0EvQmE7QUFBQSxrREFpQ0gsWUFBTTtBQUNmLFdBQU8sS0FBSSxDQUFDQyxlQUFMLEVBQVA7QUFDRCxHQW5DYTtBQUFBLGdEQXFDTCxVQUFDQyxLQUFELEVBQTBCO0FBQUEsUUFBbEJDLFFBQWtCLHVFQUFQLEVBQU87QUFDakMsV0FBTyxLQUFJLENBQUNKLGFBQUwsQ0FBbUJHLEtBQW5CLGtDQUErQkMsUUFBL0I7QUFBeUNDLE1BQUFBLE1BQU0sRUFBRTtBQUFqRCxPQUFQO0FBQ0QsR0F2Q2E7QUFBQSxpREF5Q0osVUFBQ0YsS0FBRCxFQUEwQjtBQUFBLFFBQWxCQyxRQUFrQix1RUFBUCxFQUFPO0FBQ2xDLFdBQU8sS0FBSSxDQUFDSixhQUFMLENBQW1CRyxLQUFuQixrQ0FBK0JDLFFBQS9CO0FBQXlDQyxNQUFBQSxNQUFNLEVBQUU7QUFBakQsT0FBUDtBQUNELEdBM0NhO0FBQUEsaURBNkNKLFVBQUNGLEtBQUQsRUFBMEI7QUFBQSxRQUFsQkMsUUFBa0IsdUVBQVAsRUFBTztBQUNsQyxXQUFPLEtBQUksQ0FBQ0osYUFBTCxDQUFtQkcsS0FBbkIsa0NBQStCQyxRQUEvQjtBQUF5Q0MsTUFBQUEsTUFBTSxFQUFFO0FBQWpELE9BQVA7QUFDRCxHQS9DYTtBQUFBLGdEQWlETCxVQUFDRixLQUFELEVBQTBCO0FBQUEsUUFBbEJDLFFBQWtCLHVFQUFQLEVBQU87QUFDakMsV0FBTyxLQUFJLENBQUNKLGFBQUwsQ0FBbUJHLEtBQW5CLGtDQUErQkMsUUFBL0I7QUFBeUNDLE1BQUFBLE1BQU0sRUFBRTtBQUFqRCxPQUFQO0FBQ0QsR0FuRGE7QUFDWixNQUFJLENBQUNWLFNBQUwsRUFBZ0I7QUFFaEIsTUFBTVcsU0FBUyxHQUFHVCxRQUFRLENBQUNVLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBbEI7QUFDQUQsRUFBQUEsU0FBUyxDQUFDRSxZQUFWLENBQXVCLGtDQUF2QixFQUEyRCxFQUEzRDtBQUNBWCxFQUFBQSxRQUFRLENBQUNZLElBQVQsQ0FBY0MsTUFBZCxDQUFxQkosU0FBckI7O0FBRUFLLG9CQUFTQyxNQUFULENBQ0UsNkJBQUMscUJBQUQ7QUFDRSxJQUFBLFVBQVUsRUFBRSxLQUFLQyxXQURuQjtBQUVFLElBQUEsYUFBYSxFQUFFLEtBQUtDLGNBRnRCO0FBR0UsSUFBQSxZQUFZLEVBQUUsS0FBS0M7QUFIckIsSUFERixFQU1FVCxTQU5GO0FBUUQsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgVG9hc3RNYW5hZ2VyIGZyb20gJy4vVG9hc3RNYW5hZ2VyJ1xuXG5jb25zdCBpc0Jyb3dzZXIgPVxuICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSAndW5kZWZpbmVkJ1xuXG4vKipcbiAqIFRoZSBUb2FzdGVyIG1hbmFnZXMgdGhlIGludGVyYWN0aW9uc2IgYmV0d2VlblxuICogdGhlIFRvYXN0ZXJNYW5nZXIgYW5kIHRoZSB0b2FzdCBBUEkuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvYXN0ZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIWlzQnJvd3NlcikgcmV0dXJuXG5cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2RhdGEtZXZlcmdyZWVuLXRvYXN0ZXItY29udGFpbmVyJywgJycpXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQoY29udGFpbmVyKVxuXG4gICAgUmVhY3RET00ucmVuZGVyKFxuICAgICAgPFRvYXN0TWFuYWdlclxuICAgICAgICBiaW5kTm90aWZ5PXt0aGlzLl9iaW5kTm90aWZ5fVxuICAgICAgICBiaW5kR2V0VG9hc3RzPXt0aGlzLl9iaW5kR2V0VG9hc3RzfVxuICAgICAgICBiaW5kQ2xvc2VBbGw9e3RoaXMuX2JpbmRDbG9zZUFsbH1cbiAgICAgIC8+LFxuICAgICAgY29udGFpbmVyXG4gICAgKVxuICB9XG5cbiAgX2JpbmROb3RpZnkgPSBoYW5kbGVyID0+IHtcbiAgICB0aGlzLm5vdGlmeUhhbmRsZXIgPSBoYW5kbGVyXG4gIH1cblxuICBfYmluZEdldFRvYXN0cyA9IGhhbmRsZXIgPT4ge1xuICAgIHRoaXMuZ2V0VG9hc3RzSGFuZGxlciA9IGhhbmRsZXJcbiAgfVxuXG4gIF9iaW5kQ2xvc2VBbGwgPSBoYW5kbGVyID0+IHtcbiAgICB0aGlzLmNsb3NlQWxsSGFuZGxlciA9IGhhbmRsZXJcbiAgfVxuXG4gIGdldFRvYXN0cyA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5nZXRUb2FzdHNIYW5kbGVyKClcbiAgfVxuXG4gIGNsb3NlQWxsID0gKCkgPT4ge1xuICAgIHJldHVybiB0aGlzLmNsb3NlQWxsSGFuZGxlcigpXG4gIH1cblxuICBub3RpZnkgPSAodGl0bGUsIHNldHRpbmdzID0ge30pID0+IHtcbiAgICByZXR1cm4gdGhpcy5ub3RpZnlIYW5kbGVyKHRpdGxlLCB7IC4uLnNldHRpbmdzLCBpbnRlbnQ6ICdub25lJyB9KVxuICB9XG5cbiAgc3VjY2VzcyA9ICh0aXRsZSwgc2V0dGluZ3MgPSB7fSkgPT4ge1xuICAgIHJldHVybiB0aGlzLm5vdGlmeUhhbmRsZXIodGl0bGUsIHsgLi4uc2V0dGluZ3MsIGludGVudDogJ3N1Y2Nlc3MnIH0pXG4gIH1cblxuICB3YXJuaW5nID0gKHRpdGxlLCBzZXR0aW5ncyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMubm90aWZ5SGFuZGxlcih0aXRsZSwgeyAuLi5zZXR0aW5ncywgaW50ZW50OiAnd2FybmluZycgfSlcbiAgfVxuXG4gIGRhbmdlciA9ICh0aXRsZSwgc2V0dGluZ3MgPSB7fSkgPT4ge1xuICAgIHJldHVybiB0aGlzLm5vdGlmeUhhbmRsZXIodGl0bGUsIHsgLi4uc2V0dGluZ3MsIGludGVudDogJ2RhbmdlcicgfSlcbiAgfVxufVxuIl19