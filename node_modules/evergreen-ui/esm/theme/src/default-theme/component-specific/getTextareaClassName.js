import { Themer } from '../../../../themer';
import memoizeClassName from '../utils/memoizeClassName';
import scales from '../foundational-styles/scales';
import palette from '../foundational-styles/palette';
var Appearances = {};
Appearances.default = Themer.createInputAppearance({
  base: {
    backgroundColor: 'white',
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N5A, ", inset 0 1px 2px ").concat(scales.neutral.N4A)
  },
  invalid: {
    boxShadow: "inset 0 0 0 1px ".concat(palette.red.base, ", inset 0 1px 2px ").concat(scales.neutral.N4A)
  },
  placeholder: {
    color: scales.neutral.N6A
  },
  focus: {
    outline: 'none',
    boxShadow: "inset 0 0 2px ".concat(scales.neutral.N4A, ", inset 0 0 0 1px ").concat(scales.blue.B7, ", 0 0 0 3px ").concat(scales.blue.B4A)
  },
  disabled: {
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A),
    backgroundColor: scales.neutral.N2
  }
});
Appearances.neutral = Themer.createInputAppearance({
  base: {
    backgroundColor: scales.neutral.N2A
  },
  invalid: {
    boxShadow: "inset 0 0 0 1px ".concat(palette.red.base)
  },
  placeholder: {
    color: scales.neutral.N6A
  },
  focus: {
    outline: 'none',
    backgroundColor: 'white',
    boxShadow: "0 0 0 2px ".concat(scales.blue.B6A)
  },
  disabled: {
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A),
    backgroundColor: scales.neutral.N2
  }
});
Appearances.editableCell = Themer.createInputAppearance({
  base: {
    backgroundColor: scales.neutral.N2A
  },
  invalid: {
    boxShadow: "inset 0 0 0 1px ".concat(palette.red.base)
  },
  placeholder: {
    color: scales.neutral.N6A
  },
  focus: {
    outline: 'none',
    backgroundColor: 'white',
    boxShadow: "0 0 0 2px ".concat(scales.blue.B7)
  },
  disabled: {
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A),
    backgroundColor: scales.neutral.N2
  }
});
/**
 * Get the appearance of a `TextInput`.
 * @param {string} appearance
 * @return {Object} the appearance object.
 */

var getTextareaAppearance = function getTextareaAppearance(appearance) {
  switch (appearance) {
    case 'neutral':
      return Appearances.neutral;

    case 'editable-cell':
      return Appearances.editableCell;

    default:
      return Appearances.default;
  }
};
/**
 * Get the className of a `TextInput`.
 * @param {string} appearance
 * @return {string} the appearance class name.
 */


export default memoizeClassName(getTextareaAppearance);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9jb21wb25lbnQtc3BlY2lmaWMvZ2V0VGV4dGFyZWFDbGFzc05hbWUuanMiXSwibmFtZXMiOlsiVGhlbWVyIiwibWVtb2l6ZUNsYXNzTmFtZSIsInNjYWxlcyIsInBhbGV0dGUiLCJBcHBlYXJhbmNlcyIsImRlZmF1bHQiLCJjcmVhdGVJbnB1dEFwcGVhcmFuY2UiLCJiYXNlIiwiYmFja2dyb3VuZENvbG9yIiwiYm94U2hhZG93IiwibmV1dHJhbCIsIk41QSIsIk40QSIsImludmFsaWQiLCJyZWQiLCJwbGFjZWhvbGRlciIsImNvbG9yIiwiTjZBIiwiZm9jdXMiLCJvdXRsaW5lIiwiYmx1ZSIsIkI3IiwiQjRBIiwiZGlzYWJsZWQiLCJOMiIsIk4yQSIsIkI2QSIsImVkaXRhYmxlQ2VsbCIsImdldFRleHRhcmVhQXBwZWFyYW5jZSIsImFwcGVhcmFuY2UiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLE1BQVQsUUFBdUIsb0JBQXZCO0FBQ0EsT0FBT0MsZ0JBQVAsTUFBNkIsMkJBQTdCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQiwrQkFBbkI7QUFDQSxPQUFPQyxPQUFQLE1BQW9CLGdDQUFwQjtBQUVBLElBQU1DLFdBQVcsR0FBRyxFQUFwQjtBQUVBQSxXQUFXLENBQUNDLE9BQVosR0FBc0JMLE1BQU0sQ0FBQ00scUJBQVAsQ0FBNkI7QUFDakRDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxlQUFlLEVBQUUsT0FEYjtBQUVKQyxJQUFBQSxTQUFTLDRCQUFxQlAsTUFBTSxDQUFDUSxPQUFQLENBQWVDLEdBQXBDLCtCQUNQVCxNQUFNLENBQUNRLE9BQVAsQ0FBZUUsR0FEUjtBQUZMLEdBRDJDO0FBT2pEQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEosSUFBQUEsU0FBUyw0QkFBcUJOLE9BQU8sQ0FBQ1csR0FBUixDQUFZUCxJQUFqQywrQkFDUEwsTUFBTSxDQUFDUSxPQUFQLENBQWVFLEdB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dkIsV0FBVyxDQUFDQyxPQUFuQjtBQU5KO0FBUUQsQ0FURDtBQVdBOzs7Ozs7O0FBS0EsZUFBZUosZ0JBQWdCLENBQUMyQixxQkFBRCxDQUEvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRoZW1lciB9IGZyb20gJy4uLy4uLy4uLy4uL3RoZW1lcidcbmltcG9ydCBtZW1vaXplQ2xhc3NOYW1lIGZyb20gJy4uL3V0aWxzL21lbW9pemVDbGFzc05hbWUnXG5pbXBvcnQgc2NhbGVzIGZyb20gJy4uL2ZvdW5kYXRpb25hbC1zdHlsZXMvc2NhbGVzJ1xuaW1wb3J0IHBhbGV0dGUgZnJvbSAnLi4vZm91bmRhdGlvbmFsLXN0eWxlcy9wYWxldHRlJ1xuXG5jb25zdCBBcHBlYXJhbmNlcyA9IHt9XG5cbkFwcGVhcmFuY2VzLmRlZmF1bHQgPSBUaGVtZXIuY3JlYXRlSW5wdXRBcHBlYXJhbmNlKHtcbiAgYmFzZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONUF9LCBpbnNldCAwIDFweCAycHggJHtcbiAgICAgIHNjYWxlcy5uZXV0cmFsLk40QVxuICAgIH1gXG4gIH0sXG4gIGludmFsaWQ6IHtcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtwYWxldHRlLnJlZC5iYXNlfSwgaW5zZXQgMCAxcHggMnB4ICR7XG4gICAgICBzY2FsZXMubmV1dHJhbC5ONEFcbiAgICB9YFxuICB9LFxuICBwbGFjZWhvbGRlcjoge1xuICAgIGNvbG9yOiBzY2FsZXMubmV1dHJhbC5ONkFcbiAgfSxcbiAgZm9jdXM6IHtcbiAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDJweCAke3NjYWxlcy5uZXV0cmFsLk40QX0sIGluc2V0IDAgMCAwIDFweCAke1xuICAgICAgc2NhbGVzLmJsdWUuQjdcbiAgICB9LCAwIDAgMCAzcHggJHtzY2FsZXMuYmx1ZS5CNEF9YFxuICB9LFxuICBkaXNhYmxlZDoge1xuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk40QX1gLFxuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLm5ldXRyYWwuTjJcbiAgfVxufSlcblxuQXBwZWFyYW5jZXMubmV1dHJhbCA9IFRoZW1lci5jcmVhdGVJbnB1dEFwcGVhcmFuY2Uoe1xuICBiYXNlOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBzY2FsZXMubmV1dHJhbC5OMkFcbiAgfSxcbiAgaW52YWxpZDoge1xuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3BhbGV0dGUucmVkLmJhc2V9YFxuICB9LFxuICBwbGFjZWhvbGRlcjoge1xuICAgIGNvbG9yOiBzY2FsZXMubmV1dHJhbC5ONkFcbiAgfSxcbiAgZm9jdXM6IHtcbiAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICAgIGJveFNoYWRvdzogYDAgMCAwIDJweCAke3NjYWxlcy5ibHVlLkI2QX1gXG4gIH0sXG4gIGRpc2FibGVkOiB7XG4gICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7c2NhbGVzLm5ldXRyYWwuTjRBfWAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBzY2FsZXMubmV1dHJhbC5OMlxuICB9XG59KVxuXG5BcHBlYXJhbmNlcy5lZGl0YWJsZUNlbGwgPSBUaGVtZXIuY3JlYXRlSW5wdXRBcHBlYXJhbmNlKHtcbiAgYmFzZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLm5ldXRyYWwuTjJBXG4gIH0sXG4gIGludmFsaWQ6IHtcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtwYWxldHRlLnJlZC5iYXNlfWBcbiAgfSxcbiAgcGxhY2Vob2xkZXI6IHtcbiAgICBjb2xvcjogc2NhbGVzLm5ldXRyYWwuTjZBXG4gIH0sXG4gIGZvY3VzOiB7XG4gICAgb3V0bGluZTogJ25vbmUnLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICBib3hTaGFkb3c6IGAwIDAgMCAycHggJHtzY2FsZXMuYmx1ZS5CN31gXG4gIH0sXG4gIGRpc2FibGVkOiB7XG4gICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7c2NhbGVzLm5ldXRyYWwuTjRBfWAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBzY2FsZXMubmV1dHJhbC5OMlxuICB9XG59KVxuXG4vKipcbiAqIEdldCB0aGUgYXBwZWFyYW5jZSBvZiBhIGBUZXh0SW5wdXRgLlxuICogQHBhcmFtIHtzdHJpbmd9IGFwcGVhcmFuY2VcbiAqIEByZXR1cm4ge09iamVjdH0gdGhlIGFwcGVhcmFuY2Ugb2JqZWN0LlxuICovXG5jb25zdCBnZXRUZXh0YXJlYUFwcGVhcmFuY2UgPSBhcHBlYXJhbmNlID0+IHtcbiAgc3dpdGNoIChhcHBlYXJhbmNlKSB7XG4gICAgY2FzZSAnbmV1dHJhbCc6XG4gICAgICByZXR1cm4gQXBwZWFyYW5jZXMubmV1dHJhbFxuICAgIGNhc2UgJ2VkaXRhYmxlLWNlbGwnOlxuICAgICAgcmV0dXJuIEFwcGVhcmFuY2VzLmVkaXRhYmxlQ2VsbFxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gQXBwZWFyYW5jZXMuZGVmYXVsdFxuICB9XG59XG5cbi8qKlxuICogR2V0IHRoZSBjbGFzc05hbWUgb2YgYSBgVGV4dElucHV0YC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBhcHBlYXJhbmNlXG4gKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBhcHBlYXJhbmNlIGNsYXNzIG5hbWUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemVDbGFzc05hbWUoZ2V0VGV4dGFyZWFBcHBlYXJhbmNlKVxuIl19