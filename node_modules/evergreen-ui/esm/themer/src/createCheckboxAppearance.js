import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import createAppearance from './createAppearance';
import missingStateWarning from './missingStateWarning';
var defaultState = '& + div';
var disabledState = '&[disabled] + div';
var hoverState = '&:not([disabled]):hover + div';
var focusState = '&:not([disabled]):focus + div';
var activeState = '&:not([disabled]):active + div';
var checkedState = '&:checked + div, &[type=checkbox]:indeterminate + div';
var checkedHoverState = '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div';
var checkedActiveState = '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div';
var checkedDisabledState = '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div';
var hiddenCheckboxStyle = {
  border: '0',
  clip: 'rect(1px, 1px, 1px, 1px)',
  height: '1',
  overflow: 'hidden',
  padding: '0',
  position: 'absolute',
  whiteSpace: 'nowrap',
  width: '1',
  opacity: '0'
};
var baseStyle = {
  WebkitFontSmoothing: 'antialiased',
  textDecoration: 'none',
  WebkitAppearance: 'none',
  MozAppearance: 'none',
  border: 'none',
  outline: 'none',
  cursor: 'pointer'
};
var checkedStyles = {
  '& > svg': {
    display: 'block'
  }
  /**
   * @param {object} items - object with a set of items.
   * @return {object} the final appearance.
   */

};

var createCheckboxAppearance = function createCheckboxAppearance() {
  var _objectSpread2;

  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  missingStateWarning({
    items: items,
    props: ['base', 'hover', 'focus', 'active', 'disabled', 'checked', 'checkedDisabled', 'checkedHover', 'checkedActive'],
    cb: function cb(prop) {
      console.error("Themer.createCheckboxAppearance() is missing a ".concat(prop, " state in items:"), items);
    }
  });
  return _objectSpread({}, hiddenCheckboxStyle, (_objectSpread2 = {
    '& + div > svg': {
      display: 'none'
    }
  }, _defineProperty(_objectSpread2, defaultState, _objectSpread({}, baseStyle, createAppearance(items.base))), _defineProperty(_objectSpread2, hoverState, createAppearance(items.hover)), _defineProperty(_objectSpread2, focusState, createAppearance(items.focus)), _defineProperty(_objectSpread2, activeState, createAppearance(items.active)), _defineProperty(_objectSpread2, disabledState, createAppearance(items.disabled)), _defineProperty(_objectSpread2, checkedState, _objectSpread({}, checkedStyles, createAppearance(items.checked))), _defineProperty(_objectSpread2, checkedHoverState, _objectSpread({}, checkedStyles, createAppearance(items.checkedHover))), _defineProperty(_objectSpread2, checkedDisabledState, _objectSpread({}, checkedStyles, createAppearance(items.checkedDisabled))), _defineProperty(_objectSpread2, checkedActiveState, _objectSpread({}, checkedStyles, createAppearance(items.checkedActive))), _objectSpread2));
};

export default createCheckboxAppearance;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZXIvc3JjL2NyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZS5qcyJdLCJuYW1lcyI6WyJjcmVhdGVBcHBlYXJhbmNlIiwibWlzc2luZ1N0YXRlV2FybmluZyIsImRlZmF1bHRTdGF0ZSIsImRpc2FibGVkU3RhdGUiLCJob3ZlclN0YXRlIiwiZm9jdXNTdGF0ZSIsImFjdGl2ZVN0YXRlIiwiY2hlY2tlZFN0YXRlIiwiY2hlY2tlZEhvdmVyU3RhdGUiLCJjaGVja2VkQWN0aXZlU3RhdGUiLCJjaGVja2VkRGlzYWJsZWRTdGF0ZSIsImhpZGRlbkNoZWNrYm94U3R5bGUiLCJib3JkZXIiLCJjbGlwIiwiaGVpZ2h0Iiwib3ZlcmZsb3ciLCJwYWRkaW5nIiwicG9zaXRpb24iLCJ3aGl0ZVNwYWNlIiwid2lkdGgiLCJvcGFjaXR5IiwiYmFzZVN0eWxlIiwiV2Via2l0Rm9udFNtb290aGluZyIsInRleHREZWNvcmF0aW9uIiwiV2Via2l0QXBwZWFyYW5jZSIsIk1vekFwcGVhcmFuY2UiLCJvdXRsaW5lIiwiY3Vyc29yIiwiY2hlY2tlZFN0eWxlcyIsImRpc3BsYXkiLCJjcmVhdGVDaGVja2JveEFwcGVhcmFuY2UiLCJpdGVtcyIsInByb3BzIiwiY2IiLCJwcm9wIiwiY29uc29sZSIsImVycm9yIiwiYmFzZSIsImhvdmVyIiwiZm9jdXMiLCJhY3RpdmUiLCJkaXNhYmxlZCIsImNoZWNrZWQiLCJjaGVja2VkSG92ZXIiLCJjaGVja2VkRGlzYWJsZWQiLCJjaGVja2VkQWN0aXZlIl0sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU9BLGdCQUFQLE1BQTZCLG9CQUE3QjtBQUNBLE9BQU9DLG1CQUFQLE1BQWdDLHVCQUFoQztBQUVBLElBQU1DLFlBQVksR0FBRyxTQUFyQjtBQUNBLElBQU1DLGFBQWEsR0FBRyxtQkFBdEI7QUFDQSxJQUFNQyxVQUFVLEdBQUcsK0JBQW5CO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLCtCQUFuQjtBQUNBLElBQU1DLFdBQVcsR0FB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IGNyZWF0ZUFwcGVhcmFuY2UgZnJvbSAnLi9jcmVhdGVBcHBlYXJhbmNlJ1xuaW1wb3J0IG1pc3NpbmdTdGF0ZVdhcm5pbmcgZnJvbSAnLi9taXNzaW5nU3RhdGVXYXJuaW5nJ1xuXG5jb25zdCBkZWZhdWx0U3RhdGUgPSAnJiArIGRpdidcbmNvbnN0IGRpc2FibGVkU3RhdGUgPSAnJltkaXNhYmxlZF0gKyBkaXYnXG5jb25zdCBob3ZlclN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmhvdmVyICsgZGl2J1xuY29uc3QgZm9jdXNTdGF0ZSA9ICcmOm5vdChbZGlzYWJsZWRdKTpmb2N1cyArIGRpdidcbmNvbnN0IGFjdGl2ZVN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSArIGRpdidcbmNvbnN0IGNoZWNrZWRTdGF0ZSA9ICcmOmNoZWNrZWQgKyBkaXYsICZbdHlwZT1jaGVja2JveF06aW5kZXRlcm1pbmF0ZSArIGRpdidcbmNvbnN0IGNoZWNrZWRIb3ZlclN0YXRlID1cbiAgJyY6bm90KFtkaXNhYmxlZF0pOmNoZWNrZWQ6aG92ZXIgKyBkaXYsICZbdHlwZT1jaGVja2JveF06bm90KFtkaXNhYmxlZF0pOmluZGV0ZXJtaW5hdGU6aG92ZXIgKyBkaXYnXG5jb25zdCBjaGVja2VkQWN0aXZlU3RhdGUgPVxuICAnJjpub3QoW2Rpc2FibGVkXSk6Y2hlY2tlZDphY3RpdmUgKyBkaXYsICZbdHlwZT1jaGVja2JveF06bm90KFtkaXNhYmxlZF0pOmluZGV0ZXJtaW5hdGU6YWN0aXZlICsgZGl2J1xuY29uc3QgY2hlY2tlZERpc2FibGVkU3RhdGUgPVxuICAnJltkaXNhYmxlZF06Y2hlY2tlZCArIGRpdiwgJlt0eXBlPWNoZWNrYm94XVtkaXNhYmxlZF06aW5kZXRlcm1pbmF0ZSArIGRpdidcblxuY29uc3QgaGlkZGVuQ2hlY2tib3hTdHlsZSA9IHtcbiAgYm9yZGVyOiAnMCcsXG4gIGNsaXA6ICdyZWN0KDFweCwgMXB4LCAxcHgsIDFweCknLFxuICBoZWlnaHQ6ICcxJyxcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICBwYWRkaW5nOiAnMCcsXG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgd2lkdGg6ICcxJyxcbiAgb3BhY2l0eTogJzAnXG59XG5cbmNvbnN0IGJhc2VTdHlsZSA9IHtcbiAgV2Via2l0Rm9udFNtb290aGluZzogJ2FudGlhbGlhc2VkJyxcbiAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgV2Via2l0QXBwZWFyYW5jZTogJ25vbmUnLFxuICBNb3pBcHBlYXJhbmNlOiAnbm9uZScsXG4gIGJvcmRlcjogJ25vbmUnLFxuICBvdXRsaW5lOiAnbm9uZScsXG4gIGN1cnNvcjogJ3BvaW50ZXInXG59XG5cbmNvbnN0IGNoZWNrZWRTdHlsZXMgPSB7XG4gICcmID4gc3ZnJzoge1xuICAgIGRpc3BsYXk6ICdibG9jaydcbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7b2JqZWN0fSBpdGVtcyAtIG9iamVjdCB3aXRoIGEgc2V0IG9mIGl0ZW1zLlxuICogQHJldHVybiB7b2JqZWN0fSB0aGUgZmluYWwgYXBwZWFyYW5jZS5cbiAqL1xuY29uc3QgY3JlYXRlQ2hlY2tib3hBcHBlYXJhbmNlID0gKGl0ZW1zID0ge30pID0+IHtcbiAgbWlzc2luZ1N0YXRlV2FybmluZyh7XG4gICAgaXRlbXMsXG4gICAgcHJvcHM6IFtcbiAgICAgICdiYXNlJyxcbiAgICAgICdob3ZlcicsXG4gICAgICAnZm9jdXMnLFxuICAgICAgJ2FjdGl2ZScsXG4gICAgICAnZGlzYWJsZWQnLFxuICAgICAgJ2NoZWNrZWQnLFxuICAgICAgJ2NoZWNrZWREaXNhYmxlZCcsXG4gICAgICAnY2hlY2tlZEhvdmVyJyxcbiAgICAgICdjaGVja2VkQWN0aXZlJ1xuICAgIF0sXG4gICAgY2I6IHByb3AgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYFRoZW1lci5jcmVhdGVDaGVja2JveEFwcGVhcmFuY2UoKSBpcyBtaXNzaW5nIGEgJHtwcm9wfSBzdGF0ZSBpbiBpdGVtczpgLFxuICAgICAgICBpdGVtc1xuICAgICAgKVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4ge1xuICAgIC4uLmhpZGRlbkNoZWNrYm94U3R5bGUsXG4gICAgJyYgKyBkaXYgPiBzdmcnOiB7IGRpc3BsYXk6ICdub25lJyB9LFxuICAgIFtkZWZhdWx0U3RhdGVdOiB7IC4uLmJhc2VTdHlsZSwgLi4uY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5iYXNlKSB9LFxuICAgIFtob3ZlclN0YXRlXTogY3JlYXRlQXBwZWFyYW5jZShpdGVtcy5ob3ZlciksXG4gICAgW2ZvY3VzU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmZvY3VzKSxcbiAgICBbYWN0aXZlU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmFjdGl2ZSksXG4gICAgW2Rpc2FibGVkU3RhdGVdOiBjcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmRpc2FibGVkKSxcbiAgICBbY2hlY2tlZFN0YXRlXTogeyAuLi5jaGVja2VkU3R5bGVzLCAuLi5jcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmNoZWNrZWQpIH0sXG4gICAgW2NoZWNrZWRIb3ZlclN0YXRlXToge1xuICAgICAgLi4uY2hlY2tlZFN0eWxlcyxcbiAgICAgIC4uLmNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuY2hlY2tlZEhvdmVyKVxuICAgIH0sXG4gICAgW2NoZWNrZWREaXNhYmxlZFN0YXRlXToge1xuICAgICAgLi4uY2hlY2tlZFN0eWxlcyxcbiAgICAgIC4uLmNyZWF0ZUFwcGVhcmFuY2UoaXRlbXMuY2hlY2tlZERpc2FibGVkKVxuICAgIH0sXG4gICAgW2NoZWNrZWRBY3RpdmVTdGF0ZV06IHtcbiAgICAgIC4uLmNoZWNrZWRTdHlsZXMsXG4gICAgICAuLi5jcmVhdGVBcHBlYXJhbmNlKGl0ZW1zLmNoZWNrZWRBY3RpdmUpXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZVxuIl19