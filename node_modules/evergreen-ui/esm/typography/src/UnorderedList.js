import _extends from "@babel/runtime/helpers/esm/extends";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box from 'ui-box';

var UnorderedList =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(UnorderedList, _PureComponent);

  function UnorderedList() {
    _classCallCheck(this, UnorderedList);

    return _possibleConstructorReturn(this, _getPrototypeOf(UnorderedList).apply(this, arguments));
  }

  _createClass(UnorderedList, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          size = _this$props.size,
          icon = _this$props.icon,
          iconColor = _this$props.iconColor,
          props = _objectWithoutProperties(_this$props, ["children", "size", "icon", "iconColor"]); // Only pass down icon-related props if specified


      var inheritedProps = icon ? {
        size: size,
        icon: icon,
        iconColor: iconColor
      } : {
        size: size
      };
      var finalChildren = React.Children.map(children, function (child) {
        if (!React.isValidElement(child)) {
          return child;
        }

        return React.cloneElement(child, _objectSpread({}, inheritedProps, child.props));
      });
      return React.createElement(Box, _extends({}, UnorderedList.styles, props), finalChildren);
    }
  }]);

  return UnorderedList;
}(PureComponent);

UnorderedList.displayName = "UnorderedList";

_defineProperty(UnorderedList, "propTypes", _objectSpread({}, Box.propTypes, {
  /**
   * Size of the text used in a list item.
   * Can be: 300, 400, 500, 600.
   */
  size: PropTypes.oneOf([300, 400, 500, 600]).isRequired,

  /**
   * When passed, adds a icon before each list item in the list
   * You can override this on a individual list item.
   */
  icon: PropTypes.string,

  /**
   * The color of the icon in each list item in the list.
   */
  iconColor: PropTypes.string
}));

_defineProperty(UnorderedList, "defaultProps", {
  size: 400
});

_defineProperty(UnorderedList, "styles", {
  is: 'ul',
  margin: 0,
  marginLeft: '1.1em',
  padding: 0,
  listStylePosition: 'inside',
  listStyle: 'disc'
});

export { UnorderedList as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9Vbm9yZGVyZWRMaXN0LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIkJveCIsIlVub3JkZXJlZExpc3QiLCJwcm9wcyIsImNoaWxkcmVuIiwic2l6ZSIsImljb24iLCJpY29uQ29sb3IiLCJpbmhlcml0ZWRQcm9wcyIsImZpbmFsQ2hpbGRyZW4iLCJDaGlsZHJlbiIsIm1hcCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJzdHlsZXMiLCJwcm9wVHlwZXMiLCJvbmVPZiIsImlzUmVxdWlyZWQiLCJzdHJpbmciLCJpcyIsIm1hcmdpbiIsIm1hcmdpbkxlZnQiLCJwYWRkaW5nIiwibGlzdFN0eWxlUG9zaXRpb24iLCJsaXN0U3R5bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsUUFBaEI7O0lBRXFCQyxhOzs7Ozs7Ozs7Ozs7OzZCQW1DVjtBQUFBLHdCQUMrQyxLQUFLQyxLQURwRDtBQUFBLFVBQ0NDLFFBREQsZUFDQ0EsUUFERDtBQUFBLFVBQ1dDLElBRFgsZUFDV0EsSUFEWDtBQUFBLFVBQ2lCQyxJQURqQixlQUNpQkEsSUFEakI7QUFBQSxVQUN1QkMsU0FEdkIsZUFDdUJBLFNBRHZCO0FBQUEsVUFDcUNKLEtBRHJDLHFGQUdQOzs7QUFDQSxVQUFNSyxjQUFjLEdBQUdGLElBQUksR0FBRztBQUFFRCxRQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUMsUUFBQUEsSUFBSSxFQUFKQSxJQUFSO0FBQWNDLFFBQUFBLFNBQVMsRUFBVEE7QUFBZCxPQUFILEdBQStCO0FBQUVGLFFBQUFBLElBQUksRUFBSkE7QUFBRixPQUExRDtBQUVBLFVBQU1JLGFBQWEsR0FBR1gsS0FBSyxDQUFDWSxRQUFOLENBQWVDLEdBQWYsQ0FBbUJQLFFBQW5CLEVBQTZCLFVBQUFRLEtBQUssRUFBSTtBQUMxRCxZQUFJLENBQUNkLEtBQUssQ0FBQ2UsY0FBTixDQUFxQkQsS0FBckIsQ0FBTCxFQUFrQztBQUNoQyxpQkFBT0EsS0FBUDtBQUNEOztBQUVELGVBQU9kLEtBQUssQ0FBQ2dCLFlBQU4sQ0FBbUJGLEtBQW5CLG9CQUNGSixjQURFLEVBR0ZJLEtBQUssQ0FBQ1QsS0FISixFQUFQO0FBS0QsT0FWcUIsQ0FBdEI7QUFZQSxhQUNFLG9CQUFDLEdBQUQsZUFBU0QsYUFBYSxDQUFDYSxNQUF2QixFQUFtQ1osS0FBbkMsR0FDR00sYUFESCxDQURGO0FBS0Q7Ozs7RUExRHdDVixhOztBQUF0QkcsYTs7Z0JBQUFBLGEsaUNBRWRELEdBQUcsQ0FBQ2UsUztBQUVQOzs7O0FBSUFYLEVBQUFBLElBQUksRUFBRUwsU0FBUyxDQUFDaUIsS0FBVixDQUFnQixDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixDQUFoQixFQUFzQ0MsVTs7QUFFNUM7Ozs7QUFJQVosRUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNtQixNOztBQUVoQjs7O0FBR0FaLEVBQUFBLFNBQVMsRUFBRVAsU0FBUyxDQUFDbUI7OztnQkFuQkpqQixhLGtCQXNCRztBQUNwQkcsRUFBQUEsSUFBSSxFQUFFO0FBRGMsQzs7Z0JBdEJISCxhLFlBMEJIO0FBQ2RrQixFQUFBQSxFQUFFLEVBQUUsSUFEVTtBQUVkQyxFQUFBQSxNQUFNLEVBQUUsQ0FGTTtBQUdkQyxFQUFBQSxVQUFVLEVBQUUsT0FIRTtBQUlkQyxFQUFBQSxPQUFPLEVBQUUsQ0FKSztBQUtkQyxFQUFBQSxpQkFBaUIsRUFBRSxRQUxMO0FBTWRDLEVBQUFBLFNBQVMsRUFBRTtBQU5HLEM7O1NBMUJHdkIsYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgQm94IGZyb20gJ3VpLWJveCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5vcmRlcmVkTGlzdCBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC4uLkJveC5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBTaXplIG9mIHRoZSB0ZXh0IHVzZWQgaW4gYSBsaXN0IGl0ZW0uXG4gICAgICogQ2FuIGJlOiAzMDAsIDQwMCwgNTAwLCA2MDAuXG4gICAgICovXG4gICAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFszMDAsIDQwMCwgNTAwLCA2MDBdKS5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiBwYXNzZWQsIGFkZHMgYSBpY29uIGJlZm9yZSBlYWNoIGxpc3QgaXRlbSBpbiB0aGUgbGlzdFxuICAgICAqIFlvdSBjYW4gb3ZlcnJpZGUgdGhpcyBvbiBhIGluZGl2aWR1YWwgbGlzdCBpdGVtLlxuICAgICAqL1xuICAgIGljb246IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29sb3Igb2YgdGhlIGljb24gaW4gZWFjaCBsaXN0IGl0ZW0gaW4gdGhlIGxpc3QuXG4gICAgICovXG4gICAgaWNvbkNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHNpemU6IDQwMFxuICB9XG5cbiAgc3RhdGljIHN0eWxlcyA9IHtcbiAgICBpczogJ3VsJyxcbiAgICBtYXJnaW46IDAsXG4gICAgbWFyZ2luTGVmdDogJzEuMWVtJyxcbiAgICBwYWRkaW5nOiAwLFxuICAgIGxpc3RTdHlsZVBvc2l0aW9uOiAnaW5zaWRlJyxcbiAgICBsaXN0U3R5bGU6ICdkaXNjJ1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIHNpemUsIGljb24sIGljb25Db2xvciwgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHNcblxuICAgIC8vIE9ubHkgcGFzcyBkb3duIGljb24tcmVsYXRlZCBwcm9wcyBpZiBzcGVjaWZpZWRcbiAgICBjb25zdCBpbmhlcml0ZWRQcm9wcyA9IGljb24gPyB7IHNpemUsIGljb24sIGljb25Db2xvciB9IDogeyBzaXplIH1cblxuICAgIGNvbnN0IGZpbmFsQ2hpbGRyZW4gPSBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGNoaWxkID0+IHtcbiAgICAgIGlmICghUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgIHJldHVybiBjaGlsZFxuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICAgIC4uLmluaGVyaXRlZFByb3BzLFxuICAgICAgICAvLyBQcmVmZXIgbW9yZSBncmFudWxhcmx5IGRlZmluZWQgaWNvbiBpZiBwcmVzZW50XG4gICAgICAgIC4uLmNoaWxkLnByb3BzXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEJveCB7Li4uVW5vcmRlcmVkTGlzdC5zdHlsZXN9IHsuLi5wcm9wc30+XG4gICAgICAgIHtmaW5hbENoaWxkcmVufVxuICAgICAgPC9Cb3g+XG4gICAgKVxuICB9XG59XG4iXX0=