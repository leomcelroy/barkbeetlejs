export declare class PureStore<S, T> {
    callbacks: any[];
    rootState: T;
    getter: (s: S) => T;
    root: any;
    parent: any;
    constructor(parent: any, getter: (s: S) => T, rootState?: T);
    getState: () => T;
    readonly state: T;
    update: (updater: Partial<T> | ((e: T) => void)) => void;
    storeFor: <X>(getter: (s: T) => X) => PureStore<T, X>;
    updaterFor: <X>(getter: (s: T) => X) => (updater: Partial<X> | ((e: X) => void)) => void;
    subscribe: (callback: any) => () => any[];
}
declare const _default: <S>(state: S) => PureStore<S, S>;
export default _default;
