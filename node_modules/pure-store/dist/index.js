"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var immer_1 = require("immer");
var PureStore = /** @class */ (function () {
    function PureStore(parent, getter, rootState) {
        var _this = this;
        this.callbacks = [];
        this.getState = function () { return _this.getter(_this.root.rootState); };
        this.update = function (updater) {
            var updaterFn = (updater instanceof Function) ?
                updater : function (e) { return Object.assign(e, updater); };
            _this.root.rootState = immer_1.default(_this.root.rootState, function (s) {
                updaterFn(_this.getter(s));
            });
            _this.root.callbacks.forEach(function (callback) { return callback(); });
        };
        this.storeFor = function (getter) { return new PureStore(_this, getter); };
        this.updaterFor = function (getter) { return _this.storeFor(getter).update; };
        this.subscribe = function (callback) {
            if (_this.root != _this)
                throw "Only the top level store can be subscribed to.";
            _this.callbacks.push(callback);
            return function () { return _this.callbacks.splice(_this.callbacks.indexOf(callback), 1); };
        };
        this.parent = parent;
        this.root = (parent && parent.root) || this;
        if (!parent)
            this.rootState = rootState;
        this.getter = function (s) { return getter(parent ? parent.getter(s) : s); };
    }
    Object.defineProperty(PureStore.prototype, "state", {
        get: function () { return this.getState(); },
        enumerable: true,
        configurable: true
    });
    return PureStore;
}());
exports.PureStore = PureStore;
exports.default = (function (state) { return (new PureStore(null, function (s) { return s; }, state)); });
