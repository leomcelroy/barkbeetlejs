'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _glamor = require('glamor');

var _enhancers = require('./enhancers');

var _enhanceProps3 = require('./enhance-props');

var _enhanceProps4 = _interopRequireDefault(_enhanceProps3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cssWarned = false;

var Box = function (_React$Component) {
  _inherits(Box, _React$Component);

  function Box() {
    _classCallCheck(this, Box);

    return _possibleConstructorReturn(this, (Box.__proto__ || Object.getPrototypeOf(Box)).apply(this, arguments));
  }

  _createClass(Box, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          is = _props.is,
          css = _props.css,
          innerRef = _props.innerRef,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['is', 'css', 'innerRef', 'children']);
      // Convert the CSS props to class names (and inject the styles)


      var _enhanceProps = (0, _enhanceProps4.default)(props),
          _enhanceProps2 = _slicedToArray(_enhanceProps, 2),
          className = _enhanceProps2[0],
          parsedProps = _enhanceProps2[1];

      // Add glamor class


      if (css) {
        // Warn that it's deprecated in the development
        if (process.env.NODE_ENV !== 'production') {
          // Don't spam the warning
          if (!cssWarned) {
            cssWarned = true;
            console.warn('\uD83D\uDCE6 ui-box deprecation: the \u201Ccss\u201D prop will be removed in the next major version in favour of importing glamor directly and passing it\u055As generated class to the \u201CclassName\u201D prop.');
          }
        }
        parsedProps.className = className + ' ' + (0, _glamor.css)(css).toString();
      } else {
        parsedProps.className = className;
      }

      if (innerRef) {
        parsedProps.ref = function (node) {
          innerRef(node);
        };
      }

      return _react2.default.createElement(is, parsedProps, children);
    }
  }]);

  return Box;
}(_react2.default.Component);

Box.displayName = 'Box';
Box.propTypes = _extends({}, _enhancers.propTypes, {
  css: _propTypes2.default.object,
  innerRef: _propTypes2.default.func,
  is: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  boxSizing: _enhancers.propTypes.boxSizing
});
Box.defaultProps = {
  css: null,
  innerRef: null,
  is: 'div',
  boxSizing: 'border-box'
};
exports.default = Box;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ib3guanMiXSwibmFtZXMiOlsiY3NzV2FybmVkIiwiQm94IiwicHJvcHMiLCJpcyIsImNzcyIsImlubmVyUmVmIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJwYXJzZWRQcm9wcyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImNvbnNvbGUiLCJ3YXJuIiwidG9TdHJpbmciLCJyZWYiLCJub2RlIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwiQ29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvYmplY3QiLCJmdW5jIiwib25lT2ZUeXBlIiwic3RyaW5nIiwiYm94U2l6aW5nIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBSUEsWUFBWSxLQUFoQjs7SUFFcUJDLEc7Ozs7Ozs7Ozs7OzZCQWtCVjtBQUFBLG1CQUN5QyxLQUFLQyxLQUQ5QztBQUFBLFVBQ0FDLEVBREEsVUFDQUEsRUFEQTtBQUFBLFVBQ0lDLEdBREosVUFDSUEsR0FESjtBQUFBLFVBQ1NDLFFBRFQsVUFDU0EsUUFEVDtBQUFBLFVBQ21CQyxRQURuQixVQUNtQkEsUUFEbkI7QUFBQSxVQUNnQ0osS0FEaEM7QUFFUDs7O0FBRk8sMEJBRzBCLDRCQUFhQSxLQUFiLENBSDFCO0FBQUE7QUFBQSxVQUdBSyxTQUhBO0FBQUEsVUFHV0MsV0FIWDs7QUFLUDs7O0FBQ0EsVUFBSUosR0FBSixFQUFTO0FBQ1A7QUFDQSxZQUFJSyxRQUFRQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkM7QUFDekM7QUFDQSxjQUFJLENBQUNYLFNBQUwsRUFBZ0I7QUFDZEEsd0JBQVksSUFBWjtBQUNBWSxvQkFBUUMsSUFBUjtBQUdEO0FBQ0Y7QUFDREwsb0JBQVlELFNBQVosR0FBMkJBLFNBQTNCLFNBQXdDLGlCQUFLSCxHQUFMLEVBQVVVLFFBQVYsRUFBeEM7QUFDRCxPQVpELE1BWU87QUFDTE4sb0JBQVlELFNBQVosR0FBd0JBLFNBQXhCO0FBQ0Q7O0FBRUQsVUFBSUYsUUFBSixFQUFjO0FBQ1pHLG9CQUFZTyxHQUFaLEdBQWtCLGdCQUFRO0FBQ3hCVixtQkFBU1csSUFBVDtBQUNELFNBRkQ7QUFHRDs7QUFFRCxhQUFPQyxnQkFBTUMsYUFBTixDQUFvQmYsRUFBcEIsRUFBd0JLLFdBQXhCLEVBQXFDRixRQUFyQyxDQUFQO0FBQ0Q7Ozs7RUEvQzhCVyxnQkFBTUUsUzs7QUFBbEJsQixHLENBQ1ptQixXLEdBQWMsSztBQURGbkIsRyxDQUdab0IsUyxnQkFDRkEsb0I7QUFDSGpCLE9BQUtrQixvQkFBVUMsTTtBQUNmbEIsWUFBVWlCLG9CQUFVRSxJO0FBQ3BCckIsTUFBSW1CLG9CQUFVRyxTQUFWLENBQW9CLENBQUNILG9CQUFVSSxNQUFYLEVBQW1CSixvQkFBVUUsSUFBN0IsQ0FBcEIsQztBQUNKRyxhQUFXTixxQkFBVU07O0FBUkoxQixHLENBV1oyQixZLEdBQWU7QUFDcEJ4QixPQUFLLElBRGU7QUFFcEJDLFlBQVUsSUFGVTtBQUdwQkYsTUFBSSxLQUhnQjtBQUlwQndCLGFBQVc7QUFKUyxDO2tCQVhIMUIsRyIsImZpbGUiOiJib3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQge2NzcyBhcyBnY3NzfSBmcm9tICdnbGFtb3InXG5pbXBvcnQge3Byb3BUeXBlc30gZnJvbSAnLi9lbmhhbmNlcnMnXG5pbXBvcnQgZW5oYW5jZVByb3BzIGZyb20gJy4vZW5oYW5jZS1wcm9wcydcblxubGV0IGNzc1dhcm5lZCA9IGZhbHNlXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJveCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBkaXNwbGF5TmFtZSA9ICdCb3gnXG5cbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAuLi5wcm9wVHlwZXMsXG4gICAgY3NzOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGlubmVyUmVmOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBpczogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgICBib3hTaXppbmc6IHByb3BUeXBlcy5ib3hTaXppbmdcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgY3NzOiBudWxsLFxuICAgIGlubmVyUmVmOiBudWxsLFxuICAgIGlzOiAnZGl2JyxcbiAgICBib3hTaXppbmc6ICdib3JkZXItYm94J1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtpcywgY3NzLCBpbm5lclJlZiwgY2hpbGRyZW4sIC4uLnByb3BzfSA9IHRoaXMucHJvcHNcbiAgICAvLyBDb252ZXJ0IHRoZSBDU1MgcHJvcHMgdG8gY2xhc3MgbmFtZXMgKGFuZCBpbmplY3QgdGhlIHN0eWxlcylcbiAgICBjb25zdCBbY2xhc3NOYW1lLCBwYXJzZWRQcm9wc10gPSBlbmhhbmNlUHJvcHMocHJvcHMpXG5cbiAgICAvLyBBZGQgZ2xhbW9yIGNsYXNzXG4gICAgaWYgKGNzcykge1xuICAgICAgLy8gV2FybiB0aGF0IGl0J3MgZGVwcmVjYXRlZCBpbiB0aGUgZGV2ZWxvcG1lbnRcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIC8vIERvbid0IHNwYW0gdGhlIHdhcm5pbmdcbiAgICAgICAgaWYgKCFjc3NXYXJuZWQpIHtcbiAgICAgICAgICBjc3NXYXJuZWQgPSB0cnVlXG4gICAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICAgYPCfk6YgdWktYm94IGRlcHJlY2F0aW9uOiB0aGUg4oCcY3Nz4oCdIHByb3Agd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24gaW4gZmF2b3VyIG9mIGltcG9ydGluZyBnbGFtb3IgZGlyZWN0bHkgYW5kIHBhc3NpbmcgaXTVmnMgZ2VuZXJhdGVkIGNsYXNzIHRvIHRoZSDigJxjbGFzc05hbWXigJ0gcHJvcC5gXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBwYXJzZWRQcm9wcy5jbGFzc05hbWUgPSBgJHtjbGFzc05hbWV9ICR7Z2Nzcyhjc3MpLnRvU3RyaW5nKCl9YFxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJzZWRQcm9wcy5jbGFzc05hbWUgPSBjbGFzc05hbWVcbiAgICB9XG5cbiAgICBpZiAoaW5uZXJSZWYpIHtcbiAgICAgIHBhcnNlZFByb3BzLnJlZiA9IG5vZGUgPT4ge1xuICAgICAgICBpbm5lclJlZihub2RlKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGlzLCBwYXJzZWRQcm9wcywgY2hpbGRyZW4pXG4gIH1cbn1cbiJdfQ==