'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.get = get;
exports.set = set;
exports.entries = entries;
exports.hydrate = hydrate;
exports.clear = clear;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var cache = new Map();

function get(property, value) {
  return cache.get(property + value);
}

function set(property, value, className) {
  if (process.env.NODE_ENV !== 'production') {
    var valueType = typeof value === 'undefined' ? 'undefined' : _typeof(value);
    if (valueType !== 'boolean' && valueType !== 'number' && valueType !== 'string') {
      var encodedValue = JSON.stringify(value);
      throw new TypeError('\uD83D\uDCE6 ui-box: invalid cache value \u201C' + encodedValue + '\u201D. Only booleans, numbers and strings are supported.');
    }
  }

  cache.set(property + value, className);
}

function entries() {
  return [].concat(_toConsumableArray(cache));
}

function hydrate(newEntries) {
  cache = new Map([].concat(_toConsumableArray(cache), _toConsumableArray(newEntries)));
}

function clear() {
  cache.clear();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jYWNoZS5qcyJdLCJuYW1lcyI6WyJnZXQiLCJzZXQiLCJlbnRyaWVzIiwiaHlkcmF0ZSIsImNsZWFyIiwiY2FjaGUiLCJNYXAiLCJwcm9wZXJ0eSIsInZhbHVlIiwiY2xhc3NOYW1lIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwidmFsdWVUeXBlIiwiZW5jb2RlZFZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsIlR5cGVFcnJvciIsIm5ld0VudHJpZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O1FBRWdCQSxHLEdBQUFBLEc7UUFJQUMsRyxHQUFBQSxHO1FBa0JBQyxPLEdBQUFBLE87UUFJQUMsTyxHQUFBQSxPO1FBSUFDLEssR0FBQUEsSzs7OztBQWhDaEIsSUFBSUMsUUFBUSxJQUFJQyxHQUFKLEVBQVo7O0FBRU8sU0FBU04sR0FBVCxDQUFhTyxRQUFiLEVBQXVCQyxLQUF2QixFQUE4QjtBQUNuQyxTQUFPSCxNQUFNTCxHQUFOLENBQVVPLFdBQVdDLEtBQXJCLENBQVA7QUFDRDs7QUFFTSxTQUFTUCxHQUFULENBQWFNLFFBQWIsRUFBdUJDLEtBQXZCLEVBQThCQyxTQUE5QixFQUF5QztBQUM5QyxNQUFJQyxRQUFRQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkM7QUFDekMsUUFBTUMsbUJBQW1CTCxLQUFuQix5Q0FBbUJBLEtBQW5CLENBQU47QUFDQSxRQUNFSyxjQUFjLFNBQWQsSUFDQUEsY0FBYyxRQURkLElBRUFBLGNBQWMsUUFIaEIsRUFJRTtBQUNBLFVBQU1DLGVBQWVDLEtBQUtDLFNBQUwsQ0FBZVIsS0FBZixDQUFyQjtBQUNBLFlBQU0sSUFBSVMsU0FBSixxREFDK0JILFlBRC9CLCtEQUFOO0FBR0Q7QUFDRjs7QUFFRFQsUUFBTUosR0FBTixDQUFVTSxXQUFXQyxLQUFyQixFQUE0QkMsU0FBNUI7QUFDRDs7QUFFTSxTQUFTUCxPQUFULEdBQW1CO0FBQ3hCLHNDQUFXRyxLQUFYO0FBQ0Q7O0FBRU0sU0FBU0YsT0FBVCxDQUFpQmUsVUFBakIsRUFBNkI7QUFDbENiLFVBQVEsSUFBSUMsR0FBSiw4QkFBWUQsS0FBWixzQkFBc0JhLFVBQXRCLEdBQVI7QUFDRDs7QUFFTSxTQUFTZCxLQUFULEdBQWlCO0FBQ3RCQyxRQUFNRCxLQUFOO0FBQ0QiLCJmaWxlIjoiY2FjaGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY2FjaGUgPSBuZXcgTWFwKClcblxuZXhwb3J0IGZ1bmN0aW9uIGdldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgcmV0dXJuIGNhY2hlLmdldChwcm9wZXJ0eSArIHZhbHVlKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0KHByb3BlcnR5LCB2YWx1ZSwgY2xhc3NOYW1lKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgY29uc3QgdmFsdWVUeXBlID0gdHlwZW9mIHZhbHVlXG4gICAgaWYgKFxuICAgICAgdmFsdWVUeXBlICE9PSAnYm9vbGVhbicgJiZcbiAgICAgIHZhbHVlVHlwZSAhPT0gJ251bWJlcicgJiZcbiAgICAgIHZhbHVlVHlwZSAhPT0gJ3N0cmluZydcbiAgICApIHtcbiAgICAgIGNvbnN0IGVuY29kZWRWYWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKVxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgYPCfk6YgdWktYm94OiBpbnZhbGlkIGNhY2hlIHZhbHVlIOKAnCR7ZW5jb2RlZFZhbHVlfeKAnS4gT25seSBib29sZWFucywgbnVtYmVycyBhbmQgc3RyaW5ncyBhcmUgc3VwcG9ydGVkLmBcbiAgICAgIClcbiAgICB9XG4gIH1cblxuICBjYWNoZS5zZXQocHJvcGVydHkgKyB2YWx1ZSwgY2xhc3NOYW1lKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZW50cmllcygpIHtcbiAgcmV0dXJuIFsuLi5jYWNoZV1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGh5ZHJhdGUobmV3RW50cmllcykge1xuICBjYWNoZSA9IG5ldyBNYXAoWy4uLmNhY2hlLCAuLi5uZXdFbnRyaWVzXSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyKCkge1xuICBjYWNoZS5jbGVhcigpXG59XG4iXX0=