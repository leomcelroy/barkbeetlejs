'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getCss = require('../get-css');

var _getCss2 = _interopRequireDefault(_getCss);

var _regex = require('../utils/regex');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = exports.propTypes = {
  borderBottomLeftRadius: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  borderBottomRightRadius: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  borderRadius: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  borderTopLeftRadius: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  borderTopRightRadius: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
};

var propAliases = exports.propAliases = {
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius']
};

var propValidators = exports.propValidators = {};

if (process.env.NODE_ENV !== 'production') {
  propValidators.borderRadius = function (value) {
    if (_regex.spacesOutsideParentheses.test(value)) {
      return 'multiple values (\u201C' + value + '\u201D) aren\u055At supported with \u201CborderRadius\u201D. Use \u201CborderBottomLeftRadius\u201D, \u201CborderBottomRightRadius\u201D \u201CborderTopLeftRadius\u201D and \u201CborderTopRightRadius\u201D instead.';
    }
  };
}

var _borderTopLeftRadius = {
  className: 'btlr',
  cssName: 'border-top-left-radius',
  jsName: 'borderTopLeftRadius'
};
var _borderTopRightRadius = {
  className: 'btrr',
  cssName: 'border-top-right-radius',
  jsName: 'borderTopRightRadius'
};
var _borderBottomLeftRadius = {
  className: 'bblr',
  cssName: 'border-bottom-left-radius',
  jsName: 'borderBottomLeftRadius'
};
var _borderBottomRightRadius = {
  className: 'bbrr',
  cssName: 'border-bottom-right-radius',
  jsName: 'borderBottomRightRadius'
};

var propEnhancers = exports.propEnhancers = {
  borderBottomLeftRadius: function borderBottomLeftRadius(value) {
    return (0, _getCss2.default)(_borderBottomLeftRadius, value);
  },
  borderBottomRightRadius: function borderBottomRightRadius(value) {
    return (0, _getCss2.default)(_borderBottomRightRadius, value);
  },
  borderTopLeftRadius: function borderTopLeftRadius(value) {
    return (0, _getCss2.default)(_borderTopLeftRadius, value);
  },
  borderTopRightRadius: function borderTopRightRadius(value) {
    return (0, _getCss2.default)(_borderTopRightRadius, value);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbmhhbmNlcnMvYm9yZGVyLXJhZGl1cy5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiUHJvcFR5cGVzIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibnVtYmVyIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJib3JkZXJSYWRpdXMiLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJwcm9wQWxpYXNlcyIsInByb3BWYWxpZGF0b3JzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwic3BhY2VzT3V0c2lkZVBhcmVudGhlc2VzIiwidGVzdCIsInZhbHVlIiwiY2xhc3NOYW1lIiwiY3NzTmFtZSIsImpzTmFtZSIsInByb3BFbmhhbmNlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFTyxJQUFNQSxnQ0FBWTtBQUN2QkMsMEJBQXdCQyxvQkFBVUMsU0FBVixDQUFvQixDQUMxQ0Qsb0JBQVVFLE1BRGdDLEVBRTFDRixvQkFBVUcsTUFGZ0MsQ0FBcEIsQ0FERDtBQUt2QkMsMkJBQXlCSixvQkFBVUMsU0FBVixDQUFvQixDQUMzQ0Qsb0JBQVVFLE1BRGlDLEVBRTNDRixvQkFBVUcsTUFGaUMsQ0FBcEIsQ0FMRjtBQVN2QkUsZ0JBQWNMLG9CQUFVQyxTQUFWLENBQW9CLENBQUNELG9CQUFVRSxNQUFYLEVBQW1CRixvQkFBVUcsTUFBN0IsQ0FBcEIsQ0FUUztBQVV2QkcsdUJBQXFCTixvQkFBVUMsU0FBVixDQUFvQixDQUN2Q0Qsb0JBQVVFLE1BRDZCLEVBRXZDRixvQkFBVUcsTUFGNkIsQ0FBcEIsQ0FWRTtBQWN2Qkksd0JBQXNCUCxvQkFBVUMsU0FBVixDQUFvQixDQUN4Q0Qsb0JBQVVFLE1BRDhCLEVBRXhDRixvQkFBVUcsTUFGOEIsQ0FBcEI7QUFkQyxDQUFsQjs7QUFvQkEsSUFBTUssb0NBQWM7QUFDekJILGdCQUFjLENBQ1osd0JBRFksRUFFWix5QkFGWSxFQUdaLHFCQUhZLEVBSVosc0JBSlk7QUFEVyxDQUFwQjs7QUFTQSxJQUFNSSwwQ0FBaUIsRUFBdkI7O0FBRVAsSUFBSUMsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDSCxpQkFBZUosWUFBZixHQUE4QixpQkFBUztBQUNyQyxRQUFJUSxnQ0FBeUJDLElBQXpCLENBQThCQyxLQUE5QixDQUFKLEVBQTBDO0FBQ3hDLHlDQUE0QkEsS0FBNUI7QUFDRDtBQUNGLEdBSkQ7QUFLRDs7QUFFRCxJQUFNVCx1QkFBc0I7QUFDMUJVLGFBQVcsTUFEZTtBQUUxQkMsV0FBUyx3QkFGaUI7QUFHMUJDLFVBQVE7QUFIa0IsQ0FBNUI7QUFLQSxJQUFNWCx3QkFBdUI7QUFDM0JTLGFBQVcsTUFEZ0I7QUFFM0JDLFdBQVMseUJBRmtCO0FBRzNCQyxVQUFRO0FBSG1CLENBQTdCO0FBS0EsSUFBTW5CLDBCQUF5QjtBQUM3QmlCLGFBQVcsTUFEa0I7QUFFN0JDLFdBQVMsMkJBRm9CO0FBRzdCQyxVQUFRO0FBSHFCLENBQS9CO0FBS0EsSUFBTWQsMkJBQTBCO0FBQzlCWSxhQUFXLE1BRG1CO0FBRTlCQyxXQUFTLDRCQUZxQjtBQUc5QkMsVUFBUTtBQUhzQixDQUFoQzs7QUFNTyxJQUFNQyx3Q0FBZ0I7QUFDM0JwQiwwQkFBd0I7QUFBQSxXQUFTLHNCQUFPQSx1QkFBUCxFQUErQmdCLEtBQS9CLENBQVQ7QUFBQSxHQURHO0FBRTNCWCwyQkFBeUI7QUFBQSxXQUFTLHNCQUFPQSx3QkFBUCxFQUFnQ1csS0FBaEMsQ0FBVDtBQUFBLEdBRkU7QUFHM0JULHVCQUFxQjtBQUFBLFdBQVMsc0JBQU9BLG9CQUFQLEVBQTRCUyxLQUE1QixDQUFUO0FBQUEsR0FITTtBQUkzQlIsd0JBQXNCO0FBQUEsV0FBUyxzQkFBT0EscUJBQVAsRUFBNkJRLEtBQTdCLENBQVQ7QUFBQTtBQUpLLENBQXRCIiwiZmlsZSI6ImJvcmRlci1yYWRpdXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgZ2V0Q3NzIGZyb20gJy4uL2dldC1jc3MnXG5pbXBvcnQge3NwYWNlc091dHNpZGVQYXJlbnRoZXNlc30gZnJvbSAnLi4vdXRpbHMvcmVnZXgnXG5cbmV4cG9ydCBjb25zdCBwcm9wVHlwZXMgPSB7XG4gIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLm51bWJlclxuICBdKSxcbiAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLm51bWJlclxuICBdKSxcbiAgYm9yZGVyUmFkaXVzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSksXG4gIGJvcmRlclRvcExlZnRSYWRpdXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLm51bWJlclxuICBdKSxcbiAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLm51bWJlclxuICBdKVxufVxuXG5leHBvcnQgY29uc3QgcHJvcEFsaWFzZXMgPSB7XG4gIGJvcmRlclJhZGl1czogW1xuICAgICdib3JkZXJCb3R0b21MZWZ0UmFkaXVzJyxcbiAgICAnYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMnLFxuICAgICdib3JkZXJUb3BMZWZ0UmFkaXVzJyxcbiAgICAnYm9yZGVyVG9wUmlnaHRSYWRpdXMnXG4gIF1cbn1cblxuZXhwb3J0IGNvbnN0IHByb3BWYWxpZGF0b3JzID0ge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgcHJvcFZhbGlkYXRvcnMuYm9yZGVyUmFkaXVzID0gdmFsdWUgPT4ge1xuICAgIGlmIChzcGFjZXNPdXRzaWRlUGFyZW50aGVzZXMudGVzdCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBgbXVsdGlwbGUgdmFsdWVzICjigJwke3ZhbHVlfeKAnSkgYXJlbtWadCBzdXBwb3J0ZWQgd2l0aCDigJxib3JkZXJSYWRpdXPigJ0uIFVzZSDigJxib3JkZXJCb3R0b21MZWZ0UmFkaXVz4oCdLCDigJxib3JkZXJCb3R0b21SaWdodFJhZGl1c+KAnSDigJxib3JkZXJUb3BMZWZ0UmFkaXVz4oCdIGFuZCDigJxib3JkZXJUb3BSaWdodFJhZGl1c+KAnSBpbnN0ZWFkLmBcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgYm9yZGVyVG9wTGVmdFJhZGl1cyA9IHtcbiAgY2xhc3NOYW1lOiAnYnRscicsXG4gIGNzc05hbWU6ICdib3JkZXItdG9wLWxlZnQtcmFkaXVzJyxcbiAganNOYW1lOiAnYm9yZGVyVG9wTGVmdFJhZGl1cydcbn1cbmNvbnN0IGJvcmRlclRvcFJpZ2h0UmFkaXVzID0ge1xuICBjbGFzc05hbWU6ICdidHJyJyxcbiAgY3NzTmFtZTogJ2JvcmRlci10b3AtcmlnaHQtcmFkaXVzJyxcbiAganNOYW1lOiAnYm9yZGVyVG9wUmlnaHRSYWRpdXMnXG59XG5jb25zdCBib3JkZXJCb3R0b21MZWZ0UmFkaXVzID0ge1xuICBjbGFzc05hbWU6ICdiYmxyJyxcbiAgY3NzTmFtZTogJ2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXMnLFxuICBqc05hbWU6ICdib3JkZXJCb3R0b21MZWZ0UmFkaXVzJ1xufVxuY29uc3QgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMgPSB7XG4gIGNsYXNzTmFtZTogJ2JicnInLFxuICBjc3NOYW1lOiAnYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXMnLFxuICBqc05hbWU6ICdib3JkZXJCb3R0b21SaWdodFJhZGl1cydcbn1cblxuZXhwb3J0IGNvbnN0IHByb3BFbmhhbmNlcnMgPSB7XG4gIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IHZhbHVlID0+IGdldENzcyhib3JkZXJCb3R0b21MZWZ0UmFkaXVzLCB2YWx1ZSksXG4gIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiB2YWx1ZSA9PiBnZXRDc3MoYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMsIHZhbHVlKSxcbiAgYm9yZGVyVG9wTGVmdFJhZGl1czogdmFsdWUgPT4gZ2V0Q3NzKGJvcmRlclRvcExlZnRSYWRpdXMsIHZhbHVlKSxcbiAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IHZhbHVlID0+IGdldENzcyhib3JkZXJUb3BSaWdodFJhZGl1cywgdmFsdWUpXG59XG4iXX0=