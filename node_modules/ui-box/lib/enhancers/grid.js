'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getCss = require('../get-css');

var _getCss2 = _interopRequireDefault(_getCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = exports.propTypes = {
  columnGap: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gap: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  grid: _propTypes2.default.string,
  gridArea: _propTypes2.default.string,
  gridAutoColumns: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridAutoFlow: _propTypes2.default.string,
  gridAutoRows: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridColumn: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridColumnEnd: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridColumnGap: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridColumnStart: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridGap: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridRow: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridRowEnd: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridRowGap: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridRowStart: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  gridTemplate: _propTypes2.default.string,
  gridTemplateAreas: _propTypes2.default.string,
  gridTemplateColumns: _propTypes2.default.string,
  gridTemplateRows: _propTypes2.default.string,
  rowGap: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
};

var propAliases = exports.propAliases = {};

var propValidators = exports.propValidators = {};

var _columnGap = {
  className: 'col-gap',
  cssName: 'column-gap',
  jsName: 'columnGap'
};
var _gap = {
  className: 'gap',
  cssName: 'gap',
  jsName: 'gap'
};
var _grid = {
  className: 'grd',
  cssName: 'grid',
  jsName: 'grid',
  complexValue: true
};
var _gridArea = {
  className: 'grd-ara',
  cssName: 'grid-area',
  jsName: 'gridArea',
  complexValue: true
};
var _gridAutoColumns = {
  className: 'grd-ato-col',
  cssName: 'grid-auto-columns',
  jsName: 'gridAutoColumns',
  complexValue: true
};
var _gridAutoFlow = {
  className: 'grd-ato-flw',
  cssName: 'grid-auto-flow',
  jsName: 'gridAutoFlow'
};
var _gridAutoRows = {
  className: 'grd-ato-row',
  cssName: 'grid-auto-rows',
  jsName: 'gridAutoRows',
  complexValue: true
};
var _gridColumn = {
  className: 'grd-col',
  cssName: 'grid-column',
  jsName: 'gridColumn',
  defaultUnit: '',
  complexValue: true
};
var _gridColumnEnd = {
  className: 'grd-col-end',
  cssName: 'grid-column-end',
  jsName: 'gridColumnEnd',
  defaultUnit: ''
};
var _gridColumnGap = {
  className: 'grd-col-gap',
  cssName: 'grid-column-gap',
  jsName: 'gridColumnGap'
};
var _gridColumnStart = {
  className: 'grd-col-str',
  cssName: 'grid-column-start',
  jsName: 'gridColumnStart',
  defaultUnit: ''
};
var _gridGap = {
  className: 'grd-gap',
  cssName: 'grid-gap',
  jsName: 'gridGap'
};
var _gridRow = {
  className: 'grd-row',
  cssName: 'grid-row',
  jsName: 'gridRow',
  defaultUnit: '',
  complexValue: true
};
var _gridRowEnd = {
  className: 'grd-row-end',
  cssName: 'grid-row-end',
  jsName: 'gridRowEnd',
  defaultUnit: ''
};
var _gridRowGap = {
  className: 'grd-row-gap',
  cssName: 'grid-row-gap',
  jsName: 'gridRowGap'
};
var _gridRowStart = {
  className: 'grd-row-str',
  cssName: 'grid-row-start',
  jsName: 'gridRowStart',
  defaultUnit: ''
};
var _gridTemplate = {
  className: 'grd-tmp',
  cssName: 'grid-template',
  jsName: 'gridTemplate',
  complexValue: true
};
var _gridTemplateAreas = {
  className: 'grd-tmp-ara',
  cssName: 'grid-template-areas',
  jsName: 'gridTemplateAreas',
  complexValue: true
};
var _gridTemplateColumns = {
  className: 'grd-tmp-col',
  cssName: 'grid-template-columns',
  jsName: 'gridTemplateColumns',
  complexValue: true
};
var _gridTemplateRows = {
  className: 'grd-tmp-row',
  cssName: 'grid-template-rows',
  jsName: 'gridTemplateRows',
  complexValue: true
};
var _rowGap = {
  className: 'row-gap',
  cssName: 'row-gap',
  jsName: 'rowGap'
};

var propEnhancers = exports.propEnhancers = {
  columnGap: function columnGap(value) {
    return (0, _getCss2.default)(_columnGap, value);
  },
  gap: function gap(value) {
    return (0, _getCss2.default)(_gap, value);
  },
  grid: function grid(value) {
    return (0, _getCss2.default)(_grid, value);
  },
  gridArea: function gridArea(value) {
    return (0, _getCss2.default)(_gridArea, value);
  },
  gridAutoColumns: function gridAutoColumns(value) {
    return (0, _getCss2.default)(_gridAutoColumns, value);
  },
  gridAutoFlow: function gridAutoFlow(value) {
    return (0, _getCss2.default)(_gridAutoFlow, value);
  },
  gridAutoRows: function gridAutoRows(value) {
    return (0, _getCss2.default)(_gridAutoRows, value);
  },
  gridColumn: function gridColumn(value) {
    return (0, _getCss2.default)(_gridColumn, value);
  },
  gridColumnEnd: function gridColumnEnd(value) {
    return (0, _getCss2.default)(_gridColumnEnd, value);
  },
  gridColumnGap: function gridColumnGap(value) {
    return (0, _getCss2.default)(_gridColumnGap, value);
  },
  gridColumnStart: function gridColumnStart(value) {
    return (0, _getCss2.default)(_gridColumnStart, value);
  },
  gridGap: function gridGap(value) {
    return (0, _getCss2.default)(_gridGap, value);
  },
  gridRow: function gridRow(value) {
    return (0, _getCss2.default)(_gridRow, value);
  },
  gridRowEnd: function gridRowEnd(value) {
    return (0, _getCss2.default)(_gridRowEnd, value);
  },
  gridRowGap: function gridRowGap(value) {
    return (0, _getCss2.default)(_gridRowGap, value);
  },
  gridRowStart: function gridRowStart(value) {
    return (0, _getCss2.default)(_gridRowStart, value);
  },
  gridTemplate: function gridTemplate(value) {
    return (0, _getCss2.default)(_gridTemplate, value);
  },
  gridTemplateAreas: function gridTemplateAreas(value) {
    return (0, _getCss2.default)(_gridTemplateAreas, value);
  },
  gridTemplateColumns: function gridTemplateColumns(value) {
    return (0, _getCss2.default)(_gridTemplateColumns, value);
  },
  gridTemplateRows: function gridTemplateRows(value) {
    return (0, _getCss2.default)(_gridTemplateRows, value);
  },
  rowGap: function rowGap(value) {
    return (0, _getCss2.default)(_rowGap, value);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,